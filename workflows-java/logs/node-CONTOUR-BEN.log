[INFO ] 2020-09-22T07:26:53,542Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/C:/tests/cordapp-example/workflows-java/build/generated-custom-cordapps/20200922-072652.425/custom-cordapp_1_7_8a8592c2-c913-42f2-9269-9696e8e752f1.jar, rootPackageName=null), RestrictedURL(url=file:/C:/tests/cordapp-example/workflows-java/build/generated-custom-cordapps/20200922-072652.425/custom-cordapp_1_7_42ac860d-25c9-46bf-afad-e5b94d7f5d7d.jar, rootPackageName=null) {}
[INFO ] 2020-09-22T07:26:53,753Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/tests/cordapp-example/workflows-java/build/generated-custom-cordapps/20200922-072652.425/custom-cordapp_1_7_8a8592c2-c913-42f2-9269-9696e8e752f1.jar {}
[INFO ] 2020-09-22T07:26:54,071Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/tests/cordapp-example/workflows-java/build/generated-custom-cordapps/20200922-072652.425/custom-cordapp_1_7_42ac860d-25c9-46bf-afad-e5b94d7f5d7d.jar {}
[ERROR] 2020-09-22T07:26:58,880Z [Test worker] internal.Verifier. - Error validating transaction CE05F6C1752B4563253D53BBE37795F31206D52C26C822F15C0B70E49B518CB8. - Failed requirement: The lender and the borrower cannot be the same entity. [errorCode=9q63wp, moreInformationAt=https://errors.corda.net/OS/4.5/9q63wp] {}
java.lang.IllegalArgumentException: Failed requirement: The lender and the borrower cannot be the same entity.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.5.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:44) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.5.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:37) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:421) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:373) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:206) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext(TransactionBuilder.kt:186) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:146) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:140) ~[corda-core-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:142) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:186) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:78) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TransactionDSL.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$null$10(IOUContractTests.java:96) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:281) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:305) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:341) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$lenderIsNotBorrower$11(IOUContractTests.java:93) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:19) ~[corda-test-common-4.5.jar:?]
	at net.corda.coretesting.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:54) ~[corda-core-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt) ~[corda-node-driver-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.lenderIsNotBorrower(IOUContractTests.java:92) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_261]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_261]
[ERROR] 2020-09-22T07:26:58,884Z [Test worker] internal.Verifier. - Error validating transaction CE05F6C1752B4563253D53BBE37795F31206D52C26C822F15C0B70E49B518CB8. - Failed requirement: The lender and the borrower cannot be the same entity. [errorCode=9q63wp, moreInformationAt=https://errors.corda.net/OS/4.5/9q63wp] {}
java.lang.IllegalArgumentException: Failed requirement: The lender and the borrower cannot be the same entity.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.5.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:44) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.5.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:37) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:421) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:373) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:186) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:78) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TransactionDSL.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$null$10(IOUContractTests.java:96) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:281) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:305) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:341) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$lenderIsNotBorrower$11(IOUContractTests.java:93) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:19) ~[corda-test-common-4.5.jar:?]
	at net.corda.coretesting.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:54) ~[corda-core-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt) ~[corda-node-driver-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.lenderIsNotBorrower(IOUContractTests.java:92) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_261]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_261]
[ERROR] 2020-09-22T07:26:58,903Z [Test worker] internal.Verifier. - Error validating transaction CE05F6C1752B4563253D53BBE37795F31206D52C26C822F15C0B70E49B518CB8. - Failed requirement: The lender and the borrower cannot be the same entity. [errorCode=9q63wp, moreInformationAt=https://errors.corda.net/OS/4.5/9q63wp] {}
java.lang.IllegalArgumentException: Failed requirement: The lender and the borrower cannot be the same entity.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.5.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:44) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.5.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:37) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:421) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:373) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:206) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext(TransactionBuilder.kt:186) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:146) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:140) ~[corda-core-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:142) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:309) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:341) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$lenderIsNotBorrower$11(IOUContractTests.java:93) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:19) ~[corda-test-common-4.5.jar:?]
	at net.corda.coretesting.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:54) ~[corda-core-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt) ~[corda-node-driver-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.lenderIsNotBorrower(IOUContractTests.java:92) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_261]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_261]
[ERROR] 2020-09-22T07:26:59,202Z [Test worker] internal.Verifier. - Error validating transaction E8F0AD7326A4653E17478AC7F02A6F7ADD752CFC8E56BF524A1A530A8BD2464C. - Failed requirement: Only one output state should be created. [errorCode=9q63wp, moreInformationAt=https://errors.corda.net/OS/4.5/9q63wp] {}
java.lang.IllegalArgumentException: Failed requirement: Only one output state should be created.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.5.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:41) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.5.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:37) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:421) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:373) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:206) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext(TransactionBuilder.kt:186) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:146) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:140) ~[corda-core-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:142) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:186) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:78) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TransactionDSL.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$null$4(IOUContractTests.java:56) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:281) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:305) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:341) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$transactionMustHaveOneOutput$5(IOUContractTests.java:52) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:19) ~[corda-test-common-4.5.jar:?]
	at net.corda.coretesting.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:54) ~[corda-core-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt) ~[corda-node-driver-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.transactionMustHaveOneOutput(IOUContractTests.java:51) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_261]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_261]
[ERROR] 2020-09-22T07:26:59,210Z [Test worker] internal.Verifier. - Error validating transaction E8F0AD7326A4653E17478AC7F02A6F7ADD752CFC8E56BF524A1A530A8BD2464C. - Failed requirement: Only one output state should be created. [errorCode=9q63wp, moreInformationAt=https://errors.corda.net/OS/4.5/9q63wp] {}
java.lang.IllegalArgumentException: Failed requirement: Only one output state should be created.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.5.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:41) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.5.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:37) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:421) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:373) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:186) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:78) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TransactionDSL.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$null$4(IOUContractTests.java:56) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:281) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:305) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:341) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$transactionMustHaveOneOutput$5(IOUContractTests.java:52) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:19) ~[corda-test-common-4.5.jar:?]
	at net.corda.coretesting.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:54) ~[corda-core-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt) ~[corda-node-driver-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.transactionMustHaveOneOutput(IOUContractTests.java:51) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_261]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_261]
[ERROR] 2020-09-22T07:26:59,294Z [Test worker] internal.Verifier. - Error validating transaction E8F0AD7326A4653E17478AC7F02A6F7ADD752CFC8E56BF524A1A530A8BD2464C. - Failed requirement: Only one output state should be created. [errorCode=9q63wp, moreInformationAt=https://errors.corda.net/OS/4.5/9q63wp] {}
java.lang.IllegalArgumentException: Failed requirement: Only one output state should be created.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.5.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:41) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.5.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:37) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:421) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:373) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:206) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext(TransactionBuilder.kt:186) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:146) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:140) ~[corda-core-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:142) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:309) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:341) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$transactionMustHaveOneOutput$5(IOUContractTests.java:52) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:19) ~[corda-test-common-4.5.jar:?]
	at net.corda.coretesting.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:54) ~[corda-core-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt) ~[corda-node-driver-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.transactionMustHaveOneOutput(IOUContractTests.java:51) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_261]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_261]
[ERROR] 2020-09-22T07:27:00,364Z [Test worker] internal.Verifier. - Error validating transaction 40912984E1FD1676689A20CCCE10D07278E0B1016C1FE75790B7C45DB52AC743. - Failed requirement: All of the participants must be signers. [errorCode=9q63wp, moreInformationAt=https://errors.corda.net/OS/4.5/9q63wp] {}
java.lang.IllegalArgumentException: Failed requirement: All of the participants must be signers.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.5.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:46) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.5.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:37) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:421) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:373) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:206) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext(TransactionBuilder.kt:186) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:146) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:140) ~[corda-core-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:142) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:186) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:78) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TransactionDSL.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$null$8(IOUContractTests.java:82) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:281) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:305) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:341) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$borrowerMustSignTransaction$9(IOUContractTests.java:79) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:19) ~[corda-test-common-4.5.jar:?]
	at net.corda.coretesting.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:54) ~[corda-core-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt) ~[corda-node-driver-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.borrowerMustSignTransaction(IOUContractTests.java:78) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_261]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_261]
[ERROR] 2020-09-22T07:27:00,478Z [Test worker] internal.Verifier. - Error validating transaction 40912984E1FD1676689A20CCCE10D07278E0B1016C1FE75790B7C45DB52AC743. - Failed requirement: All of the participants must be signers. [errorCode=9q63wp, moreInformationAt=https://errors.corda.net/OS/4.5/9q63wp] {}
java.lang.IllegalArgumentException: Failed requirement: All of the participants must be signers.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.5.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:46) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.5.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:37) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:421) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:373) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:186) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:78) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TransactionDSL.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$null$8(IOUContractTests.java:82) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:281) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:305) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:341) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$borrowerMustSignTransaction$9(IOUContractTests.java:79) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:19) ~[corda-test-common-4.5.jar:?]
	at net.corda.coretesting.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:54) ~[corda-core-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt) ~[corda-node-driver-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.borrowerMustSignTransaction(IOUContractTests.java:78) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_261]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_261]
[ERROR] 2020-09-22T07:27:00,498Z [Test worker] internal.Verifier. - Error validating transaction 40912984E1FD1676689A20CCCE10D07278E0B1016C1FE75790B7C45DB52AC743. - Failed requirement: All of the participants must be signers. [errorCode=9q63wp, moreInformationAt=https://errors.corda.net/OS/4.5/9q63wp] {}
java.lang.IllegalArgumentException: Failed requirement: All of the participants must be signers.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.5.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:46) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.5.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:37) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:421) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:373) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:206) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext(TransactionBuilder.kt:186) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:146) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:140) ~[corda-core-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:142) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:309) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:341) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$borrowerMustSignTransaction$9(IOUContractTests.java:79) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:19) ~[corda-test-common-4.5.jar:?]
	at net.corda.coretesting.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:54) ~[corda-core-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt) ~[corda-node-driver-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.borrowerMustSignTransaction(IOUContractTests.java:78) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_261]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_261]
[WARN ] 2020-09-22T07:27:01,057Z [Test worker] contracts.AttachmentConstraint. - Found state com.example.contract.IOUContract that is constrained by the insecure: AlwaysAcceptAttachmentConstraint. {}
[ERROR] 2020-09-22T07:27:01,201Z [Test worker] internal.Verifier. - Error validating transaction C826DBE65F7BE9FD36760438E4812E17AB2A19AEAEE4F2A5F44EBAD5711699D7. - Required com.example.contract.IOUContract.Commands.Create command [errorCode=11xj1ns, moreInformationAt=https://errors.corda.net/OS/4.5/11xj1ns] {}
java.lang.IllegalStateException: Required com.example.contract.IOUContract.Commands.Create command
	at net.corda.core.contracts.ContractsDSL.requireSingleCommand(ContractsDSL.kt:81) ~[corda-core-4.5.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:36) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:421) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:373) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:206) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext(TransactionBuilder.kt:186) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:146) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:140) ~[corda-core-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:142) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:309) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._unverifiedTransaction(TestDSL.kt:347) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TransactionDSL.input(TransactionDSLInterpreter.kt:150) ~[corda-test-utils-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$null$2(IOUContractTests.java:39) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:281) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:305) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:341) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$transactionMustHaveNoInputs$3(IOUContractTests.java:38) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:19) ~[corda-test-common-4.5.jar:?]
	at net.corda.coretesting.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:54) ~[corda-core-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt) ~[corda-node-driver-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.transactionMustHaveNoInputs(IOUContractTests.java:37) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_261]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_261]
[ERROR] 2020-09-22T07:27:01,487Z [Test worker] internal.Verifier. - Error validating transaction 144CD623478DF68DAADF057537630CB56539B6792A94BD6AED9CD98F2E516F9D. - Failed requirement: No inputs should be consumed when issuing an IOU. [errorCode=9q63wp, moreInformationAt=https://errors.corda.net/OS/4.5/9q63wp] {}
java.lang.IllegalArgumentException: Failed requirement: No inputs should be consumed when issuing an IOU.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.5.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:39) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.5.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:37) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:421) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:373) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:206) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext(TransactionBuilder.kt:186) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:146) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:140) ~[corda-core-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:142) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:186) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:78) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TransactionDSL.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$null$2(IOUContractTests.java:42) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:281) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:305) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:341) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$transactionMustHaveNoInputs$3(IOUContractTests.java:38) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:19) ~[corda-test-common-4.5.jar:?]
	at net.corda.coretesting.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:54) ~[corda-core-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt) ~[corda-node-driver-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.transactionMustHaveNoInputs(IOUContractTests.java:37) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_261]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_261]
[ERROR] 2020-09-22T07:27:01,495Z [Test worker] internal.Verifier. - Error validating transaction 144CD623478DF68DAADF057537630CB56539B6792A94BD6AED9CD98F2E516F9D. - Failed requirement: No inputs should be consumed when issuing an IOU. [errorCode=9q63wp, moreInformationAt=https://errors.corda.net/OS/4.5/9q63wp] {}
java.lang.IllegalArgumentException: Failed requirement: No inputs should be consumed when issuing an IOU.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.5.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:39) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.5.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:37) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:421) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:373) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:186) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:78) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TransactionDSL.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$null$2(IOUContractTests.java:42) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:281) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:305) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:341) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$transactionMustHaveNoInputs$3(IOUContractTests.java:38) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:19) ~[corda-test-common-4.5.jar:?]
	at net.corda.coretesting.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:54) ~[corda-core-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt) ~[corda-node-driver-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.transactionMustHaveNoInputs(IOUContractTests.java:37) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_261]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_261]
[ERROR] 2020-09-22T07:27:01,517Z [Test worker] internal.Verifier. - Error validating transaction 144CD623478DF68DAADF057537630CB56539B6792A94BD6AED9CD98F2E516F9D. - Failed requirement: No inputs should be consumed when issuing an IOU. [errorCode=9q63wp, moreInformationAt=https://errors.corda.net/OS/4.5/9q63wp] {}
java.lang.IllegalArgumentException: Failed requirement: No inputs should be consumed when issuing an IOU.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.5.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:39) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.5.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:37) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:421) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:373) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:206) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext(TransactionBuilder.kt:186) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:146) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:140) ~[corda-core-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:142) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:309) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:341) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$transactionMustHaveNoInputs$3(IOUContractTests.java:38) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:19) ~[corda-test-common-4.5.jar:?]
	at net.corda.coretesting.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:54) ~[corda-core-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt) ~[corda-node-driver-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.transactionMustHaveNoInputs(IOUContractTests.java:37) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_261]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_261]
[ERROR] 2020-09-22T07:27:01,775Z [Test worker] internal.Verifier. - Error validating transaction 9A5392D238EB31CD4EA7E020829BFF11F2E437F7BE16AEAB7CA377C205A83079. - Failed requirement: The IOU's value must be non-negative. [errorCode=9q63wp, moreInformationAt=https://errors.corda.net/OS/4.5/9q63wp] {}
java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.5.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:50) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.5.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:37) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:421) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:373) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:206) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext(TransactionBuilder.kt:186) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:146) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:140) ~[corda-core-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:142) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:186) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:78) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TransactionDSL.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$null$12(IOUContractTests.java:109) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:281) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:305) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:341) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$cannotCreateNegativeValueIOUs$13(IOUContractTests.java:106) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:19) ~[corda-test-common-4.5.jar:?]
	at net.corda.coretesting.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:54) ~[corda-core-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt) ~[corda-node-driver-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.cannotCreateNegativeValueIOUs(IOUContractTests.java:105) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_261]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_261]
[ERROR] 2020-09-22T07:27:01,779Z [Test worker] internal.Verifier. - Error validating transaction 9A5392D238EB31CD4EA7E020829BFF11F2E437F7BE16AEAB7CA377C205A83079. - Failed requirement: The IOU's value must be non-negative. [errorCode=9q63wp, moreInformationAt=https://errors.corda.net/OS/4.5/9q63wp] {}
java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.5.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:50) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.5.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:37) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:421) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:373) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:186) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:78) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TransactionDSL.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$null$12(IOUContractTests.java:109) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:281) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:305) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:341) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$cannotCreateNegativeValueIOUs$13(IOUContractTests.java:106) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:19) ~[corda-test-common-4.5.jar:?]
	at net.corda.coretesting.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:54) ~[corda-core-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt) ~[corda-node-driver-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.cannotCreateNegativeValueIOUs(IOUContractTests.java:105) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_261]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_261]
[ERROR] 2020-09-22T07:27:01,838Z [Test worker] internal.Verifier. - Error validating transaction 9A5392D238EB31CD4EA7E020829BFF11F2E437F7BE16AEAB7CA377C205A83079. - Failed requirement: The IOU's value must be non-negative. [errorCode=9q63wp, moreInformationAt=https://errors.corda.net/OS/4.5/9q63wp] {}
java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.5.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:50) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.5.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:37) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:421) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:373) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:206) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext(TransactionBuilder.kt:186) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:146) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:140) ~[corda-core-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:142) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:309) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:341) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$cannotCreateNegativeValueIOUs$13(IOUContractTests.java:106) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:19) ~[corda-test-common-4.5.jar:?]
	at net.corda.coretesting.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:54) ~[corda-core-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt) ~[corda-node-driver-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.cannotCreateNegativeValueIOUs(IOUContractTests.java:105) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_261]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_261]
[ERROR] 2020-09-22T07:27:02,146Z [Test worker] internal.Verifier. - Error validating transaction EDC0DD74475723F89CFFC9C7D7CD429BC2598496D211E6EA6444E7AFB4D5084C. - Failed requirement: All of the participants must be signers. [errorCode=9q63wp, moreInformationAt=https://errors.corda.net/OS/4.5/9q63wp] {}
java.lang.IllegalArgumentException: Failed requirement: All of the participants must be signers.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.5.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:46) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.5.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:37) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:421) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:373) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:206) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext(TransactionBuilder.kt:186) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:146) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:140) ~[corda-core-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:142) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:186) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:78) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TransactionDSL.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$null$6(IOUContractTests.java:69) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:281) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:305) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:341) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$lenderMustSignTransaction$7(IOUContractTests.java:66) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:19) ~[corda-test-common-4.5.jar:?]
	at net.corda.coretesting.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:54) ~[corda-core-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt) ~[corda-node-driver-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.lenderMustSignTransaction(IOUContractTests.java:65) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_261]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_261]
[ERROR] 2020-09-22T07:27:02,155Z [Test worker] internal.Verifier. - Error validating transaction EDC0DD74475723F89CFFC9C7D7CD429BC2598496D211E6EA6444E7AFB4D5084C. - Failed requirement: All of the participants must be signers. [errorCode=9q63wp, moreInformationAt=https://errors.corda.net/OS/4.5/9q63wp] {}
java.lang.IllegalArgumentException: Failed requirement: All of the participants must be signers.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.5.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:46) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.5.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:37) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:421) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:373) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:186) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:78) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TransactionDSL.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$null$6(IOUContractTests.java:69) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:281) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:305) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:341) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$lenderMustSignTransaction$7(IOUContractTests.java:66) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:19) ~[corda-test-common-4.5.jar:?]
	at net.corda.coretesting.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:54) ~[corda-core-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt) ~[corda-node-driver-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.lenderMustSignTransaction(IOUContractTests.java:65) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_261]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_261]
[ERROR] 2020-09-22T07:27:02,169Z [Test worker] internal.Verifier. - Error validating transaction EDC0DD74475723F89CFFC9C7D7CD429BC2598496D211E6EA6444E7AFB4D5084C. - Failed requirement: All of the participants must be signers. [errorCode=9q63wp, moreInformationAt=https://errors.corda.net/OS/4.5/9q63wp] {}
java.lang.IllegalArgumentException: Failed requirement: All of the participants must be signers.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.5.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:46) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.5.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:37) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:421) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:373) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:206) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext(TransactionBuilder.kt:186) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:146) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:140) ~[corda-core-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:142) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:309) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:341) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$lenderMustSignTransaction$7(IOUContractTests.java:66) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:19) ~[corda-test-common-4.5.jar:?]
	at net.corda.coretesting.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:54) ~[corda-core-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt) ~[corda-node-driver-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.lenderMustSignTransaction(IOUContractTests.java:65) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_261]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_261]
[INFO ] 2020-09-22T07:27:03,664Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in C:\tests\cordapp-example\workflows-java ... {}
[INFO ] 2020-09-22T07:27:03,928Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-09-22T07:27:05,585Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-09-22T07:27:07,296Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2020-09-22T07:27:07,312Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-09-22T07:27:07,313Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-09-22T07:27:07,921Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-09-22T07:27:07,935Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2020-09-22T07:27:08,521Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-09-22T07:27:08,522Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-09-22T07:27:08,535Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2020-09-22T07:27:08,790Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-09-22T07:27:08,805Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-09-22T07:27:09,540Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2020-09-22T07:27:09,900Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-09-22T07:27:09,900Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-09-22T07:27:09,977Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-09-22T07:27:09,978Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-09-22T07:27:09,978Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-09-22T07:27:10,741Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-09-22T07:27:10,741Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-09-22T07:27:10,756Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of detachedConfiguration1 {}
[INFO ] 2020-09-22T07:27:10,771Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-09-22T07:27:10,786Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :clients:classpath {}
[INFO ] 2020-09-22T07:27:10,786Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-09-22T07:27:10,786Z [Connection worker] internal.TestCordappImpl. - Resolve files of :clients:classpath {}
[INFO ] 2020-09-22T07:27:10,802Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-09-22T07:27:10,802Z [Connection worker] internal.TestCordappImpl. - Resolve files of :clients:classpath {}
[INFO ] 2020-09-22T07:27:10,803Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-09-22T07:27:11,461Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-09-22T07:27:11,461Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts-java {}
[INFO ] 2020-09-22T07:27:11,536Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-09-22T07:27:11,536Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts-kotlin {}
[INFO ] 2020-09-22T07:27:11,581Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-09-22T07:27:11,582Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows-java {}
[INFO ] 2020-09-22T07:27:11,776Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-09-22T07:27:11,776Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows-kotlin {}
[INFO ] 2020-09-22T07:27:11,866Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-09-22T07:27:11,866Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-09-22T07:27:12,046Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-09-22T07:27:12,091Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-09-22T07:27:12,152Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts-java:compileClasspath {}
[INFO ] 2020-09-22T07:27:12,241Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-09-22T07:27:12,241Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts-java:compileClasspath {}
[INFO ] 2020-09-22T07:27:12,241Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-09-22T07:27:12,271Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts-java:annotationProcessor {}
[INFO ] 2020-09-22T07:27:12,271Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-09-22T07:27:12,301Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-09-22T07:27:12,316Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:processResources {}
[INFO ] 2020-09-22T07:27:12,316Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-09-22T07:27:12,317Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:classes {}
[INFO ] 2020-09-22T07:27:12,317Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-09-22T07:27:12,317Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:configureCordappFatJar {}
[INFO ] 2020-09-22T07:27:12,341Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts-java:runtime {}
[INFO ] 2020-09-22T07:27:12,424Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:configureCordappFatJar {}
[INFO ] 2020-09-22T07:27:12,424Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts-java:runtime {}
[INFO ] 2020-09-22T07:27:12,439Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:configureCordappFatJar {}
[INFO ] 2020-09-22T07:27:12,453Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-09-22T07:27:12,453Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:jar {}
[INFO ] 2020-09-22T07:27:12,469Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-09-22T07:27:12,469Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-09-22T07:27:12,498Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows-java:compileClasspath {}
[INFO ] 2020-09-22T07:27:12,648Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-09-22T07:27:12,648Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:compileClasspath {}
[INFO ] 2020-09-22T07:27:12,649Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-09-22T07:27:12,693Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows-java:annotationProcessor {}
[INFO ] 2020-09-22T07:27:12,693Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-09-22T07:27:12,693Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-09-22T07:27:12,693Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:processResources {}
[INFO ] 2020-09-22T07:27:12,708Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-09-22T07:27:12,708Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:classes {}
[INFO ] 2020-09-22T07:27:12,708Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-09-22T07:27:12,708Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-09-22T07:27:12,708Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows-java:runtime {}
[INFO ] 2020-09-22T07:27:12,768Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-09-22T07:27:12,768Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-09-22T07:27:12,784Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-09-22T07:27:12,784Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-09-22T07:27:12,784Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-09-22T07:27:12,784Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-09-22T07:27:12,786Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-09-22T07:27:12,786Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-09-22T07:27:12,786Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-09-22T07:27:12,786Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-09-22T07:27:12,786Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-09-22T07:27:12,786Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-09-22T07:27:12,786Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-09-22T07:27:12,786Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-09-22T07:27:12,786Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-09-22T07:27:12,802Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-09-22T07:27:12,803Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:jar {}
[INFO ] 2020-09-22T07:27:12,837Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-09-22T07:27:12,837Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-09-22T07:27:12,837Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows-java' {}
[INFO ] 2020-09-22T07:27:12,837Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-09-22T07:27:12,866Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-09-22T07:27:12,889Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in C:\tests\cordapp-example\.gradle {}
[INFO ] 2020-09-22T07:27:12,889Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-09-22T07:27:12,923Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2020-09-22T07:27:15,758Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build\mock-network\20200922-072703.006\nodes\0\cordapps] {}
[INFO ] 2020-09-22T07:27:15,762Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/C:/tests/cordapp-example/workflows-java/build/mock-network/20200922-072703.006/nodes/0/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/C:/tests/cordapp-example/workflows-java/build/mock-network/20200922-072703.006/nodes/0/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-09-22T07:27:15,771Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/tests/cordapp-example/workflows-java/build/mock-network/20200922-072703.006/nodes/0/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-09-22T07:27:15,963Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/tests/cordapp-example/workflows-java/build/mock-network/20200922-072703.006/nodes/0/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2020-09-22T07:27:17,079Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2020-09-22T07:27:17,301Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-09-22T07:27:17,424Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-09-22T07:27:17,578Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-09-22T07:27:17,732Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-09-22T07:27:02.984Z
      epoch=1
  } {}
[INFO ] 2020-09-22T07:27:25,402Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:25,409Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build\mock-network\20200922-072703.006\nodes\0\network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:25,409Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:25,493Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:25,733Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:25,748Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:28,358Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:29,002Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:29,004Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:29,013Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:29,013Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:29,105Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:29,170Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-09-22T07:27:29,194Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-09-22T07:27:29,194Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-09-22T07:27:29,552Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-09-22T07:27:29,566Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-09-22T07:27:29,566Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1600759649566) {}
[INFO ] 2020-09-22T07:27:29,570Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-09-22T07:27:29,805Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1600759649566) {}
[INFO ] 2020-09-22T07:27:29,901Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-09-22T07:27:29,923Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2020-09-22T07:27:29,926Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2020-09-22T07:27:29,948Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1600759649566) {}
[INFO ] 2020-09-22T07:27:30,004Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-09-22T07:27:30,022Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=28D7558BE542EBD66B6CC672A3B7802ACF54B8B8BA412C0A78C88B6D3A2A9278 uploader=app filename=CorDapp Example {}
[INFO ] 2020-09-22T07:27:30,035Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-09-22T07:27:30,041Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-09-22T07:27:30,575Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1600759649566) {}
[INFO ] 2020-09-22T07:27:30,613Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1600759649566) {}
[INFO ] 2020-09-22T07:27:30,615Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-09-22T07:27:30,616Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1600759649566) {}
[INFO ] 2020-09-22T07:27:30,616Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-09-22T07:27:30,629Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build\mock-network\20200922-072703.006\nodes\1\cordapps] {}
[INFO ] 2020-09-22T07:27:30,630Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/C:/tests/cordapp-example/workflows-java/build/mock-network/20200922-072703.006/nodes/1/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/C:/tests/cordapp-example/workflows-java/build/mock-network/20200922-072703.006/nodes/1/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-09-22T07:27:30,630Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/tests/cordapp-example/workflows-java/build/mock-network/20200922-072703.006/nodes/1/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-09-22T07:27:30,773Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/tests/cordapp-example/workflows-java/build/mock-network/20200922-072703.006/nodes/1/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2020-09-22T07:27:30,797Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2020-09-22T07:27:30,798Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-09-22T07:27:30,801Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-09-22T07:27:30,856Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-09-22T07:27:30,859Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-09-22T07:27:02.984Z
      epoch=1
  } {}
[INFO ] 2020-09-22T07:27:31,843Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:31,849Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build\mock-network\20200922-072703.006\nodes\1\network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:31,849Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:31,921Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:31,926Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:31,926Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:32,390Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:32,408Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:32,410Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:32,414Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:32,414Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:32,510Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:32,517Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-09-22T07:27:32,522Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-09-22T07:27:32,522Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-09-22T07:27:32,719Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-09-22T07:27:32,721Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-09-22T07:27:32,766Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-09-22T07:27:32,766Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1600759652766) {}
[INFO ] 2020-09-22T07:27:32,768Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-09-22T07:27:32,780Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1600759652766) {}
[INFO ] 2020-09-22T07:27:32,789Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-09-22T07:27:32,790Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2020-09-22T07:27:32,790Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2020-09-22T07:27:32,809Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1600759652766) {}
[INFO ] 2020-09-22T07:27:32,817Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-09-22T07:27:32,840Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=28D7558BE542EBD66B6CC672A3B7802ACF54B8B8BA412C0A78C88B6D3A2A9278 uploader=app filename=CorDapp Example {}
[INFO ] 2020-09-22T07:27:32,854Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1600759652766) {}
[INFO ] 2020-09-22T07:27:32,859Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1600759649566) {}
[INFO ] 2020-09-22T07:27:32,863Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-09-22T07:27:32,876Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1600759652766) {}
[INFO ] 2020-09-22T07:27:32,878Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-09-22T07:27:32,889Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1600759652766) {}
[INFO ] 2020-09-22T07:27:32,889Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-09-22T07:27:32,889Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1600759652766) {}
[INFO ] 2020-09-22T07:27:32,889Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-09-22T07:27:32,899Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build\mock-network\20200922-072703.006\nodes\2\cordapps] {}
[INFO ] 2020-09-22T07:27:32,900Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/C:/tests/cordapp-example/workflows-java/build/mock-network/20200922-072703.006/nodes/2/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/C:/tests/cordapp-example/workflows-java/build/mock-network/20200922-072703.006/nodes/2/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-09-22T07:27:32,900Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/tests/cordapp-example/workflows-java/build/mock-network/20200922-072703.006/nodes/2/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-09-22T07:27:33,031Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/tests/cordapp-example/workflows-java/build/mock-network/20200922-072703.006/nodes/2/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2020-09-22T07:27:33,056Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2020-09-22T07:27:33,057Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-09-22T07:27:33,062Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-09-22T07:27:33,112Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-09-22T07:27:33,115Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-09-22T07:27:02.984Z
      epoch=1
  } {}
[INFO ] 2020-09-22T07:27:33,990Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:33,993Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build\mock-network\20200922-072703.006\nodes\2\network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:33,993Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:34,027Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:34,032Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:34,032Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:34,190Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:34,201Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:34,203Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:34,208Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:34,208Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:34,310Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:34,328Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-09-22T07:27:34,333Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-09-22T07:27:34,333Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-09-22T07:27:34,515Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-09-22T07:27:34,518Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-09-22T07:27:34,562Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-09-22T07:27:34,562Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1600759654562) {}
[INFO ] 2020-09-22T07:27:34,564Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-09-22T07:27:34,575Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1600759654562) {}
[INFO ] 2020-09-22T07:27:34,586Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-09-22T07:27:34,587Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2020-09-22T07:27:34,587Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2020-09-22T07:27:34,598Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1600759654562) {}
[INFO ] 2020-09-22T07:27:34,605Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-09-22T07:27:34,636Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=28D7558BE542EBD66B6CC672A3B7802ACF54B8B8BA412C0A78C88B6D3A2A9278 uploader=app filename=CorDapp Example {}
[INFO ] 2020-09-22T07:27:34,647Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1600759654562) {}
[INFO ] 2020-09-22T07:27:34,650Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1600759649566) {}
[INFO ] 2020-09-22T07:27:34,652Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-09-22T07:27:34,665Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1600759654562) {}
[INFO ] 2020-09-22T07:27:34,667Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-09-22T07:27:34,685Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1600759652766) {}
[INFO ] 2020-09-22T07:27:34,688Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-09-22T07:27:34,698Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1600759654562) {}
[INFO ] 2020-09-22T07:27:34,700Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-09-22T07:27:34,711Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1600759654562) {}
[INFO ] 2020-09-22T07:27:34,711Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-09-22T07:27:34,712Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1600759654562) {}
[INFO ] 2020-09-22T07:27:34,712Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2020-09-22T07:27:34,715Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.example.flow.ExampleFlow$Initiator, currently using: class com.example.flow.ExampleFlow$Acceptor {}
[INFO ] 2020-09-22T07:27:34,715Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2020-09-22T07:27:34,722Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.example.flow.ExampleFlow$Initiator, currently using: class com.example.flow.ExampleFlow$Acceptor {}
[INFO ] 2020-09-22T07:27:34,722Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2020-09-22T07:27:35,105Z [Mock network] transactions.TransactionBuilder. - Signature constraints not available on network requiring a minimum platform version of 4. Current is: 1. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=cc8a081d-cc03-434f-a406-20e51bc97cb7, invocation_id=7e4bf78f-9e09-410a-a046-63ca45390012, invocation_timestamp=2020-09-22T07:27:34.817Z, origin=Only For Testing, session_id=7e4bf78f-9e09-410a-a046-63ca45390012, session_timestamp=2020-09-22T07:27:34.817Z, thread-id=393}
[WARN ] 2020-09-22T07:27:35,105Z [Mock network] transactions.TransactionBuilder. - Reverting back to using hash constraints for contract com.example.contract.IOUContract {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=cc8a081d-cc03-434f-a406-20e51bc97cb7, invocation_id=7e4bf78f-9e09-410a-a046-63ca45390012, invocation_timestamp=2020-09-22T07:27:34.817Z, origin=Only For Testing, session_id=7e4bf78f-9e09-410a-a046-63ca45390012, session_timestamp=2020-09-22T07:27:34.817Z, thread-id=393}
[ERROR] 2020-09-22T07:27:35,179Z [Mock network] internal.Verifier. - Error validating transaction FFC678E14602CB5F16A52C40F1EC35D5B14F84C85507E60144653C43D92B588E. - Failed requirement: The IOU's value must be non-negative. [errorCode=9q63wp, moreInformationAt=https://errors.corda.net/OS/4.5/9q63wp] {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=cc8a081d-cc03-434f-a406-20e51bc97cb7, invocation_id=7e4bf78f-9e09-410a-a046-63ca45390012, invocation_timestamp=2020-09-22T07:27:34.817Z, origin=Only For Testing, session_id=7e4bf78f-9e09-410a-a046-63ca45390012, session_timestamp=2020-09-22T07:27:34.817Z, thread-id=393}
java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.5.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:50) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.5.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:37) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:421) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:373) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:206) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext(TransactionBuilder.kt:186) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:146) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:140) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toLedgerTransaction(TransactionBuilder.kt:622) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:630) ~[corda-core-4.5.jar:?]
	at com.example.flow.ExampleFlow$Initiator.call(ExampleFlow.java:101) ~[main/:?]
	at com.example.flow.ExampleFlow$Initiator.call(ExampleFlow.java:33) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:299) ~[corda-node-4.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:66) ~[corda-node-4.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_261]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_261]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.5.jar:?]
[ERROR] 2020-09-22T07:27:35,182Z [Mock network] internal.Verifier. - Error validating transaction FFC678E14602CB5F16A52C40F1EC35D5B14F84C85507E60144653C43D92B588E. - Failed requirement: The IOU's value must be non-negative. [errorCode=9q63wp, moreInformationAt=https://errors.corda.net/OS/4.5/9q63wp] {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=cc8a081d-cc03-434f-a406-20e51bc97cb7, invocation_id=7e4bf78f-9e09-410a-a046-63ca45390012, invocation_timestamp=2020-09-22T07:27:34.817Z, origin=Only For Testing, session_id=7e4bf78f-9e09-410a-a046-63ca45390012, session_timestamp=2020-09-22T07:27:34.817Z, thread-id=393}
java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.5.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:50) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.5.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:37) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:421) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:373) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:630) ~[corda-core-4.5.jar:?]
	at com.example.flow.ExampleFlow$Initiator.call(ExampleFlow.java:101) ~[main/:?]
	at com.example.flow.ExampleFlow$Initiator.call(ExampleFlow.java:33) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:299) ~[corda-node-4.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:66) ~[corda-node-4.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_261]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_261]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.5.jar:?]
[INFO ] 2020-09-22T07:27:35,182Z [Mock network] corda.flow. - Flow raised an error: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: com.example.contract.IOUContract, transaction: FFC678E14602CB5F16A52C40F1EC35D5B14F84C85507E60144653C43D92B588E. Sending it to flow hospital to be triaged. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=cc8a081d-cc03-434f-a406-20e51bc97cb7, invocation_id=7e4bf78f-9e09-410a-a046-63ca45390012, invocation_timestamp=2020-09-22T07:27:34.817Z, origin=Only For Testing, session_id=7e4bf78f-9e09-410a-a046-63ca45390012, session_timestamp=2020-09-22T07:27:34.817Z, thread-id=393}
[INFO ] 2020-09-22T07:27:35,217Z [Mock network] statemachine.StaffedFlowHospital. - Flow [cc8a081d-cc03-434f-a406-20e51bc97cb7] admitted to hospital in state StateMachineState(checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=7e4bf78f-9e09-410a-a046-63ca45390012, timestamp: 2020-09-22T07:27:34.817Z, entityType: Invocation, sessionId=7e4bf78f-9e09-410a-a046-63ca45390012, timestamp: 2020-09-22T07:27:34.817Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, subFlowStack=[Initiating(flowClass=class com.example.flow.ExampleFlow$Initiator, classToInitiateWith=class com.example.flow.ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=7, corDappName=cordapp-example-workflows-0.1, corDappHash=C21FF27393DB7479466A6AB281CC09EFC5C9DF82079028B02B1A609AFAB2DF85), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=6BA5F70AD6A9DF509ED0675774C44C510B431C9F179D38C9DDD9C7A6AB85048F), errorState=Clean, numberOfSuspends=0), flowLogic=com.example.flow.ExampleFlow$Initiator@6f40ce3e, pendingDeduplicationHandlers=[], isFlowResumed=true, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, senderUUID=b7e53571-607a-46a0-a9b8-249578146d41) {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=cc8a081d-cc03-434f-a406-20e51bc97cb7, invocation_id=7e4bf78f-9e09-410a-a046-63ca45390012, invocation_timestamp=2020-09-22T07:27:34.817Z, origin=Only For Testing, session_id=7e4bf78f-9e09-410a-a046-63ca45390012, session_timestamp=2020-09-22T07:27:34.817Z, thread-id=393}
[INFO ] 2020-09-22T07:27:35,223Z [Mock network] statemachine.StaffedFlowHospital. - Error 1 of 1: {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=cc8a081d-cc03-434f-a406-20e51bc97cb7, invocation_id=7e4bf78f-9e09-410a-a046-63ca45390012, invocation_timestamp=2020-09-22T07:27:34.817Z, origin=Only For Testing, session_id=7e4bf78f-9e09-410a-a046-63ca45390012, session_timestamp=2020-09-22T07:27:34.817Z, thread-id=393}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: com.example.contract.IOUContract, transaction: FFC678E14602CB5F16A52C40F1EC35D5B14F84C85507E60144653C43D92B588E
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:423) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:373) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:630) ~[corda-core-4.5.jar:?]
	at com.example.flow.ExampleFlow$Initiator.call(ExampleFlow.java:101) ~[main/:?]
	at com.example.flow.ExampleFlow$Initiator.call(ExampleFlow.java:33) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:299) ~[corda-node-4.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:66) ~[corda-node-4.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_261]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_261]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.5.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.5.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:50) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.5.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:37) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:421) ~[corda-core-4.5.jar:?]
	... 19 more
[INFO ] 2020-09-22T07:27:35,233Z [Mock network] statemachine.StaffedFlowHospital. - Flow error allowed to propagate {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=cc8a081d-cc03-434f-a406-20e51bc97cb7, invocation_id=7e4bf78f-9e09-410a-a046-63ca45390012, invocation_timestamp=2020-09-22T07:27:34.817Z, origin=Only For Testing, session_id=7e4bf78f-9e09-410a-a046-63ca45390012, session_timestamp=2020-09-22T07:27:34.817Z, thread-id=393}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: com.example.contract.IOUContract, transaction: FFC678E14602CB5F16A52C40F1EC35D5B14F84C85507E60144653C43D92B588E
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:423) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:373) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:630) ~[corda-core-4.5.jar:?]
	at com.example.flow.ExampleFlow$Initiator.call(ExampleFlow.java:101) ~[main/:?]
	at com.example.flow.ExampleFlow$Initiator.call(ExampleFlow.java:33) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:299) ~[corda-node-4.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:66) ~[corda-node-4.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_261]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_261]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.5.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.5.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:50) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.5.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:37) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:421) ~[corda-core-4.5.jar:?]
	... 19 more
[WARN ] 2020-09-22T07:27:35,273Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [cc8a081d-cc03-434f-a406-20e51bc97cb7] errored, dumping all transitions:

 --- Transition of flow [cc8a081d-cc03-434f-a406-20e51bc97cb7] ---
  Timestamp: 2020-09-22T07:27:35.091Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[cc8a081d-cc03-434f-a406-20e51bc97cb7], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=7e4bf78f-9e09-410a-a046-63ca45390012, timestamp: 2020-09-22T07:27:34.817Z, entityType: Invocation, sessionId=7e4bf78f-9e09-410a-a046-63ca45390012, timestamp: 2020-09-22T07:27:34.817Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, subFlowStack=[Initiating(flowClass=class com.example.flow.ExampleFlow$Initiator, classToInitiateWith=class com.example.flow.ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=7, corDappName=cordapp-example-workflows-0.1, corDappHash=C21FF27393DB7479466A6AB281CC09EFC5C9DF82079028B02B1A609AFAB2DF85), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=6BA5F70AD6A9DF509ED0675774C44C510B431C9F179D38C9DDD9C7A6AB85048F), errorState=Clean, numberOfSuspends=0), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@37d4a9d3])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@37d4a9d3])
    SignalFlowHasStarted(flowId=[cc8a081d-cc03-434f-a406-20e51bc97cb7])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@37d4a9d3]
    []
isAnyCheckpointPersisted: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [cc8a081d-cc03-434f-a406-20e51bc97cb7] ---
  Timestamp: 2020-09-22T07:27:35.237Z
  Event: Error(exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: com.example.contract.IOUContract, transaction: FFC678E14602CB5F16A52C40F1EC35D5B14F84C85507E60144653C43D92B588E)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-09-22T07:27:34.997Z
    2020-09-22T07:27:35.198Z
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=-926114361483201559, exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: com.example.contract.IOUContract, transaction: FFC678E14602CB5F16A52C40F1EC35D5B14F84C85507E60144653C43D92B588E)], propagatedIndex=0, propagating=false)
isFlowResumed: 
    true
    false


 --- Transition of flow [cc8a081d-cc03-434f-a406-20e51bc97cb7] ---
  Timestamp: 2020-09-22T07:27:35.250Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [cc8a081d-cc03-434f-a406-20e51bc97cb7] ---
  Timestamp: 2020-09-22T07:27:35.259Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-09-22T07:27:35.198Z
    2020-09-22T07:27:35.259Z
checkpoint.errorState.propagating: 
    false
    true
 {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=cc8a081d-cc03-434f-a406-20e51bc97cb7, invocation_id=7e4bf78f-9e09-410a-a046-63ca45390012, invocation_timestamp=2020-09-22T07:27:34.817Z, origin=Only For Testing, session_id=7e4bf78f-9e09-410a-a046-63ca45390012, session_timestamp=2020-09-22T07:27:34.817Z, thread-id=393}
[WARN ] 2020-09-22T07:27:35,273Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [cc8a081d-cc03-434f-a406-20e51bc97cb7] error - Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: com.example.contract.IOUContract, transaction: FFC678E14602CB5F16A52C40F1EC35D5B14F84C85507E60144653C43D92B588E - Failed requirement: The IOU's value must be non-negative. [errorCode=w61rmu, moreInformationAt=https://errors.corda.net/OS/4.5/w61rmu] {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=cc8a081d-cc03-434f-a406-20e51bc97cb7, invocation_id=7e4bf78f-9e09-410a-a046-63ca45390012, invocation_timestamp=2020-09-22T07:27:34.817Z, origin=Only For Testing, session_id=7e4bf78f-9e09-410a-a046-63ca45390012, session_timestamp=2020-09-22T07:27:34.817Z, thread-id=393}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: com.example.contract.IOUContract, transaction: FFC678E14602CB5F16A52C40F1EC35D5B14F84C85507E60144653C43D92B588E
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:423) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:373) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:630) ~[corda-core-4.5.jar:?]
	at com.example.flow.ExampleFlow$Initiator.call(ExampleFlow.java:101) ~[main/:?]
	at com.example.flow.ExampleFlow$Initiator.call(ExampleFlow.java:33) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:299) ~[corda-node-4.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:66) ~[corda-node-4.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_261]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_261]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.5.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.5.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:50) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.5.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:37) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:421) ~[corda-core-4.5.jar:?]
	... 19 more
[WARN ] 2020-09-22T07:27:35,318Z [Mock network] statemachine.ActionExecutorImpl. - Propagating error - Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: com.example.contract.IOUContract, transaction: FFC678E14602CB5F16A52C40F1EC35D5B14F84C85507E60144653C43D92B588E - Failed requirement: The IOU's value must be non-negative. [errorCode=w61rmu, moreInformationAt=https://errors.corda.net/OS/4.5/w61rmu] {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=cc8a081d-cc03-434f-a406-20e51bc97cb7, invocation_id=7e4bf78f-9e09-410a-a046-63ca45390012, invocation_timestamp=2020-09-22T07:27:34.817Z, origin=Only For Testing, session_id=7e4bf78f-9e09-410a-a046-63ca45390012, session_timestamp=2020-09-22T07:27:34.817Z, thread-id=393}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: com.example.contract.IOUContract, transaction: FFC678E14602CB5F16A52C40F1EC35D5B14F84C85507E60144653C43D92B588E
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:423) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:373) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:630) ~[corda-core-4.5.jar:?]
	at com.example.flow.ExampleFlow$Initiator.call(ExampleFlow.java:101) ~[main/:?]
	at com.example.flow.ExampleFlow$Initiator.call(ExampleFlow.java:33) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:299) ~[corda-node-4.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:66) ~[corda-node-4.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_261]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_261]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.5.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.5.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:50) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.5.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:37) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:421) ~[corda-core-4.5.jar:?]
	... 19 more
[WARN ] 2020-09-22T07:27:35,392Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [cc8a081d-cc03-434f-a406-20e51bc97cb7] errored, dumping all transitions:

 --- Transition of flow [cc8a081d-cc03-434f-a406-20e51bc97cb7] ---
  Timestamp: 2020-09-22T07:27:35.091Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[cc8a081d-cc03-434f-a406-20e51bc97cb7], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=7e4bf78f-9e09-410a-a046-63ca45390012, timestamp: 2020-09-22T07:27:34.817Z, entityType: Invocation, sessionId=7e4bf78f-9e09-410a-a046-63ca45390012, timestamp: 2020-09-22T07:27:34.817Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, subFlowStack=[Initiating(flowClass=class com.example.flow.ExampleFlow$Initiator, classToInitiateWith=class com.example.flow.ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=7, corDappName=cordapp-example-workflows-0.1, corDappHash=C21FF27393DB7479466A6AB281CC09EFC5C9DF82079028B02B1A609AFAB2DF85), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=6BA5F70AD6A9DF509ED0675774C44C510B431C9F179D38C9DDD9C7A6AB85048F), errorState=Clean, numberOfSuspends=0), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@37d4a9d3])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@37d4a9d3])
    SignalFlowHasStarted(flowId=[cc8a081d-cc03-434f-a406-20e51bc97cb7])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@37d4a9d3]
    []
isAnyCheckpointPersisted: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [cc8a081d-cc03-434f-a406-20e51bc97cb7] ---
  Timestamp: 2020-09-22T07:27:35.237Z
  Event: Error(exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: com.example.contract.IOUContract, transaction: FFC678E14602CB5F16A52C40F1EC35D5B14F84C85507E60144653C43D92B588E)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-09-22T07:27:34.997Z
    2020-09-22T07:27:35.198Z
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=-926114361483201559, exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: com.example.contract.IOUContract, transaction: FFC678E14602CB5F16A52C40F1EC35D5B14F84C85507E60144653C43D92B588E)], propagatedIndex=0, propagating=false)
isFlowResumed: 
    true
    false


 --- Transition of flow [cc8a081d-cc03-434f-a406-20e51bc97cb7] ---
  Timestamp: 2020-09-22T07:27:35.250Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [cc8a081d-cc03-434f-a406-20e51bc97cb7] ---
  Timestamp: 2020-09-22T07:27:35.259Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-09-22T07:27:35.198Z
    2020-09-22T07:27:35.259Z
checkpoint.errorState.propagating: 
    false
    true


 --- Transition of flow [cc8a081d-cc03-434f-a406-20e51bc97cb7] ---
  Timestamp: 2020-09-22T07:27:35.383Z
  Event: DoRemainingWork
  Actions: 
    PropagateErrors(errorMessages=[ErrorSessionMessage(flowException=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: com.example.contract.IOUContract, transaction: FFC678E14602CB5F16A52C40F1EC35D5B14F84C85507E60144653C43D92B588E, errorId=-926114361483201559)], sessions=[], senderUUID=b7e53571-607a-46a0-a9b8-249578146d41)
    CreateTransaction
    RemoveCheckpoint(id=[cc8a081d-cc03-434f-a406-20e51bc97cb7])
    PersistDeduplicationFacts(deduplicationHandlers=[])
    ReleaseSoftLocks(uuid=cc8a081d-cc03-434f-a406-20e51bc97cb7)
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    RemoveSessionBindings(sessionIds=[])
    RemoveFlow(flowId=[cc8a081d-cc03-434f-a406-20e51bc97cb7], removalReason=ErrorFinish(flowErrors=[FlowError(errorId=-926114361483201559, exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: com.example.contract.IOUContract, transaction: FFC678E14602CB5F16A52C40F1EC35D5B14F84C85507E60144653C43D92B588E)]), lastState=StateMachineState(checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=7e4bf78f-9e09-410a-a046-63ca45390012, timestamp: 2020-09-22T07:27:34.817Z, entityType: Invocation, sessionId=7e4bf78f-9e09-410a-a046-63ca45390012, timestamp: 2020-09-22T07:27:34.817Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, subFlowStack=[Initiating(flowClass=class com.example.flow.ExampleFlow$Initiator, classToInitiateWith=class com.example.flow.ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=7, corDappName=cordapp-example-workflows-0.1, corDappHash=C21FF27393DB7479466A6AB281CC09EFC5C9DF82079028B02B1A609AFAB2DF85), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=6BA5F70AD6A9DF509ED0675774C44C510B431C9F179D38C9DDD9C7A6AB85048F), errorState=Errored(errors=[FlowError(errorId=-926114361483201559, exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: com.example.contract.IOUContract, transaction: FFC678E14602CB5F16A52C40F1EC35D5B14F84C85507E60144653C43D92B588E)], propagatedIndex=1, propagating=true), numberOfSuspends=0), flowLogic=com.example.flow.ExampleFlow$Initiator@6f40ce3e, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=true, isKilled=false, senderUUID=b7e53571-607a-46a0-a9b8-249578146d41))
  Continuation: Abort
  Diff between previous and next state:
isRemoved: 
    false
    true
checkpoint.timestamp: 
    2020-09-22T07:27:35.259Z
    2020-09-22T07:27:35.273Z
checkpoint.errorState.propagatedIndex: 
    0
    1
 {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=cc8a081d-cc03-434f-a406-20e51bc97cb7, invocation_id=7e4bf78f-9e09-410a-a046-63ca45390012, invocation_timestamp=2020-09-22T07:27:34.817Z, origin=Only For Testing, session_id=7e4bf78f-9e09-410a-a046-63ca45390012, session_timestamp=2020-09-22T07:27:34.817Z, thread-id=393}
[WARN ] 2020-09-22T07:27:35,392Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [cc8a081d-cc03-434f-a406-20e51bc97cb7] error - Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: com.example.contract.IOUContract, transaction: FFC678E14602CB5F16A52C40F1EC35D5B14F84C85507E60144653C43D92B588E - Failed requirement: The IOU's value must be non-negative. [errorCode=w61rmu, moreInformationAt=https://errors.corda.net/OS/4.5/w61rmu] {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=cc8a081d-cc03-434f-a406-20e51bc97cb7, invocation_id=7e4bf78f-9e09-410a-a046-63ca45390012, invocation_timestamp=2020-09-22T07:27:34.817Z, origin=Only For Testing, session_id=7e4bf78f-9e09-410a-a046-63ca45390012, session_timestamp=2020-09-22T07:27:34.817Z, thread-id=393}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: com.example.contract.IOUContract, transaction: FFC678E14602CB5F16A52C40F1EC35D5B14F84C85507E60144653C43D92B588E
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:423) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:373) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:630) ~[corda-core-4.5.jar:?]
	at com.example.flow.ExampleFlow$Initiator.call(ExampleFlow.java:101) ~[main/:?]
	at com.example.flow.ExampleFlow$Initiator.call(ExampleFlow.java:33) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:299) ~[corda-node-4.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:66) ~[corda-node-4.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_261]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_261]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.5.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.5.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:50) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.5.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:37) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:421) ~[corda-core-4.5.jar:?]
	... 19 more
[INFO ] 2020-09-22T07:27:35,490Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-1) {}
[INFO ] 2020-09-22T07:27:35,514Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-2) {}
[INFO ] 2020-09-22T07:27:35,520Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-3) {}
[INFO ] 2020-09-22T07:27:35,675Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build\mock-network\20200922-072735.532\nodes\0\cordapps] {}
[INFO ] 2020-09-22T07:27:35,678Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/C:/tests/cordapp-example/workflows-java/build/mock-network/20200922-072735.532/nodes/0/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/C:/tests/cordapp-example/workflows-java/build/mock-network/20200922-072735.532/nodes/0/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-09-22T07:27:35,678Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/tests/cordapp-example/workflows-java/build/mock-network/20200922-072735.532/nodes/0/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-09-22T07:27:35,824Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/tests/cordapp-example/workflows-java/build/mock-network/20200922-072735.532/nodes/0/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2020-09-22T07:27:35,852Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2020-09-22T07:27:35,853Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-09-22T07:27:35,855Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-09-22T07:27:35,873Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-09-22T07:27:35,885Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-09-22T07:27:35.532Z
      epoch=1
  } {}
[INFO ] 2020-09-22T07:27:36,505Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:36,507Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build\mock-network\20200922-072735.532\nodes\0\network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:36,507Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:36,558Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:36,565Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:36,566Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:36,798Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:36,809Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:36,810Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:36,813Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:36,813Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:36,896Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:36,936Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-09-22T07:27:36,952Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-09-22T07:27:36,952Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-09-22T07:27:37,122Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-09-22T07:27:37,129Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-09-22T07:27:37,129Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1600759657129) {}
[INFO ] 2020-09-22T07:27:37,134Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-09-22T07:27:37,156Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1600759657129) {}
[INFO ] 2020-09-22T07:27:37,168Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-09-22T07:27:37,169Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2020-09-22T07:27:37,169Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2020-09-22T07:27:37,186Z [MockNode-4-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1600759657129) {}
[INFO ] 2020-09-22T07:27:37,192Z [MockNode-4-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-09-22T07:27:37,222Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=28D7558BE542EBD66B6CC672A3B7802ACF54B8B8BA412C0A78C88B6D3A2A9278 uploader=app filename=CorDapp Example {}
[INFO ] 2020-09-22T07:27:37,227Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-09-22T07:27:37,227Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-09-22T07:27:37,238Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1600759657129) {}
[INFO ] 2020-09-22T07:27:37,241Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1600759657129) {}
[INFO ] 2020-09-22T07:27:37,241Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-09-22T07:27:37,242Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1600759657129) {}
[INFO ] 2020-09-22T07:27:37,242Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-09-22T07:27:37,256Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build\mock-network\20200922-072735.532\nodes\1\cordapps] {}
[INFO ] 2020-09-22T07:27:37,257Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/C:/tests/cordapp-example/workflows-java/build/mock-network/20200922-072735.532/nodes/1/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/C:/tests/cordapp-example/workflows-java/build/mock-network/20200922-072735.532/nodes/1/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-09-22T07:27:37,257Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/tests/cordapp-example/workflows-java/build/mock-network/20200922-072735.532/nodes/1/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-09-22T07:27:37,426Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/tests/cordapp-example/workflows-java/build/mock-network/20200922-072735.532/nodes/1/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2020-09-22T07:27:37,460Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2020-09-22T07:27:37,461Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-09-22T07:27:37,464Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-09-22T07:27:37,518Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-09-22T07:27:37,521Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-09-22T07:27:35.532Z
      epoch=1
  } {}
[INFO ] 2020-09-22T07:27:38,143Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:38,147Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build\mock-network\20200922-072735.532\nodes\1\network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:38,147Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:38,200Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:38,204Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:38,204Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:38,407Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:38,418Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:38,419Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:38,422Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:38,422Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:38,499Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:38,507Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-09-22T07:27:38,509Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-09-22T07:27:38,509Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-09-22T07:27:38,651Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-09-22T07:27:38,652Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-09-22T07:27:38,686Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-09-22T07:27:38,687Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1600759658686) {}
[INFO ] 2020-09-22T07:27:38,689Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-09-22T07:27:38,696Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1600759658686) {}
[INFO ] 2020-09-22T07:27:38,704Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-09-22T07:27:38,704Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2020-09-22T07:27:38,704Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2020-09-22T07:27:38,715Z [MockNode-5-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1600759658686) {}
[INFO ] 2020-09-22T07:27:38,721Z [MockNode-5-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-09-22T07:27:38,744Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=28D7558BE542EBD66B6CC672A3B7802ACF54B8B8BA412C0A78C88B6D3A2A9278 uploader=app filename=CorDapp Example {}
[INFO ] 2020-09-22T07:27:38,752Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1600759658686) {}
[INFO ] 2020-09-22T07:27:38,756Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1600759657129) {}
[INFO ] 2020-09-22T07:27:38,757Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-09-22T07:27:38,765Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1600759658686) {}
[INFO ] 2020-09-22T07:27:38,766Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-09-22T07:27:38,776Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1600759658686) {}
[INFO ] 2020-09-22T07:27:38,776Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-09-22T07:27:38,776Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1600759658686) {}
[INFO ] 2020-09-22T07:27:38,776Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-09-22T07:27:38,786Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build\mock-network\20200922-072735.532\nodes\2\cordapps] {}
[INFO ] 2020-09-22T07:27:38,787Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/C:/tests/cordapp-example/workflows-java/build/mock-network/20200922-072735.532/nodes/2/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/C:/tests/cordapp-example/workflows-java/build/mock-network/20200922-072735.532/nodes/2/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-09-22T07:27:38,788Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/tests/cordapp-example/workflows-java/build/mock-network/20200922-072735.532/nodes/2/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-09-22T07:27:38,911Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/tests/cordapp-example/workflows-java/build/mock-network/20200922-072735.532/nodes/2/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2020-09-22T07:27:38,936Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2020-09-22T07:27:38,938Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-09-22T07:27:38,940Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-09-22T07:27:38,989Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-09-22T07:27:38,993Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-09-22T07:27:35.532Z
      epoch=1
  } {}
[INFO ] 2020-09-22T07:27:39,547Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:39,548Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build\mock-network\20200922-072735.532\nodes\2\network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:39,548Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:39,565Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:39,572Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:39,573Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:39,710Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:39,722Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:39,725Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:39,731Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:39,731Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:39,805Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:39,811Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-09-22T07:27:39,813Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-09-22T07:27:39,813Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-09-22T07:27:39,956Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-09-22T07:27:39,958Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-09-22T07:27:40,003Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-09-22T07:27:40,003Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1600759660003) {}
[INFO ] 2020-09-22T07:27:40,006Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-09-22T07:27:40,011Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1600759660003) {}
[INFO ] 2020-09-22T07:27:40,018Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-09-22T07:27:40,018Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2020-09-22T07:27:40,018Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2020-09-22T07:27:40,033Z [MockNode-6-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1600759660003) {}
[INFO ] 2020-09-22T07:27:40,042Z [MockNode-6-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-09-22T07:27:40,073Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=28D7558BE542EBD66B6CC672A3B7802ACF54B8B8BA412C0A78C88B6D3A2A9278 uploader=app filename=CorDapp Example {}
[INFO ] 2020-09-22T07:27:40,085Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1600759660003) {}
[INFO ] 2020-09-22T07:27:40,088Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1600759657129) {}
[INFO ] 2020-09-22T07:27:40,090Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-09-22T07:27:40,102Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1600759660003) {}
[INFO ] 2020-09-22T07:27:40,103Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-09-22T07:27:40,113Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1600759658686) {}
[INFO ] 2020-09-22T07:27:40,115Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-09-22T07:27:40,125Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1600759660003) {}
[INFO ] 2020-09-22T07:27:40,126Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-09-22T07:27:40,138Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1600759660003) {}
[INFO ] 2020-09-22T07:27:40,138Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-09-22T07:27:40,139Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1600759660003) {}
[INFO ] 2020-09-22T07:27:40,139Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2020-09-22T07:27:40,146Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.example.flow.ExampleFlow$Initiator, currently using: class com.example.flow.ExampleFlow$Acceptor {}
[INFO ] 2020-09-22T07:27:40,147Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2020-09-22T07:27:40,147Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.example.flow.ExampleFlow$Initiator, currently using: class com.example.flow.ExampleFlow$Acceptor {}
[INFO ] 2020-09-22T07:27:40,147Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-09-22T07:27:40,563Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000003, flow-id=004f76e1-f8a7-40bd-ac1d-2dd3dc07cc09, invocation_id=6733c2a7-131e-402d-8e30-3b4ddc9c94ff, invocation_timestamp=2020-09-22T07:27:40.471Z, origin=O=Mock Company 1, L=London, C=GB, session_id=6733c2a7-131e-402d-8e30-3b4ddc9c94ff, session_timestamp=2020-09-22T07:27:40.471Z, thread-id=587, tx_id=8506C853B5CD3E3EF0255E1CB89DF36AC0670EC0A876F8FD607FB32D6FC1F67C}
[INFO ] 2020-09-22T07:27:40,635Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000003, flow-id=004f76e1-f8a7-40bd-ac1d-2dd3dc07cc09, invocation_id=6733c2a7-131e-402d-8e30-3b4ddc9c94ff, invocation_timestamp=2020-09-22T07:27:40.471Z, origin=O=Mock Company 1, L=London, C=GB, session_id=6733c2a7-131e-402d-8e30-3b4ddc9c94ff, session_timestamp=2020-09-22T07:27:40.471Z, thread-id=587, tx_id=8506C853B5CD3E3EF0255E1CB89DF36AC0670EC0A876F8FD607FB32D6FC1F67C}
[INFO ] 2020-09-22T07:27:40,744Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=b6eb3312-5a7b-44be-b5d6-bbb3661fb963, invocation_id=7fa8ed6c-706e-405a-b8eb-9c3e4c803699, invocation_timestamp=2020-09-22T07:27:40.150Z, origin=Only For Testing, session_id=7fa8ed6c-706e-405a-b8eb-9c3e4c803699, session_timestamp=2020-09-22T07:27:40.150Z, thread-id=587, tx_id=8506C853B5CD3E3EF0255E1CB89DF36AC0670EC0A876F8FD607FB32D6FC1F67C}
[INFO ] 2020-09-22T07:27:40,744Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=b6eb3312-5a7b-44be-b5d6-bbb3661fb963, invocation_id=7fa8ed6c-706e-405a-b8eb-9c3e4c803699, invocation_timestamp=2020-09-22T07:27:40.150Z, origin=Only For Testing, session_id=7fa8ed6c-706e-405a-b8eb-9c3e4c803699, session_timestamp=2020-09-22T07:27:40.150Z, thread-id=587, tx_id=8506C853B5CD3E3EF0255E1CB89DF36AC0670EC0A876F8FD607FB32D6FC1F67C}
[INFO ] 2020-09-22T07:27:40,847Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=b6eb3312-5a7b-44be-b5d6-bbb3661fb963, invocation_id=7fa8ed6c-706e-405a-b8eb-9c3e4c803699, invocation_timestamp=2020-09-22T07:27:40.150Z, origin=Only For Testing, session_id=7fa8ed6c-706e-405a-b8eb-9c3e4c803699, session_timestamp=2020-09-22T07:27:40.150Z, thread-id=587, tx_id=8506C853B5CD3E3EF0255E1CB89DF36AC0670EC0A876F8FD607FB32D6FC1F67C}
[INFO ] 2020-09-22T07:27:40,880Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000003, flow-id=004f76e1-f8a7-40bd-ac1d-2dd3dc07cc09, invocation_id=6733c2a7-131e-402d-8e30-3b4ddc9c94ff, invocation_timestamp=2020-09-22T07:27:40.471Z, origin=O=Mock Company 1, L=London, C=GB, session_id=6733c2a7-131e-402d-8e30-3b4ddc9c94ff, session_timestamp=2020-09-22T07:27:40.471Z, thread-id=587, tx_id=8506C853B5CD3E3EF0255E1CB89DF36AC0670EC0A876F8FD607FB32D6FC1F67C}
[INFO ] 2020-09-22T07:27:40,890Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000003, flow-id=004f76e1-f8a7-40bd-ac1d-2dd3dc07cc09, invocation_id=6733c2a7-131e-402d-8e30-3b4ddc9c94ff, invocation_timestamp=2020-09-22T07:27:40.471Z, origin=O=Mock Company 1, L=London, C=GB, session_id=6733c2a7-131e-402d-8e30-3b4ddc9c94ff, session_timestamp=2020-09-22T07:27:40.471Z, thread-id=587, tx_id=8506C853B5CD3E3EF0255E1CB89DF36AC0670EC0A876F8FD607FB32D6FC1F67C}
[INFO ] 2020-09-22T07:27:40,895Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000003, flow-id=004f76e1-f8a7-40bd-ac1d-2dd3dc07cc09, invocation_id=6733c2a7-131e-402d-8e30-3b4ddc9c94ff, invocation_timestamp=2020-09-22T07:27:40.471Z, origin=O=Mock Company 1, L=London, C=GB, session_id=6733c2a7-131e-402d-8e30-3b4ddc9c94ff, session_timestamp=2020-09-22T07:27:40.471Z, thread-id=587, tx_id=8506C853B5CD3E3EF0255E1CB89DF36AC0670EC0A876F8FD607FB32D6FC1F67C}
[INFO ] 2020-09-22T07:27:40,907Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000003, flow-id=004f76e1-f8a7-40bd-ac1d-2dd3dc07cc09, invocation_id=6733c2a7-131e-402d-8e30-3b4ddc9c94ff, invocation_timestamp=2020-09-22T07:27:40.471Z, origin=O=Mock Company 1, L=London, C=GB, session_id=6733c2a7-131e-402d-8e30-3b4ddc9c94ff, session_timestamp=2020-09-22T07:27:40.471Z, thread-id=587, tx_id=8506C853B5CD3E3EF0255E1CB89DF36AC0670EC0A876F8FD607FB32D6FC1F67C}
[INFO ] 2020-09-22T07:27:40,934Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=b6eb3312-5a7b-44be-b5d6-bbb3661fb963, invocation_id=7fa8ed6c-706e-405a-b8eb-9c3e4c803699, invocation_timestamp=2020-09-22T07:27:40.150Z, origin=Only For Testing, session_id=7fa8ed6c-706e-405a-b8eb-9c3e4c803699, session_timestamp=2020-09-22T07:27:40.150Z, thread-id=587, tx_id=8506C853B5CD3E3EF0255E1CB89DF36AC0670EC0A876F8FD607FB32D6FC1F67C}
[INFO ] 2020-09-22T07:27:40,934Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=b6eb3312-5a7b-44be-b5d6-bbb3661fb963, invocation_id=7fa8ed6c-706e-405a-b8eb-9c3e4c803699, invocation_timestamp=2020-09-22T07:27:40.150Z, origin=Only For Testing, session_id=7fa8ed6c-706e-405a-b8eb-9c3e4c803699, session_timestamp=2020-09-22T07:27:40.150Z, thread-id=587, tx_id=8506C853B5CD3E3EF0255E1CB89DF36AC0670EC0A876F8FD607FB32D6FC1F67C}
[INFO ] 2020-09-22T07:27:40,949Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-4) {}
[INFO ] 2020-09-22T07:27:40,955Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-5) {}
[INFO ] 2020-09-22T07:27:40,960Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-6) {}
[INFO ] 2020-09-22T07:27:41,125Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build\mock-network\20200922-072740.969\nodes\0\cordapps] {}
[INFO ] 2020-09-22T07:27:41,126Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/C:/tests/cordapp-example/workflows-java/build/mock-network/20200922-072740.969/nodes/0/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/C:/tests/cordapp-example/workflows-java/build/mock-network/20200922-072740.969/nodes/0/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-09-22T07:27:41,126Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/tests/cordapp-example/workflows-java/build/mock-network/20200922-072740.969/nodes/0/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-09-22T07:27:41,333Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/tests/cordapp-example/workflows-java/build/mock-network/20200922-072740.969/nodes/0/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2020-09-22T07:27:41,370Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2020-09-22T07:27:41,370Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-09-22T07:27:41,373Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-09-22T07:27:41,399Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-09-22T07:27:41,410Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-09-22T07:27:40.969Z
      epoch=1
  } {}
[INFO ] 2020-09-22T07:27:41,979Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:41,980Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build\mock-network\20200922-072740.969\nodes\0\network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:41,980Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:42,008Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:42,013Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:42,013Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:42,171Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:42,182Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:42,184Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:42,188Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:42,188Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:42,278Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:42,308Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-09-22T07:27:42,318Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-09-22T07:27:42,318Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-09-22T07:27:42,478Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-09-22T07:27:42,490Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-09-22T07:27:42,490Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1600759662490) {}
[INFO ] 2020-09-22T07:27:42,493Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-09-22T07:27:42,506Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1600759662490) {}
[INFO ] 2020-09-22T07:27:42,515Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-09-22T07:27:42,516Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2020-09-22T07:27:42,516Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2020-09-22T07:27:42,530Z [MockNode-7-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1600759662490) {}
[INFO ] 2020-09-22T07:27:42,535Z [MockNode-7-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-09-22T07:27:42,564Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=28D7558BE542EBD66B6CC672A3B7802ACF54B8B8BA412C0A78C88B6D3A2A9278 uploader=app filename=CorDapp Example {}
[INFO ] 2020-09-22T07:27:42,568Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-09-22T07:27:42,568Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-09-22T07:27:42,575Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1600759662490) {}
[INFO ] 2020-09-22T07:27:42,579Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1600759662490) {}
[INFO ] 2020-09-22T07:27:42,579Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-09-22T07:27:42,579Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1600759662490) {}
[INFO ] 2020-09-22T07:27:42,579Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-09-22T07:27:42,597Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build\mock-network\20200922-072740.969\nodes\1\cordapps] {}
[INFO ] 2020-09-22T07:27:42,598Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/C:/tests/cordapp-example/workflows-java/build/mock-network/20200922-072740.969/nodes/1/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/C:/tests/cordapp-example/workflows-java/build/mock-network/20200922-072740.969/nodes/1/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-09-22T07:27:42,599Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/tests/cordapp-example/workflows-java/build/mock-network/20200922-072740.969/nodes/1/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-09-22T07:27:42,765Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/tests/cordapp-example/workflows-java/build/mock-network/20200922-072740.969/nodes/1/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2020-09-22T07:27:42,810Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2020-09-22T07:27:42,811Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-09-22T07:27:42,813Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-09-22T07:27:42,873Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-09-22T07:27:42,877Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-09-22T07:27:40.969Z
      epoch=1
  } {}
[INFO ] 2020-09-22T07:27:43,571Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:43,573Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build\mock-network\20200922-072740.969\nodes\1\network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:43,573Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:43,600Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:43,603Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:43,603Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:43,753Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:43,762Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:43,763Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:43,766Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:43,766Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:43,821Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:43,826Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-09-22T07:27:43,828Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-09-22T07:27:43,828Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-09-22T07:27:44,002Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-09-22T07:27:44,003Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-09-22T07:27:44,043Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-09-22T07:27:44,043Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1600759664043) {}
[INFO ] 2020-09-22T07:27:44,046Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-09-22T07:27:44,056Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1600759664043) {}
[INFO ] 2020-09-22T07:27:44,062Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-09-22T07:27:44,062Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2020-09-22T07:27:44,062Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2020-09-22T07:27:44,078Z [MockNode-8-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1600759664043) {}
[INFO ] 2020-09-22T07:27:44,084Z [MockNode-8-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-09-22T07:27:44,112Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=28D7558BE542EBD66B6CC672A3B7802ACF54B8B8BA412C0A78C88B6D3A2A9278 uploader=app filename=CorDapp Example {}
[INFO ] 2020-09-22T07:27:44,121Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1600759664043) {}
[INFO ] 2020-09-22T07:27:44,124Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1600759662490) {}
[INFO ] 2020-09-22T07:27:44,126Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-09-22T07:27:44,137Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1600759664043) {}
[INFO ] 2020-09-22T07:27:44,138Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-09-22T07:27:44,150Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1600759664043) {}
[INFO ] 2020-09-22T07:27:44,150Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-09-22T07:27:44,150Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1600759664043) {}
[INFO ] 2020-09-22T07:27:44,150Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-09-22T07:27:44,159Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build\mock-network\20200922-072740.969\nodes\2\cordapps] {}
[INFO ] 2020-09-22T07:27:44,159Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/C:/tests/cordapp-example/workflows-java/build/mock-network/20200922-072740.969/nodes/2/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/C:/tests/cordapp-example/workflows-java/build/mock-network/20200922-072740.969/nodes/2/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-09-22T07:27:44,159Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/tests/cordapp-example/workflows-java/build/mock-network/20200922-072740.969/nodes/2/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-09-22T07:27:44,323Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/tests/cordapp-example/workflows-java/build/mock-network/20200922-072740.969/nodes/2/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2020-09-22T07:27:44,351Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2020-09-22T07:27:44,352Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-09-22T07:27:44,354Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-09-22T07:27:44,416Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-09-22T07:27:44,420Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-09-22T07:27:40.969Z
      epoch=1
  } {}
[INFO ] 2020-09-22T07:27:44,951Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:44,952Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build\mock-network\20200922-072740.969\nodes\2\network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:44,952Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:44,972Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:44,977Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:44,977Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:45,130Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:45,146Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:45,148Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:45,153Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:45,153Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:45,260Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:45,266Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-09-22T07:27:45,268Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-09-22T07:27:45,268Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-09-22T07:27:45,422Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-09-22T07:27:45,426Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-09-22T07:27:45,471Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-09-22T07:27:45,471Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1600759665471) {}
[INFO ] 2020-09-22T07:27:45,473Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-09-22T07:27:45,480Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1600759665471) {}
[INFO ] 2020-09-22T07:27:45,489Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-09-22T07:27:45,490Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2020-09-22T07:27:45,490Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2020-09-22T07:27:45,505Z [MockNode-9-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1600759665471) {}
[INFO ] 2020-09-22T07:27:45,509Z [MockNode-9-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-09-22T07:27:45,533Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=28D7558BE542EBD66B6CC672A3B7802ACF54B8B8BA412C0A78C88B6D3A2A9278 uploader=app filename=CorDapp Example {}
[INFO ] 2020-09-22T07:27:45,541Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1600759665471) {}
[INFO ] 2020-09-22T07:27:45,546Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1600759662490) {}
[INFO ] 2020-09-22T07:27:45,548Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-09-22T07:27:45,559Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1600759665471) {}
[INFO ] 2020-09-22T07:27:45,561Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-09-22T07:27:45,571Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1600759664043) {}
[INFO ] 2020-09-22T07:27:45,572Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-09-22T07:27:45,581Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1600759665471) {}
[INFO ] 2020-09-22T07:27:45,583Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-09-22T07:27:45,594Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1600759665471) {}
[INFO ] 2020-09-22T07:27:45,594Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-09-22T07:27:45,594Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1600759665471) {}
[INFO ] 2020-09-22T07:27:45,594Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2020-09-22T07:27:45,595Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.example.flow.ExampleFlow$Initiator, currently using: class com.example.flow.ExampleFlow$Acceptor {}
[INFO ] 2020-09-22T07:27:45,595Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2020-09-22T07:27:45,595Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.example.flow.ExampleFlow$Initiator, currently using: class com.example.flow.ExampleFlow$Acceptor {}
[INFO ] 2020-09-22T07:27:45,595Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-09-22T07:27:45,724Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000005, flow-id=06d7c305-7dde-4cff-9a46-98a29c76f31b, invocation_id=15e0f706-c5db-462d-8f5f-d5ccd75351ae, invocation_timestamp=2020-09-22T07:27:45.701Z, origin=O=Mock Company 1, L=London, C=GB, session_id=15e0f706-c5db-462d-8f5f-d5ccd75351ae, session_timestamp=2020-09-22T07:27:45.701Z, thread-id=778, tx_id=6002F78FE518269DCCBBD1FEFD1F0C71DB92A0678033AA33B621723C0B14EC9A}
[INFO ] 2020-09-22T07:27:45,735Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000005, flow-id=06d7c305-7dde-4cff-9a46-98a29c76f31b, invocation_id=15e0f706-c5db-462d-8f5f-d5ccd75351ae, invocation_timestamp=2020-09-22T07:27:45.701Z, origin=O=Mock Company 1, L=London, C=GB, session_id=15e0f706-c5db-462d-8f5f-d5ccd75351ae, session_timestamp=2020-09-22T07:27:45.701Z, thread-id=778, tx_id=6002F78FE518269DCCBBD1FEFD1F0C71DB92A0678033AA33B621723C0B14EC9A}
[INFO ] 2020-09-22T07:27:45,814Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=0cb20471-f665-456a-9833-b8cf87912373, invocation_id=e965d96e-9cde-40f6-86ef-dea173813ab4, invocation_timestamp=2020-09-22T07:27:45.598Z, origin=Only For Testing, session_id=e965d96e-9cde-40f6-86ef-dea173813ab4, session_timestamp=2020-09-22T07:27:45.598Z, thread-id=778, tx_id=6002F78FE518269DCCBBD1FEFD1F0C71DB92A0678033AA33B621723C0B14EC9A}
[INFO ] 2020-09-22T07:27:45,814Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=0cb20471-f665-456a-9833-b8cf87912373, invocation_id=e965d96e-9cde-40f6-86ef-dea173813ab4, invocation_timestamp=2020-09-22T07:27:45.598Z, origin=Only For Testing, session_id=e965d96e-9cde-40f6-86ef-dea173813ab4, session_timestamp=2020-09-22T07:27:45.598Z, thread-id=778, tx_id=6002F78FE518269DCCBBD1FEFD1F0C71DB92A0678033AA33B621723C0B14EC9A}
[INFO ] 2020-09-22T07:27:45,838Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=0cb20471-f665-456a-9833-b8cf87912373, invocation_id=e965d96e-9cde-40f6-86ef-dea173813ab4, invocation_timestamp=2020-09-22T07:27:45.598Z, origin=Only For Testing, session_id=e965d96e-9cde-40f6-86ef-dea173813ab4, session_timestamp=2020-09-22T07:27:45.598Z, thread-id=778, tx_id=6002F78FE518269DCCBBD1FEFD1F0C71DB92A0678033AA33B621723C0B14EC9A}
[INFO ] 2020-09-22T07:27:45,855Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000005, flow-id=06d7c305-7dde-4cff-9a46-98a29c76f31b, invocation_id=15e0f706-c5db-462d-8f5f-d5ccd75351ae, invocation_timestamp=2020-09-22T07:27:45.701Z, origin=O=Mock Company 1, L=London, C=GB, session_id=15e0f706-c5db-462d-8f5f-d5ccd75351ae, session_timestamp=2020-09-22T07:27:45.701Z, thread-id=778, tx_id=6002F78FE518269DCCBBD1FEFD1F0C71DB92A0678033AA33B621723C0B14EC9A}
[INFO ] 2020-09-22T07:27:45,866Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000005, flow-id=06d7c305-7dde-4cff-9a46-98a29c76f31b, invocation_id=15e0f706-c5db-462d-8f5f-d5ccd75351ae, invocation_timestamp=2020-09-22T07:27:45.701Z, origin=O=Mock Company 1, L=London, C=GB, session_id=15e0f706-c5db-462d-8f5f-d5ccd75351ae, session_timestamp=2020-09-22T07:27:45.701Z, thread-id=778, tx_id=6002F78FE518269DCCBBD1FEFD1F0C71DB92A0678033AA33B621723C0B14EC9A}
[INFO ] 2020-09-22T07:27:45,875Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000005, flow-id=06d7c305-7dde-4cff-9a46-98a29c76f31b, invocation_id=15e0f706-c5db-462d-8f5f-d5ccd75351ae, invocation_timestamp=2020-09-22T07:27:45.701Z, origin=O=Mock Company 1, L=London, C=GB, session_id=15e0f706-c5db-462d-8f5f-d5ccd75351ae, session_timestamp=2020-09-22T07:27:45.701Z, thread-id=778, tx_id=6002F78FE518269DCCBBD1FEFD1F0C71DB92A0678033AA33B621723C0B14EC9A}
[INFO ] 2020-09-22T07:27:45,888Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000005, flow-id=06d7c305-7dde-4cff-9a46-98a29c76f31b, invocation_id=15e0f706-c5db-462d-8f5f-d5ccd75351ae, invocation_timestamp=2020-09-22T07:27:45.701Z, origin=O=Mock Company 1, L=London, C=GB, session_id=15e0f706-c5db-462d-8f5f-d5ccd75351ae, session_timestamp=2020-09-22T07:27:45.701Z, thread-id=778, tx_id=6002F78FE518269DCCBBD1FEFD1F0C71DB92A0678033AA33B621723C0B14EC9A}
[INFO ] 2020-09-22T07:27:45,899Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=0cb20471-f665-456a-9833-b8cf87912373, invocation_id=e965d96e-9cde-40f6-86ef-dea173813ab4, invocation_timestamp=2020-09-22T07:27:45.598Z, origin=Only For Testing, session_id=e965d96e-9cde-40f6-86ef-dea173813ab4, session_timestamp=2020-09-22T07:27:45.598Z, thread-id=778, tx_id=6002F78FE518269DCCBBD1FEFD1F0C71DB92A0678033AA33B621723C0B14EC9A}
[INFO ] 2020-09-22T07:27:45,899Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=0cb20471-f665-456a-9833-b8cf87912373, invocation_id=e965d96e-9cde-40f6-86ef-dea173813ab4, invocation_timestamp=2020-09-22T07:27:45.598Z, origin=Only For Testing, session_id=e965d96e-9cde-40f6-86ef-dea173813ab4, session_timestamp=2020-09-22T07:27:45.598Z, thread-id=778, tx_id=6002F78FE518269DCCBBD1FEFD1F0C71DB92A0678033AA33B621723C0B14EC9A}
[INFO ] 2020-09-22T07:27:45,910Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-7) {}
[INFO ] 2020-09-22T07:27:45,915Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-8) {}
[INFO ] 2020-09-22T07:27:45,922Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-9) {}
[INFO ] 2020-09-22T07:27:46,016Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build\mock-network\20200922-072745.928\nodes\0\cordapps] {}
[INFO ] 2020-09-22T07:27:46,017Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/C:/tests/cordapp-example/workflows-java/build/mock-network/20200922-072745.928/nodes/0/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/C:/tests/cordapp-example/workflows-java/build/mock-network/20200922-072745.928/nodes/0/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-09-22T07:27:46,017Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/tests/cordapp-example/workflows-java/build/mock-network/20200922-072745.928/nodes/0/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-09-22T07:27:46,178Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/tests/cordapp-example/workflows-java/build/mock-network/20200922-072745.928/nodes/0/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2020-09-22T07:27:46,204Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2020-09-22T07:27:46,205Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-09-22T07:27:46,207Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-09-22T07:27:46,228Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-09-22T07:27:46,239Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-09-22T07:27:45.927Z
      epoch=1
  } {}
[INFO ] 2020-09-22T07:27:46,825Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:46,826Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build\mock-network\20200922-072745.928\nodes\0\network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:46,826Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:46,844Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:46,849Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:46,849Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:47,002Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:47,009Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:47,010Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:47,014Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:47,014Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:47,111Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:47,150Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-09-22T07:27:47,159Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-09-22T07:27:47,159Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-09-22T07:27:47,312Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-09-22T07:27:47,322Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-09-22T07:27:47,322Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1600759667322) {}
[INFO ] 2020-09-22T07:27:47,325Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-09-22T07:27:47,341Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1600759667322) {}
[INFO ] 2020-09-22T07:27:47,352Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-09-22T07:27:47,352Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2020-09-22T07:27:47,352Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2020-09-22T07:27:47,369Z [MockNode-10-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1600759667322) {}
[INFO ] 2020-09-22T07:27:47,376Z [MockNode-10-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-09-22T07:27:47,395Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=28D7558BE542EBD66B6CC672A3B7802ACF54B8B8BA412C0A78C88B6D3A2A9278 uploader=app filename=CorDapp Example {}
[INFO ] 2020-09-22T07:27:47,398Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-09-22T07:27:47,398Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-09-22T07:27:47,404Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1600759667322) {}
[INFO ] 2020-09-22T07:27:47,406Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1600759667322) {}
[INFO ] 2020-09-22T07:27:47,406Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-09-22T07:27:47,407Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1600759667322) {}
[INFO ] 2020-09-22T07:27:47,407Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-09-22T07:27:47,418Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build\mock-network\20200922-072745.928\nodes\1\cordapps] {}
[INFO ] 2020-09-22T07:27:47,418Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/C:/tests/cordapp-example/workflows-java/build/mock-network/20200922-072745.928/nodes/1/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/C:/tests/cordapp-example/workflows-java/build/mock-network/20200922-072745.928/nodes/1/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-09-22T07:27:47,419Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/tests/cordapp-example/workflows-java/build/mock-network/20200922-072745.928/nodes/1/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-09-22T07:27:47,559Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/tests/cordapp-example/workflows-java/build/mock-network/20200922-072745.928/nodes/1/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2020-09-22T07:27:47,583Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2020-09-22T07:27:47,584Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-09-22T07:27:47,586Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-09-22T07:27:47,636Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-09-22T07:27:47,639Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-09-22T07:27:45.927Z
      epoch=1
  } {}
[INFO ] 2020-09-22T07:27:48,114Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:48,116Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build\mock-network\20200922-072745.928\nodes\1\network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:48,116Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:48,145Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:48,157Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:48,157Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:48,299Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:48,311Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:48,312Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:48,315Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:48,315Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:48,369Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:48,374Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-09-22T07:27:48,376Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-09-22T07:27:48,376Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-09-22T07:27:48,518Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-09-22T07:27:48,519Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-09-22T07:27:48,560Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-09-22T07:27:48,560Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1600759668560) {}
[INFO ] 2020-09-22T07:27:48,564Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-09-22T07:27:48,575Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1600759668560) {}
[INFO ] 2020-09-22T07:27:48,583Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-09-22T07:27:48,583Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2020-09-22T07:27:48,583Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2020-09-22T07:27:48,598Z [MockNode-11-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1600759668560) {}
[INFO ] 2020-09-22T07:27:48,603Z [MockNode-11-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-09-22T07:27:48,625Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=28D7558BE542EBD66B6CC672A3B7802ACF54B8B8BA412C0A78C88B6D3A2A9278 uploader=app filename=CorDapp Example {}
[INFO ] 2020-09-22T07:27:48,634Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1600759668560) {}
[INFO ] 2020-09-22T07:27:48,637Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1600759667322) {}
[INFO ] 2020-09-22T07:27:48,638Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-09-22T07:27:48,647Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1600759668560) {}
[INFO ] 2020-09-22T07:27:48,649Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-09-22T07:27:48,655Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1600759668560) {}
[INFO ] 2020-09-22T07:27:48,655Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-09-22T07:27:48,656Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1600759668560) {}
[INFO ] 2020-09-22T07:27:48,656Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-09-22T07:27:48,666Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build\mock-network\20200922-072745.928\nodes\2\cordapps] {}
[INFO ] 2020-09-22T07:27:48,668Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/C:/tests/cordapp-example/workflows-java/build/mock-network/20200922-072745.928/nodes/2/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/C:/tests/cordapp-example/workflows-java/build/mock-network/20200922-072745.928/nodes/2/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-09-22T07:27:48,668Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/tests/cordapp-example/workflows-java/build/mock-network/20200922-072745.928/nodes/2/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-09-22T07:27:48,804Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/tests/cordapp-example/workflows-java/build/mock-network/20200922-072745.928/nodes/2/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2020-09-22T07:27:48,827Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2020-09-22T07:27:48,829Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-09-22T07:27:48,831Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-09-22T07:27:48,878Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-09-22T07:27:48,882Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-09-22T07:27:45.927Z
      epoch=1
  } {}
[INFO ] 2020-09-22T07:27:49,368Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:49,369Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build\mock-network\20200922-072745.928\nodes\2\network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:49,369Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:49,387Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:49,391Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:49,391Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:49,520Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:49,527Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:49,528Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:49,531Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:49,531Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:49,605Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:49,623Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-09-22T07:27:49,626Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-09-22T07:27:49,626Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-09-22T07:27:49,736Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-09-22T07:27:49,737Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-09-22T07:27:49,769Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-09-22T07:27:49,769Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1600759669769) {}
[INFO ] 2020-09-22T07:27:49,770Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-09-22T07:27:49,775Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1600759669769) {}
[INFO ] 2020-09-22T07:27:49,780Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-09-22T07:27:49,781Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2020-09-22T07:27:49,781Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2020-09-22T07:27:49,792Z [MockNode-12-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1600759669769) {}
[INFO ] 2020-09-22T07:27:49,796Z [MockNode-12-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-09-22T07:27:49,820Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=28D7558BE542EBD66B6CC672A3B7802ACF54B8B8BA412C0A78C88B6D3A2A9278 uploader=app filename=CorDapp Example {}
[INFO ] 2020-09-22T07:27:49,827Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1600759669769) {}
[INFO ] 2020-09-22T07:27:49,829Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1600759667322) {}
[INFO ] 2020-09-22T07:27:49,830Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-09-22T07:27:49,839Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1600759669769) {}
[INFO ] 2020-09-22T07:27:49,840Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-09-22T07:27:49,849Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1600759668560) {}
[INFO ] 2020-09-22T07:27:49,852Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-09-22T07:27:49,867Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1600759669769) {}
[INFO ] 2020-09-22T07:27:49,869Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-09-22T07:27:49,878Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1600759669769) {}
[INFO ] 2020-09-22T07:27:49,878Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-09-22T07:27:49,879Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1600759669769) {}
[INFO ] 2020-09-22T07:27:49,879Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2020-09-22T07:27:49,880Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.example.flow.ExampleFlow$Initiator, currently using: class com.example.flow.ExampleFlow$Acceptor {}
[INFO ] 2020-09-22T07:27:49,880Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2020-09-22T07:27:49,880Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.example.flow.ExampleFlow$Initiator, currently using: class com.example.flow.ExampleFlow$Acceptor {}
[INFO ] 2020-09-22T07:27:49,880Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-09-22T07:27:50,002Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000007, flow-id=bf3c5d52-7b6c-43d5-9d61-f2885fb85abb, invocation_id=8b5d40c7-3baa-4565-83c8-63fb2b161190, invocation_timestamp=2020-09-22T07:27:49.987Z, origin=O=Mock Company 1, L=London, C=GB, session_id=8b5d40c7-3baa-4565-83c8-63fb2b161190, session_timestamp=2020-09-22T07:27:49.987Z, thread-id=968, tx_id=3A56A04D3981B21B6E914F19DD03BDFD0D8D1F2DEB37002B44D106BDCC843FBE}
[INFO ] 2020-09-22T07:27:50,011Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000007, flow-id=bf3c5d52-7b6c-43d5-9d61-f2885fb85abb, invocation_id=8b5d40c7-3baa-4565-83c8-63fb2b161190, invocation_timestamp=2020-09-22T07:27:49.987Z, origin=O=Mock Company 1, L=London, C=GB, session_id=8b5d40c7-3baa-4565-83c8-63fb2b161190, session_timestamp=2020-09-22T07:27:49.987Z, thread-id=968, tx_id=3A56A04D3981B21B6E914F19DD03BDFD0D8D1F2DEB37002B44D106BDCC843FBE}
[INFO ] 2020-09-22T07:27:50,071Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=49e8a137-12ba-4a1a-b411-b1f6154d960d, invocation_id=1d78bee3-e41c-4a75-afae-05531213c9a3, invocation_timestamp=2020-09-22T07:27:49.883Z, origin=Only For Testing, session_id=1d78bee3-e41c-4a75-afae-05531213c9a3, session_timestamp=2020-09-22T07:27:49.883Z, thread-id=968, tx_id=3A56A04D3981B21B6E914F19DD03BDFD0D8D1F2DEB37002B44D106BDCC843FBE}
[INFO ] 2020-09-22T07:27:50,071Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=49e8a137-12ba-4a1a-b411-b1f6154d960d, invocation_id=1d78bee3-e41c-4a75-afae-05531213c9a3, invocation_timestamp=2020-09-22T07:27:49.883Z, origin=Only For Testing, session_id=1d78bee3-e41c-4a75-afae-05531213c9a3, session_timestamp=2020-09-22T07:27:49.883Z, thread-id=968, tx_id=3A56A04D3981B21B6E914F19DD03BDFD0D8D1F2DEB37002B44D106BDCC843FBE}
[INFO ] 2020-09-22T07:27:50,093Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=49e8a137-12ba-4a1a-b411-b1f6154d960d, invocation_id=1d78bee3-e41c-4a75-afae-05531213c9a3, invocation_timestamp=2020-09-22T07:27:49.883Z, origin=Only For Testing, session_id=1d78bee3-e41c-4a75-afae-05531213c9a3, session_timestamp=2020-09-22T07:27:49.883Z, thread-id=968, tx_id=3A56A04D3981B21B6E914F19DD03BDFD0D8D1F2DEB37002B44D106BDCC843FBE}
[INFO ] 2020-09-22T07:27:50,107Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000007, flow-id=bf3c5d52-7b6c-43d5-9d61-f2885fb85abb, invocation_id=8b5d40c7-3baa-4565-83c8-63fb2b161190, invocation_timestamp=2020-09-22T07:27:49.987Z, origin=O=Mock Company 1, L=London, C=GB, session_id=8b5d40c7-3baa-4565-83c8-63fb2b161190, session_timestamp=2020-09-22T07:27:49.987Z, thread-id=968, tx_id=3A56A04D3981B21B6E914F19DD03BDFD0D8D1F2DEB37002B44D106BDCC843FBE}
[INFO ] 2020-09-22T07:27:50,113Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000007, flow-id=bf3c5d52-7b6c-43d5-9d61-f2885fb85abb, invocation_id=8b5d40c7-3baa-4565-83c8-63fb2b161190, invocation_timestamp=2020-09-22T07:27:49.987Z, origin=O=Mock Company 1, L=London, C=GB, session_id=8b5d40c7-3baa-4565-83c8-63fb2b161190, session_timestamp=2020-09-22T07:27:49.987Z, thread-id=968, tx_id=3A56A04D3981B21B6E914F19DD03BDFD0D8D1F2DEB37002B44D106BDCC843FBE}
[INFO ] 2020-09-22T07:27:50,117Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000007, flow-id=bf3c5d52-7b6c-43d5-9d61-f2885fb85abb, invocation_id=8b5d40c7-3baa-4565-83c8-63fb2b161190, invocation_timestamp=2020-09-22T07:27:49.987Z, origin=O=Mock Company 1, L=London, C=GB, session_id=8b5d40c7-3baa-4565-83c8-63fb2b161190, session_timestamp=2020-09-22T07:27:49.987Z, thread-id=968, tx_id=3A56A04D3981B21B6E914F19DD03BDFD0D8D1F2DEB37002B44D106BDCC843FBE}
[INFO ] 2020-09-22T07:27:50,130Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000007, flow-id=bf3c5d52-7b6c-43d5-9d61-f2885fb85abb, invocation_id=8b5d40c7-3baa-4565-83c8-63fb2b161190, invocation_timestamp=2020-09-22T07:27:49.987Z, origin=O=Mock Company 1, L=London, C=GB, session_id=8b5d40c7-3baa-4565-83c8-63fb2b161190, session_timestamp=2020-09-22T07:27:49.987Z, thread-id=968, tx_id=3A56A04D3981B21B6E914F19DD03BDFD0D8D1F2DEB37002B44D106BDCC843FBE}
[INFO ] 2020-09-22T07:27:50,140Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=49e8a137-12ba-4a1a-b411-b1f6154d960d, invocation_id=1d78bee3-e41c-4a75-afae-05531213c9a3, invocation_timestamp=2020-09-22T07:27:49.883Z, origin=Only For Testing, session_id=1d78bee3-e41c-4a75-afae-05531213c9a3, session_timestamp=2020-09-22T07:27:49.883Z, thread-id=968, tx_id=3A56A04D3981B21B6E914F19DD03BDFD0D8D1F2DEB37002B44D106BDCC843FBE}
[INFO ] 2020-09-22T07:27:50,140Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=49e8a137-12ba-4a1a-b411-b1f6154d960d, invocation_id=1d78bee3-e41c-4a75-afae-05531213c9a3, invocation_timestamp=2020-09-22T07:27:49.883Z, origin=Only For Testing, session_id=1d78bee3-e41c-4a75-afae-05531213c9a3, session_timestamp=2020-09-22T07:27:49.883Z, thread-id=968, tx_id=3A56A04D3981B21B6E914F19DD03BDFD0D8D1F2DEB37002B44D106BDCC843FBE}
[INFO ] 2020-09-22T07:27:50,156Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-10) {}
[INFO ] 2020-09-22T07:27:50,158Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-11) {}
[INFO ] 2020-09-22T07:27:50,161Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-12) {}
[INFO ] 2020-09-22T07:27:50,262Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build\mock-network\20200922-072750.165\nodes\0\cordapps] {}
[INFO ] 2020-09-22T07:27:50,262Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/C:/tests/cordapp-example/workflows-java/build/mock-network/20200922-072750.165/nodes/0/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/C:/tests/cordapp-example/workflows-java/build/mock-network/20200922-072750.165/nodes/0/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-09-22T07:27:50,262Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/tests/cordapp-example/workflows-java/build/mock-network/20200922-072750.165/nodes/0/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-09-22T07:27:50,409Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/tests/cordapp-example/workflows-java/build/mock-network/20200922-072750.165/nodes/0/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2020-09-22T07:27:50,442Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2020-09-22T07:27:50,443Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-09-22T07:27:50,445Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-09-22T07:27:50,460Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-09-22T07:27:50,470Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-09-22T07:27:50.165Z
      epoch=1
  } {}
[INFO ] 2020-09-22T07:27:50,954Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:50,959Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build\mock-network\20200922-072750.165\nodes\0\network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:50,959Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:50,984Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:50,988Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:50,988Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:51,112Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:51,123Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:51,124Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:51,127Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:51,127Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:51,195Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:51,237Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-09-22T07:27:51,249Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-09-22T07:27:51,249Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-09-22T07:27:51,389Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-09-22T07:27:51,397Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-09-22T07:27:51,397Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1600759671397) {}
[INFO ] 2020-09-22T07:27:51,399Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-09-22T07:27:51,414Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1600759671397) {}
[INFO ] 2020-09-22T07:27:51,433Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-09-22T07:27:51,433Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2020-09-22T07:27:51,434Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2020-09-22T07:27:51,449Z [MockNode-13-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1600759671397) {}
[INFO ] 2020-09-22T07:27:51,453Z [MockNode-13-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-09-22T07:27:51,474Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=28D7558BE542EBD66B6CC672A3B7802ACF54B8B8BA412C0A78C88B6D3A2A9278 uploader=app filename=CorDapp Example {}
[INFO ] 2020-09-22T07:27:51,479Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-09-22T07:27:51,479Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-09-22T07:27:51,484Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1600759671397) {}
[INFO ] 2020-09-22T07:27:51,486Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1600759671397) {}
[INFO ] 2020-09-22T07:27:51,486Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-09-22T07:27:51,487Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1600759671397) {}
[INFO ] 2020-09-22T07:27:51,487Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-09-22T07:27:51,496Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build\mock-network\20200922-072750.165\nodes\1\cordapps] {}
[INFO ] 2020-09-22T07:27:51,496Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/C:/tests/cordapp-example/workflows-java/build/mock-network/20200922-072750.165/nodes/1/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/C:/tests/cordapp-example/workflows-java/build/mock-network/20200922-072750.165/nodes/1/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-09-22T07:27:51,496Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/tests/cordapp-example/workflows-java/build/mock-network/20200922-072750.165/nodes/1/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-09-22T07:27:51,661Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/tests/cordapp-example/workflows-java/build/mock-network/20200922-072750.165/nodes/1/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2020-09-22T07:27:51,684Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2020-09-22T07:27:51,686Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-09-22T07:27:51,689Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-09-22T07:27:51,741Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-09-22T07:27:51,744Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-09-22T07:27:50.165Z
      epoch=1
  } {}
[INFO ] 2020-09-22T07:27:52,189Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:52,190Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build\mock-network\20200922-072750.165\nodes\1\network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:52,190Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:52,216Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:52,222Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:52,222Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:52,377Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:52,384Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:52,385Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:52,388Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:52,388Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:52,440Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:52,445Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-09-22T07:27:52,447Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-09-22T07:27:52,447Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-09-22T07:27:52,557Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-09-22T07:27:52,558Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-09-22T07:27:52,588Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-09-22T07:27:52,588Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1600759672588) {}
[INFO ] 2020-09-22T07:27:52,589Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-09-22T07:27:52,592Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1600759672588) {}
[INFO ] 2020-09-22T07:27:52,597Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-09-22T07:27:52,598Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2020-09-22T07:27:52,598Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2020-09-22T07:27:52,606Z [MockNode-14-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1600759672588) {}
[INFO ] 2020-09-22T07:27:52,610Z [MockNode-14-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-09-22T07:27:52,630Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=28D7558BE542EBD66B6CC672A3B7802ACF54B8B8BA412C0A78C88B6D3A2A9278 uploader=app filename=CorDapp Example {}
[INFO ] 2020-09-22T07:27:52,636Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1600759672588) {}
[INFO ] 2020-09-22T07:27:52,637Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1600759671397) {}
[INFO ] 2020-09-22T07:27:52,639Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-09-22T07:27:52,646Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1600759672588) {}
[INFO ] 2020-09-22T07:27:52,647Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-09-22T07:27:52,653Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1600759672588) {}
[INFO ] 2020-09-22T07:27:52,653Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-09-22T07:27:52,653Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1600759672588) {}
[INFO ] 2020-09-22T07:27:52,653Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-09-22T07:27:52,663Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build\mock-network\20200922-072750.165\nodes\2\cordapps] {}
[INFO ] 2020-09-22T07:27:52,664Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/C:/tests/cordapp-example/workflows-java/build/mock-network/20200922-072750.165/nodes/2/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/C:/tests/cordapp-example/workflows-java/build/mock-network/20200922-072750.165/nodes/2/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-09-22T07:27:52,664Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/tests/cordapp-example/workflows-java/build/mock-network/20200922-072750.165/nodes/2/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-09-22T07:27:52,793Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/tests/cordapp-example/workflows-java/build/mock-network/20200922-072750.165/nodes/2/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2020-09-22T07:27:52,812Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2020-09-22T07:27:52,813Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-09-22T07:27:52,815Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-09-22T07:27:52,854Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-09-22T07:27:52,857Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-09-22T07:27:50.165Z
      epoch=1
  } {}
[INFO ] 2020-09-22T07:27:53,251Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:53,253Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build\mock-network\20200922-072750.165\nodes\2\network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:53,253Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:53,271Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:53,273Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:53,273Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:53,409Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:53,420Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:53,421Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:53,425Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:53,425Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:53,492Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:53,499Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-09-22T07:27:53,502Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-09-22T07:27:53,502Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-09-22T07:27:53,648Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-09-22T07:27:53,650Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-09-22T07:27:53,685Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-09-22T07:27:53,685Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1600759673685) {}
[INFO ] 2020-09-22T07:27:53,686Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-09-22T07:27:53,691Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1600759673685) {}
[INFO ] 2020-09-22T07:27:53,697Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-09-22T07:27:53,698Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2020-09-22T07:27:53,698Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2020-09-22T07:27:53,714Z [MockNode-15-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1600759673685) {}
[INFO ] 2020-09-22T07:27:53,719Z [MockNode-15-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-09-22T07:27:53,733Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=28D7558BE542EBD66B6CC672A3B7802ACF54B8B8BA412C0A78C88B6D3A2A9278 uploader=app filename=CorDapp Example {}
[INFO ] 2020-09-22T07:27:53,740Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1600759673685) {}
[INFO ] 2020-09-22T07:27:53,742Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1600759671397) {}
[INFO ] 2020-09-22T07:27:53,744Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-09-22T07:27:53,751Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1600759673685) {}
[INFO ] 2020-09-22T07:27:53,752Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-09-22T07:27:53,762Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1600759672588) {}
[INFO ] 2020-09-22T07:27:53,763Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-09-22T07:27:53,770Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1600759673685) {}
[INFO ] 2020-09-22T07:27:53,771Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-09-22T07:27:53,777Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1600759673685) {}
[INFO ] 2020-09-22T07:27:53,778Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-09-22T07:27:53,778Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1600759673685) {}
[INFO ] 2020-09-22T07:27:53,778Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2020-09-22T07:27:53,778Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.example.flow.ExampleFlow$Initiator, currently using: class com.example.flow.ExampleFlow$Acceptor {}
[INFO ] 2020-09-22T07:27:53,778Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2020-09-22T07:27:53,778Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.example.flow.ExampleFlow$Initiator, currently using: class com.example.flow.ExampleFlow$Acceptor {}
[INFO ] 2020-09-22T07:27:53,778Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-09-22T07:27:53,870Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000009, flow-id=f526e431-9a4f-4221-9728-a7dfff4cc131, invocation_id=a80a8d7e-055d-4eb8-97fc-73edee28fc2d, invocation_timestamp=2020-09-22T07:27:53.854Z, origin=O=Mock Company 1, L=London, C=GB, session_id=a80a8d7e-055d-4eb8-97fc-73edee28fc2d, session_timestamp=2020-09-22T07:27:53.854Z, thread-id=1158, tx_id=61E05E0F7330195FBCE66612F6ECFF4CD9E25AFACF4B81126956B69C6C41D47B}
[INFO ] 2020-09-22T07:27:53,887Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000009, flow-id=f526e431-9a4f-4221-9728-a7dfff4cc131, invocation_id=a80a8d7e-055d-4eb8-97fc-73edee28fc2d, invocation_timestamp=2020-09-22T07:27:53.854Z, origin=O=Mock Company 1, L=London, C=GB, session_id=a80a8d7e-055d-4eb8-97fc-73edee28fc2d, session_timestamp=2020-09-22T07:27:53.854Z, thread-id=1158, tx_id=61E05E0F7330195FBCE66612F6ECFF4CD9E25AFACF4B81126956B69C6C41D47B}
[INFO ] 2020-09-22T07:27:53,936Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=2575dbac-f06b-4aaa-8f34-298ae554fb44, invocation_id=5b9695ca-d53a-487b-9e30-1f7ebf04300b, invocation_timestamp=2020-09-22T07:27:53.780Z, origin=Only For Testing, session_id=5b9695ca-d53a-487b-9e30-1f7ebf04300b, session_timestamp=2020-09-22T07:27:53.780Z, thread-id=1158, tx_id=61E05E0F7330195FBCE66612F6ECFF4CD9E25AFACF4B81126956B69C6C41D47B}
[INFO ] 2020-09-22T07:27:53,936Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=2575dbac-f06b-4aaa-8f34-298ae554fb44, invocation_id=5b9695ca-d53a-487b-9e30-1f7ebf04300b, invocation_timestamp=2020-09-22T07:27:53.780Z, origin=Only For Testing, session_id=5b9695ca-d53a-487b-9e30-1f7ebf04300b, session_timestamp=2020-09-22T07:27:53.780Z, thread-id=1158, tx_id=61E05E0F7330195FBCE66612F6ECFF4CD9E25AFACF4B81126956B69C6C41D47B}
[INFO ] 2020-09-22T07:27:53,956Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=2575dbac-f06b-4aaa-8f34-298ae554fb44, invocation_id=5b9695ca-d53a-487b-9e30-1f7ebf04300b, invocation_timestamp=2020-09-22T07:27:53.780Z, origin=Only For Testing, session_id=5b9695ca-d53a-487b-9e30-1f7ebf04300b, session_timestamp=2020-09-22T07:27:53.780Z, thread-id=1158, tx_id=61E05E0F7330195FBCE66612F6ECFF4CD9E25AFACF4B81126956B69C6C41D47B}
[INFO ] 2020-09-22T07:27:53,967Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000009, flow-id=f526e431-9a4f-4221-9728-a7dfff4cc131, invocation_id=a80a8d7e-055d-4eb8-97fc-73edee28fc2d, invocation_timestamp=2020-09-22T07:27:53.854Z, origin=O=Mock Company 1, L=London, C=GB, session_id=a80a8d7e-055d-4eb8-97fc-73edee28fc2d, session_timestamp=2020-09-22T07:27:53.854Z, thread-id=1158, tx_id=61E05E0F7330195FBCE66612F6ECFF4CD9E25AFACF4B81126956B69C6C41D47B}
[INFO ] 2020-09-22T07:27:53,974Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000009, flow-id=f526e431-9a4f-4221-9728-a7dfff4cc131, invocation_id=a80a8d7e-055d-4eb8-97fc-73edee28fc2d, invocation_timestamp=2020-09-22T07:27:53.854Z, origin=O=Mock Company 1, L=London, C=GB, session_id=a80a8d7e-055d-4eb8-97fc-73edee28fc2d, session_timestamp=2020-09-22T07:27:53.854Z, thread-id=1158, tx_id=61E05E0F7330195FBCE66612F6ECFF4CD9E25AFACF4B81126956B69C6C41D47B}
[INFO ] 2020-09-22T07:27:53,980Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000009, flow-id=f526e431-9a4f-4221-9728-a7dfff4cc131, invocation_id=a80a8d7e-055d-4eb8-97fc-73edee28fc2d, invocation_timestamp=2020-09-22T07:27:53.854Z, origin=O=Mock Company 1, L=London, C=GB, session_id=a80a8d7e-055d-4eb8-97fc-73edee28fc2d, session_timestamp=2020-09-22T07:27:53.854Z, thread-id=1158, tx_id=61E05E0F7330195FBCE66612F6ECFF4CD9E25AFACF4B81126956B69C6C41D47B}
[INFO ] 2020-09-22T07:27:53,990Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000009, flow-id=f526e431-9a4f-4221-9728-a7dfff4cc131, invocation_id=a80a8d7e-055d-4eb8-97fc-73edee28fc2d, invocation_timestamp=2020-09-22T07:27:53.854Z, origin=O=Mock Company 1, L=London, C=GB, session_id=a80a8d7e-055d-4eb8-97fc-73edee28fc2d, session_timestamp=2020-09-22T07:27:53.854Z, thread-id=1158, tx_id=61E05E0F7330195FBCE66612F6ECFF4CD9E25AFACF4B81126956B69C6C41D47B}
[INFO ] 2020-09-22T07:27:53,998Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=2575dbac-f06b-4aaa-8f34-298ae554fb44, invocation_id=5b9695ca-d53a-487b-9e30-1f7ebf04300b, invocation_timestamp=2020-09-22T07:27:53.780Z, origin=Only For Testing, session_id=5b9695ca-d53a-487b-9e30-1f7ebf04300b, session_timestamp=2020-09-22T07:27:53.780Z, thread-id=1158, tx_id=61E05E0F7330195FBCE66612F6ECFF4CD9E25AFACF4B81126956B69C6C41D47B}
[INFO ] 2020-09-22T07:27:53,998Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=2575dbac-f06b-4aaa-8f34-298ae554fb44, invocation_id=5b9695ca-d53a-487b-9e30-1f7ebf04300b, invocation_timestamp=2020-09-22T07:27:53.780Z, origin=Only For Testing, session_id=5b9695ca-d53a-487b-9e30-1f7ebf04300b, session_timestamp=2020-09-22T07:27:53.780Z, thread-id=1158, tx_id=61E05E0F7330195FBCE66612F6ECFF4CD9E25AFACF4B81126956B69C6C41D47B}
[INFO ] 2020-09-22T07:27:54,072Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-13) {}
[INFO ] 2020-09-22T07:27:54,076Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-14) {}
[INFO ] 2020-09-22T07:27:54,079Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-15) {}
[INFO ] 2020-09-22T07:27:54,152Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build\mock-network\20200922-072754.083\nodes\0\cordapps] {}
[INFO ] 2020-09-22T07:27:54,153Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/C:/tests/cordapp-example/workflows-java/build/mock-network/20200922-072754.083/nodes/0/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/C:/tests/cordapp-example/workflows-java/build/mock-network/20200922-072754.083/nodes/0/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-09-22T07:27:54,153Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/tests/cordapp-example/workflows-java/build/mock-network/20200922-072754.083/nodes/0/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-09-22T07:27:54,290Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/tests/cordapp-example/workflows-java/build/mock-network/20200922-072754.083/nodes/0/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2020-09-22T07:27:54,317Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2020-09-22T07:27:54,318Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-09-22T07:27:54,321Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-09-22T07:27:54,344Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-09-22T07:27:54,356Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-09-22T07:27:54.083Z
      epoch=1
  } {}
[INFO ] 2020-09-22T07:27:54,906Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:54,907Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build\mock-network\20200922-072754.083\nodes\0\network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:54,907Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:54,928Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:54,932Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:54,932Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:55,019Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:55,024Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:55,025Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:55,028Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:55,028Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:55,081Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:55,105Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-09-22T07:27:55,116Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-09-22T07:27:55,116Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-09-22T07:27:55,234Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-09-22T07:27:55,238Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-09-22T07:27:55,238Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1600759675238) {}
[INFO ] 2020-09-22T07:27:55,240Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-09-22T07:27:55,249Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1600759675238) {}
[INFO ] 2020-09-22T07:27:55,259Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-09-22T07:27:55,260Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2020-09-22T07:27:55,260Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2020-09-22T07:27:55,272Z [MockNode-16-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1600759675238) {}
[INFO ] 2020-09-22T07:27:55,277Z [MockNode-16-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-09-22T07:27:55,295Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=28D7558BE542EBD66B6CC672A3B7802ACF54B8B8BA412C0A78C88B6D3A2A9278 uploader=app filename=CorDapp Example {}
[INFO ] 2020-09-22T07:27:55,297Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-09-22T07:27:55,297Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-09-22T07:27:55,301Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1600759675238) {}
[INFO ] 2020-09-22T07:27:55,303Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1600759675238) {}
[INFO ] 2020-09-22T07:27:55,303Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-09-22T07:27:55,304Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1600759675238) {}
[INFO ] 2020-09-22T07:27:55,304Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-09-22T07:27:55,314Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build\mock-network\20200922-072754.083\nodes\1\cordapps] {}
[INFO ] 2020-09-22T07:27:55,316Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/C:/tests/cordapp-example/workflows-java/build/mock-network/20200922-072754.083/nodes/1/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/C:/tests/cordapp-example/workflows-java/build/mock-network/20200922-072754.083/nodes/1/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-09-22T07:27:55,316Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/tests/cordapp-example/workflows-java/build/mock-network/20200922-072754.083/nodes/1/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-09-22T07:27:55,447Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/tests/cordapp-example/workflows-java/build/mock-network/20200922-072754.083/nodes/1/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2020-09-22T07:27:55,465Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2020-09-22T07:27:55,466Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-09-22T07:27:55,469Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-09-22T07:27:55,508Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-09-22T07:27:55,511Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-09-22T07:27:54.083Z
      epoch=1
  } {}
[INFO ] 2020-09-22T07:27:55,865Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:55,866Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build\mock-network\20200922-072754.083\nodes\1\network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:55,866Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:55,880Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:55,882Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:55,882Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:56,020Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:56,032Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:56,034Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:56,036Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:56,036Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:56,096Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:56,101Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-09-22T07:27:56,103Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-09-22T07:27:56,103Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-09-22T07:27:56,228Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-09-22T07:27:56,230Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-09-22T07:27:56,283Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-09-22T07:27:56,283Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1600759676283) {}
[INFO ] 2020-09-22T07:27:56,285Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-09-22T07:27:56,290Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1600759676283) {}
[INFO ] 2020-09-22T07:27:56,295Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-09-22T07:27:56,295Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2020-09-22T07:27:56,295Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2020-09-22T07:27:56,310Z [MockNode-17-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1600759676283) {}
[INFO ] 2020-09-22T07:27:56,316Z [MockNode-17-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-09-22T07:27:56,341Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=28D7558BE542EBD66B6CC672A3B7802ACF54B8B8BA412C0A78C88B6D3A2A9278 uploader=app filename=CorDapp Example {}
[INFO ] 2020-09-22T07:27:56,348Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1600759676283) {}
[INFO ] 2020-09-22T07:27:56,350Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1600759675238) {}
[INFO ] 2020-09-22T07:27:56,352Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-09-22T07:27:56,361Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1600759676283) {}
[INFO ] 2020-09-22T07:27:56,363Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-09-22T07:27:56,371Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1600759676283) {}
[INFO ] 2020-09-22T07:27:56,371Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-09-22T07:27:56,372Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1600759676283) {}
[INFO ] 2020-09-22T07:27:56,372Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-09-22T07:27:56,383Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build\mock-network\20200922-072754.083\nodes\2\cordapps] {}
[INFO ] 2020-09-22T07:27:56,384Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/C:/tests/cordapp-example/workflows-java/build/mock-network/20200922-072754.083/nodes/2/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/C:/tests/cordapp-example/workflows-java/build/mock-network/20200922-072754.083/nodes/2/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-09-22T07:27:56,384Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/tests/cordapp-example/workflows-java/build/mock-network/20200922-072754.083/nodes/2/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-09-22T07:27:56,537Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/tests/cordapp-example/workflows-java/build/mock-network/20200922-072754.083/nodes/2/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2020-09-22T07:27:56,556Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2020-09-22T07:27:56,556Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-09-22T07:27:56,558Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-09-22T07:27:56,600Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-09-22T07:27:56,602Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-09-22T07:27:54.083Z
      epoch=1
  } {}
[INFO ] 2020-09-22T07:27:57,004Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:57,005Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build\mock-network\20200922-072754.083\nodes\2\network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:57,005Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:57,018Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:57,020Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:57,020Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:57,161Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:57,168Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:57,170Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:57,172Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:57,172Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:57,227Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:27:57,231Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-09-22T07:27:57,234Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-09-22T07:27:57,234Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-09-22T07:27:57,371Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-09-22T07:27:57,372Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-09-22T07:27:57,403Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-09-22T07:27:57,403Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1600759677403) {}
[INFO ] 2020-09-22T07:27:57,405Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-09-22T07:27:57,410Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1600759677403) {}
[INFO ] 2020-09-22T07:27:57,415Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-09-22T07:27:57,415Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2020-09-22T07:27:57,415Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2020-09-22T07:27:57,424Z [MockNode-18-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1600759677403) {}
[INFO ] 2020-09-22T07:27:57,427Z [MockNode-18-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-09-22T07:27:57,445Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=28D7558BE542EBD66B6CC672A3B7802ACF54B8B8BA412C0A78C88B6D3A2A9278 uploader=app filename=CorDapp Example {}
[INFO ] 2020-09-22T07:27:57,453Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1600759677403) {}
[INFO ] 2020-09-22T07:27:57,454Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1600759675238) {}
[INFO ] 2020-09-22T07:27:57,455Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-09-22T07:27:57,464Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1600759677403) {}
[INFO ] 2020-09-22T07:27:57,465Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-09-22T07:27:57,471Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1600759676283) {}
[INFO ] 2020-09-22T07:27:57,472Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-09-22T07:27:57,479Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1600759677403) {}
[INFO ] 2020-09-22T07:27:57,481Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-09-22T07:27:57,488Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1600759677403) {}
[INFO ] 2020-09-22T07:27:57,488Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-09-22T07:27:57,488Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1600759677403) {}
[INFO ] 2020-09-22T07:27:57,488Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2020-09-22T07:27:57,489Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.example.flow.ExampleFlow$Initiator, currently using: class com.example.flow.ExampleFlow$Acceptor {}
[INFO ] 2020-09-22T07:27:57,489Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2020-09-22T07:27:57,489Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.example.flow.ExampleFlow$Initiator, currently using: class com.example.flow.ExampleFlow$Acceptor {}
[INFO ] 2020-09-22T07:27:57,489Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-09-22T07:27:57,582Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000011, flow-id=4d82626c-87e5-490d-bc30-f86f955d1cdb, invocation_id=55c43c28-4f99-4cfe-8da6-a84e64e2ba77, invocation_timestamp=2020-09-22T07:27:57.570Z, origin=O=Mock Company 1, L=London, C=GB, session_id=55c43c28-4f99-4cfe-8da6-a84e64e2ba77, session_timestamp=2020-09-22T07:27:57.570Z, thread-id=1348, tx_id=1645E1563C5A719D8630A1F415EA7720A5269B78664E7EB50D3F5B013242AACD}
[INFO ] 2020-09-22T07:27:57,589Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000011, flow-id=4d82626c-87e5-490d-bc30-f86f955d1cdb, invocation_id=55c43c28-4f99-4cfe-8da6-a84e64e2ba77, invocation_timestamp=2020-09-22T07:27:57.570Z, origin=O=Mock Company 1, L=London, C=GB, session_id=55c43c28-4f99-4cfe-8da6-a84e64e2ba77, session_timestamp=2020-09-22T07:27:57.570Z, thread-id=1348, tx_id=1645E1563C5A719D8630A1F415EA7720A5269B78664E7EB50D3F5B013242AACD}
[INFO ] 2020-09-22T07:27:57,647Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000010, flow-id=96d3c6a1-5293-4bbb-abf9-360aa2bce47f, invocation_id=ba5b1136-5f8a-4146-a6a3-2b7b723046a7, invocation_timestamp=2020-09-22T07:27:57.492Z, origin=Only For Testing, session_id=ba5b1136-5f8a-4146-a6a3-2b7b723046a7, session_timestamp=2020-09-22T07:27:57.492Z, thread-id=1348, tx_id=1645E1563C5A719D8630A1F415EA7720A5269B78664E7EB50D3F5B013242AACD}
[INFO ] 2020-09-22T07:27:57,648Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000010, flow-id=96d3c6a1-5293-4bbb-abf9-360aa2bce47f, invocation_id=ba5b1136-5f8a-4146-a6a3-2b7b723046a7, invocation_timestamp=2020-09-22T07:27:57.492Z, origin=Only For Testing, session_id=ba5b1136-5f8a-4146-a6a3-2b7b723046a7, session_timestamp=2020-09-22T07:27:57.492Z, thread-id=1348, tx_id=1645E1563C5A719D8630A1F415EA7720A5269B78664E7EB50D3F5B013242AACD}
[INFO ] 2020-09-22T07:27:57,668Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000010, flow-id=96d3c6a1-5293-4bbb-abf9-360aa2bce47f, invocation_id=ba5b1136-5f8a-4146-a6a3-2b7b723046a7, invocation_timestamp=2020-09-22T07:27:57.492Z, origin=Only For Testing, session_id=ba5b1136-5f8a-4146-a6a3-2b7b723046a7, session_timestamp=2020-09-22T07:27:57.492Z, thread-id=1348, tx_id=1645E1563C5A719D8630A1F415EA7720A5269B78664E7EB50D3F5B013242AACD}
[INFO ] 2020-09-22T07:27:57,676Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000011, flow-id=4d82626c-87e5-490d-bc30-f86f955d1cdb, invocation_id=55c43c28-4f99-4cfe-8da6-a84e64e2ba77, invocation_timestamp=2020-09-22T07:27:57.570Z, origin=O=Mock Company 1, L=London, C=GB, session_id=55c43c28-4f99-4cfe-8da6-a84e64e2ba77, session_timestamp=2020-09-22T07:27:57.570Z, thread-id=1348, tx_id=1645E1563C5A719D8630A1F415EA7720A5269B78664E7EB50D3F5B013242AACD}
[INFO ] 2020-09-22T07:27:57,681Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000011, flow-id=4d82626c-87e5-490d-bc30-f86f955d1cdb, invocation_id=55c43c28-4f99-4cfe-8da6-a84e64e2ba77, invocation_timestamp=2020-09-22T07:27:57.570Z, origin=O=Mock Company 1, L=London, C=GB, session_id=55c43c28-4f99-4cfe-8da6-a84e64e2ba77, session_timestamp=2020-09-22T07:27:57.570Z, thread-id=1348, tx_id=1645E1563C5A719D8630A1F415EA7720A5269B78664E7EB50D3F5B013242AACD}
[INFO ] 2020-09-22T07:27:57,683Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000011, flow-id=4d82626c-87e5-490d-bc30-f86f955d1cdb, invocation_id=55c43c28-4f99-4cfe-8da6-a84e64e2ba77, invocation_timestamp=2020-09-22T07:27:57.570Z, origin=O=Mock Company 1, L=London, C=GB, session_id=55c43c28-4f99-4cfe-8da6-a84e64e2ba77, session_timestamp=2020-09-22T07:27:57.570Z, thread-id=1348, tx_id=1645E1563C5A719D8630A1F415EA7720A5269B78664E7EB50D3F5B013242AACD}
[INFO ] 2020-09-22T07:27:57,692Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000011, flow-id=4d82626c-87e5-490d-bc30-f86f955d1cdb, invocation_id=55c43c28-4f99-4cfe-8da6-a84e64e2ba77, invocation_timestamp=2020-09-22T07:27:57.570Z, origin=O=Mock Company 1, L=London, C=GB, session_id=55c43c28-4f99-4cfe-8da6-a84e64e2ba77, session_timestamp=2020-09-22T07:27:57.570Z, thread-id=1348, tx_id=1645E1563C5A719D8630A1F415EA7720A5269B78664E7EB50D3F5B013242AACD}
[INFO ] 2020-09-22T07:27:57,700Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000010, flow-id=96d3c6a1-5293-4bbb-abf9-360aa2bce47f, invocation_id=ba5b1136-5f8a-4146-a6a3-2b7b723046a7, invocation_timestamp=2020-09-22T07:27:57.492Z, origin=Only For Testing, session_id=ba5b1136-5f8a-4146-a6a3-2b7b723046a7, session_timestamp=2020-09-22T07:27:57.492Z, thread-id=1348, tx_id=1645E1563C5A719D8630A1F415EA7720A5269B78664E7EB50D3F5B013242AACD}
[INFO ] 2020-09-22T07:27:57,700Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000010, flow-id=96d3c6a1-5293-4bbb-abf9-360aa2bce47f, invocation_id=ba5b1136-5f8a-4146-a6a3-2b7b723046a7, invocation_timestamp=2020-09-22T07:27:57.492Z, origin=Only For Testing, session_id=ba5b1136-5f8a-4146-a6a3-2b7b723046a7, session_timestamp=2020-09-22T07:27:57.492Z, thread-id=1348, tx_id=1645E1563C5A719D8630A1F415EA7720A5269B78664E7EB50D3F5B013242AACD}
[INFO ] 2020-09-22T07:27:57,708Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-16) {}
[INFO ] 2020-09-22T07:27:57,711Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-17) {}
[INFO ] 2020-09-22T07:27:57,713Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-18) {}

[INFO ] 2020-09-22T07:28:08,348Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/C:/tests/cordapp-example/workflows-kotlin/build/generated-custom-cordapps/20200922-072807.335/custom-cordapp_1_7_8ef6901d-b4e3-4a06-8ccc-ba6e8db7877c.jar, rootPackageName=null), RestrictedURL(url=file:/C:/tests/cordapp-example/workflows-kotlin/build/generated-custom-cordapps/20200922-072807.335/custom-cordapp_1_7_1c08c45d-e2cc-4cf0-bf63-f6ce1d8cf52c.jar, rootPackageName=null) {}
[INFO ] 2020-09-22T07:28:08,526Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/tests/cordapp-example/workflows-kotlin/build/generated-custom-cordapps/20200922-072807.335/custom-cordapp_1_7_8ef6901d-b4e3-4a06-8ccc-ba6e8db7877c.jar {}
[INFO ] 2020-09-22T07:28:08,887Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/tests/cordapp-example/workflows-kotlin/build/generated-custom-cordapps/20200922-072807.335/custom-cordapp_1_7_1c08c45d-e2cc-4cf0-bf63-f6ce1d8cf52c.jar {}
[ERROR] 2020-09-22T07:28:12,974Z [Test worker] internal.Verifier. - Error validating transaction CC843D475DEDE3D47817E23A25E2D9B6AEB3BF697F37BE32B7D37B73A43792B6. - Failed requirement: The IOU's value must be non-negative. [errorCode=1j5bwha, moreInformationAt=https://errors.corda.net/OS/4.5/1j5bwha] {}
java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at com.example.contract.IOUContract.verify(IOUContract.kt:70) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:421) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:373) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:206) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext(TransactionBuilder.kt:186) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:146) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:140) ~[corda-core-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:142) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:186) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:78) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails with(LedgerDSLInterpreter.kt:80) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails with(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails with(TestDSL.kt:78) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails with(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at com.example.test.contract.IOUContractTests$cannot create negative-value IOUs$1$1.invoke(IOUContractTests.kt:92) ~[test/:?]
	at com.example.test.contract.IOUContractTests$cannot create negative-value IOUs$1$1.invoke(IOUContractTests.kt:11) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:281) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:305) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:341) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.5.jar:?]
	at com.example.test.contract.IOUContractTests$cannot create negative-value IOUs$1.invoke(IOUContractTests.kt:89) ~[test/:?]
	at com.example.test.contract.IOUContractTests$cannot create negative-value IOUs$1.invoke(IOUContractTests.kt:11) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:19) ~[corda-test-common-4.5.jar:?]
	at net.corda.coretesting.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:54) ~[corda-core-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.cannot create negative-value IOUs(IOUContractTests.kt:88) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_261]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_261]
[ERROR] 2020-09-22T07:28:12,978Z [Test worker] internal.Verifier. - Error validating transaction CC843D475DEDE3D47817E23A25E2D9B6AEB3BF697F37BE32B7D37B73A43792B6. - Failed requirement: The IOU's value must be non-negative. [errorCode=1j5bwha, moreInformationAt=https://errors.corda.net/OS/4.5/1j5bwha] {}
java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at com.example.contract.IOUContract.verify(IOUContract.kt:70) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:421) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:373) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:186) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:78) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails with(LedgerDSLInterpreter.kt:80) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails with(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails with(TestDSL.kt:78) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails with(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at com.example.test.contract.IOUContractTests$cannot create negative-value IOUs$1$1.invoke(IOUContractTests.kt:92) ~[test/:?]
	at com.example.test.contract.IOUContractTests$cannot create negative-value IOUs$1$1.invoke(IOUContractTests.kt:11) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:281) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:305) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:341) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.5.jar:?]
	at com.example.test.contract.IOUContractTests$cannot create negative-value IOUs$1.invoke(IOUContractTests.kt:89) ~[test/:?]
	at com.example.test.contract.IOUContractTests$cannot create negative-value IOUs$1.invoke(IOUContractTests.kt:11) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:19) ~[corda-test-common-4.5.jar:?]
	at net.corda.coretesting.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:54) ~[corda-core-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.cannot create negative-value IOUs(IOUContractTests.kt:88) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_261]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_261]
[ERROR] 2020-09-22T07:28:12,994Z [Test worker] internal.Verifier. - Error validating transaction CC843D475DEDE3D47817E23A25E2D9B6AEB3BF697F37BE32B7D37B73A43792B6. - Failed requirement: The IOU's value must be non-negative. [errorCode=1j5bwha, moreInformationAt=https://errors.corda.net/OS/4.5/1j5bwha] {}
java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at com.example.contract.IOUContract.verify(IOUContract.kt:70) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:421) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:373) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:206) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext(TransactionBuilder.kt:186) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:146) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:140) ~[corda-core-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:142) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:309) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:341) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.5.jar:?]
	at com.example.test.contract.IOUContractTests$cannot create negative-value IOUs$1.invoke(IOUContractTests.kt:89) ~[test/:?]
	at com.example.test.contract.IOUContractTests$cannot create negative-value IOUs$1.invoke(IOUContractTests.kt:11) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:19) ~[corda-test-common-4.5.jar:?]
	at net.corda.coretesting.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:54) ~[corda-core-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.cannot create negative-value IOUs(IOUContractTests.kt:88) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_261]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_261]
[INFO ] 2020-09-22T07:28:13,002Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/C:/tests/cordapp-example/workflows-kotlin/build/generated-custom-cordapps/20200922-072807.335/custom-cordapp_1_7_8ef6901d-b4e3-4a06-8ccc-ba6e8db7877c.jar, rootPackageName=null), RestrictedURL(url=file:/C:/tests/cordapp-example/workflows-kotlin/build/generated-custom-cordapps/20200922-072807.335/custom-cordapp_1_7_1c08c45d-e2cc-4cf0-bf63-f6ce1d8cf52c.jar, rootPackageName=null) {}
[INFO ] 2020-09-22T07:28:13,003Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/tests/cordapp-example/workflows-kotlin/build/generated-custom-cordapps/20200922-072807.335/custom-cordapp_1_7_8ef6901d-b4e3-4a06-8ccc-ba6e8db7877c.jar {}
[INFO ] 2020-09-22T07:28:13,017Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/tests/cordapp-example/workflows-kotlin/build/generated-custom-cordapps/20200922-072807.335/custom-cordapp_1_7_1c08c45d-e2cc-4cf0-bf63-f6ce1d8cf52c.jar {}
[ERROR] 2020-09-22T07:28:13,468Z [Test worker] internal.Verifier. - Error validating transaction E3C2631DFF1DF4A6BBED7FDDD5545CEBA03B9CE092D2D707A6D3C22CAFA334B7. - Failed requirement: All of the participants must be signers. [errorCode=1j5bwha, moreInformationAt=https://errors.corda.net/OS/4.5/1j5bwha] {}
java.lang.IllegalArgumentException: Failed requirement: All of the participants must be signers.
	at com.example.contract.IOUContract.verify(IOUContract.kt:68) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:421) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:373) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:206) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext(TransactionBuilder.kt:186) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:146) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:140) ~[corda-core-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:142) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:186) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:78) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails with(LedgerDSLInterpreter.kt:80) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails with(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails with(TestDSL.kt:78) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails with(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at com.example.test.contract.IOUContractTests$lender must sign transaction$1$1.invoke(IOUContractTests.kt:59) ~[test/:?]
	at com.example.test.contract.IOUContractTests$lender must sign transaction$1$1.invoke(IOUContractTests.kt:11) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:281) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:305) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:341) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.5.jar:?]
	at com.example.test.contract.IOUContractTests$lender must sign transaction$1.invoke(IOUContractTests.kt:56) ~[test/:?]
	at com.example.test.contract.IOUContractTests$lender must sign transaction$1.invoke(IOUContractTests.kt:11) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:19) ~[corda-test-common-4.5.jar:?]
	at net.corda.coretesting.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:54) ~[corda-core-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.lender must sign transaction(IOUContractTests.kt:55) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_261]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_261]
[ERROR] 2020-09-22T07:28:13,480Z [Test worker] internal.Verifier. - Error validating transaction E3C2631DFF1DF4A6BBED7FDDD5545CEBA03B9CE092D2D707A6D3C22CAFA334B7. - Failed requirement: All of the participants must be signers. [errorCode=1j5bwha, moreInformationAt=https://errors.corda.net/OS/4.5/1j5bwha] {}
java.lang.IllegalArgumentException: Failed requirement: All of the participants must be signers.
	at com.example.contract.IOUContract.verify(IOUContract.kt:68) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:421) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:373) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:186) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:78) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails with(LedgerDSLInterpreter.kt:80) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails with(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails with(TestDSL.kt:78) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails with(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at com.example.test.contract.IOUContractTests$lender must sign transaction$1$1.invoke(IOUContractTests.kt:59) ~[test/:?]
	at com.example.test.contract.IOUContractTests$lender must sign transaction$1$1.invoke(IOUContractTests.kt:11) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:281) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:305) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:341) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.5.jar:?]
	at com.example.test.contract.IOUContractTests$lender must sign transaction$1.invoke(IOUContractTests.kt:56) ~[test/:?]
	at com.example.test.contract.IOUContractTests$lender must sign transaction$1.invoke(IOUContractTests.kt:11) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:19) ~[corda-test-common-4.5.jar:?]
	at net.corda.coretesting.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:54) ~[corda-core-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.lender must sign transaction(IOUContractTests.kt:55) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_261]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_261]
[ERROR] 2020-09-22T07:28:13,527Z [Test worker] internal.Verifier. - Error validating transaction E3C2631DFF1DF4A6BBED7FDDD5545CEBA03B9CE092D2D707A6D3C22CAFA334B7. - Failed requirement: All of the participants must be signers. [errorCode=1j5bwha, moreInformationAt=https://errors.corda.net/OS/4.5/1j5bwha] {}
java.lang.IllegalArgumentException: Failed requirement: All of the participants must be signers.
	at com.example.contract.IOUContract.verify(IOUContract.kt:68) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:421) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:373) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:206) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext(TransactionBuilder.kt:186) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:146) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:140) ~[corda-core-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:142) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:309) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:341) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.5.jar:?]
	at com.example.test.contract.IOUContractTests$lender must sign transaction$1.invoke(IOUContractTests.kt:56) ~[test/:?]
	at com.example.test.contract.IOUContractTests$lender must sign transaction$1.invoke(IOUContractTests.kt:11) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:19) ~[corda-test-common-4.5.jar:?]
	at net.corda.coretesting.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:54) ~[corda-core-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.lender must sign transaction(IOUContractTests.kt:55) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_261]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_261]
[INFO ] 2020-09-22T07:28:13,530Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/C:/tests/cordapp-example/workflows-kotlin/build/generated-custom-cordapps/20200922-072807.335/custom-cordapp_1_7_8ef6901d-b4e3-4a06-8ccc-ba6e8db7877c.jar, rootPackageName=null), RestrictedURL(url=file:/C:/tests/cordapp-example/workflows-kotlin/build/generated-custom-cordapps/20200922-072807.335/custom-cordapp_1_7_1c08c45d-e2cc-4cf0-bf63-f6ce1d8cf52c.jar, rootPackageName=null) {}
[INFO ] 2020-09-22T07:28:13,531Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/tests/cordapp-example/workflows-kotlin/build/generated-custom-cordapps/20200922-072807.335/custom-cordapp_1_7_8ef6901d-b4e3-4a06-8ccc-ba6e8db7877c.jar {}
[INFO ] 2020-09-22T07:28:13,611Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/tests/cordapp-example/workflows-kotlin/build/generated-custom-cordapps/20200922-072807.335/custom-cordapp_1_7_1c08c45d-e2cc-4cf0-bf63-f6ce1d8cf52c.jar {}
[ERROR] 2020-09-22T07:28:13,909Z [Test worker] internal.Verifier. - Error validating transaction D041E93999FFAD850A6176BFA2F8F34D8689776F0717AC79B190C8F5A8BDC69D. - Failed requirement: Only one output state should be created. [errorCode=1j5bwha, moreInformationAt=https://errors.corda.net/OS/4.5/1j5bwha] {}
java.lang.IllegalArgumentException: Failed requirement: Only one output state should be created.
	at com.example.contract.IOUContract.verify(IOUContract.kt:59) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:421) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:373) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:206) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext(TransactionBuilder.kt:186) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:146) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:140) ~[corda-core-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:142) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:186) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:78) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails with(LedgerDSLInterpreter.kt:80) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails with(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails with(TestDSL.kt:78) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails with(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at com.example.test.contract.IOUContractTests$transaction must have one output$1$1.invoke(IOUContractTests.kt:48) ~[test/:?]
	at com.example.test.contract.IOUContractTests$transaction must have one output$1$1.invoke(IOUContractTests.kt:11) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:281) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:305) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:341) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.5.jar:?]
	at com.example.test.contract.IOUContractTests$transaction must have one output$1.invoke(IOUContractTests.kt:44) ~[test/:?]
	at com.example.test.contract.IOUContractTests$transaction must have one output$1.invoke(IOUContractTests.kt:11) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:19) ~[corda-test-common-4.5.jar:?]
	at net.corda.coretesting.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:54) ~[corda-core-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.transaction must have one output(IOUContractTests.kt:43) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_261]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_261]
[ERROR] 2020-09-22T07:28:13,912Z [Test worker] internal.Verifier. - Error validating transaction D041E93999FFAD850A6176BFA2F8F34D8689776F0717AC79B190C8F5A8BDC69D. - Failed requirement: Only one output state should be created. [errorCode=1j5bwha, moreInformationAt=https://errors.corda.net/OS/4.5/1j5bwha] {}
java.lang.IllegalArgumentException: Failed requirement: Only one output state should be created.
	at com.example.contract.IOUContract.verify(IOUContract.kt:59) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:421) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:373) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:186) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:78) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails with(LedgerDSLInterpreter.kt:80) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails with(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails with(TestDSL.kt:78) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails with(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at com.example.test.contract.IOUContractTests$transaction must have one output$1$1.invoke(IOUContractTests.kt:48) ~[test/:?]
	at com.example.test.contract.IOUContractTests$transaction must have one output$1$1.invoke(IOUContractTests.kt:11) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:281) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:305) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:341) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.5.jar:?]
	at com.example.test.contract.IOUContractTests$transaction must have one output$1.invoke(IOUContractTests.kt:44) ~[test/:?]
	at com.example.test.contract.IOUContractTests$transaction must have one output$1.invoke(IOUContractTests.kt:11) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:19) ~[corda-test-common-4.5.jar:?]
	at net.corda.coretesting.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:54) ~[corda-core-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.transaction must have one output(IOUContractTests.kt:43) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_261]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_261]
[ERROR] 2020-09-22T07:28:13,922Z [Test worker] internal.Verifier. - Error validating transaction D041E93999FFAD850A6176BFA2F8F34D8689776F0717AC79B190C8F5A8BDC69D. - Failed requirement: Only one output state should be created. [errorCode=1j5bwha, moreInformationAt=https://errors.corda.net/OS/4.5/1j5bwha] {}
java.lang.IllegalArgumentException: Failed requirement: Only one output state should be created.
	at com.example.contract.IOUContract.verify(IOUContract.kt:59) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:421) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:373) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:206) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext(TransactionBuilder.kt:186) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:146) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:140) ~[corda-core-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:142) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:309) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:341) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.5.jar:?]
	at com.example.test.contract.IOUContractTests$transaction must have one output$1.invoke(IOUContractTests.kt:44) ~[test/:?]
	at com.example.test.contract.IOUContractTests$transaction must have one output$1.invoke(IOUContractTests.kt:11) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:19) ~[corda-test-common-4.5.jar:?]
	at net.corda.coretesting.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:54) ~[corda-core-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.transaction must have one output(IOUContractTests.kt:43) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_261]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_261]
[INFO ] 2020-09-22T07:28:13,923Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/C:/tests/cordapp-example/workflows-kotlin/build/generated-custom-cordapps/20200922-072807.335/custom-cordapp_1_7_8ef6901d-b4e3-4a06-8ccc-ba6e8db7877c.jar, rootPackageName=null), RestrictedURL(url=file:/C:/tests/cordapp-example/workflows-kotlin/build/generated-custom-cordapps/20200922-072807.335/custom-cordapp_1_7_1c08c45d-e2cc-4cf0-bf63-f6ce1d8cf52c.jar, rootPackageName=null) {}
[INFO ] 2020-09-22T07:28:13,923Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/tests/cordapp-example/workflows-kotlin/build/generated-custom-cordapps/20200922-072807.335/custom-cordapp_1_7_8ef6901d-b4e3-4a06-8ccc-ba6e8db7877c.jar {}
[INFO ] 2020-09-22T07:28:13,936Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/tests/cordapp-example/workflows-kotlin/build/generated-custom-cordapps/20200922-072807.335/custom-cordapp_1_7_1c08c45d-e2cc-4cf0-bf63-f6ce1d8cf52c.jar {}
[WARN ] 2020-09-22T07:28:14,123Z [Test worker] contracts.AttachmentConstraint. - Found state com.example.contract.IOUContract that is constrained by the insecure: AlwaysAcceptAttachmentConstraint. {}
[ERROR] 2020-09-22T07:28:14,207Z [Test worker] internal.Verifier. - Error validating transaction A0FDD0F51FF7D3FCB802B39D4FF859BE832FBD8DE8B0804462392756B6328E39. - Required com.example.contract.IOUContract.Commands.Create command [errorCode=11xj1ns, moreInformationAt=https://errors.corda.net/OS/4.5/11xj1ns] {}
java.lang.IllegalStateException: Required com.example.contract.IOUContract.Commands.Create command
	at net.corda.core.contracts.ContractsDSL.requireSingleCommand(ContractsDSL.kt:81) ~[corda-core-4.5.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.kt:55) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:421) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:373) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:206) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext(TransactionBuilder.kt:186) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:146) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:140) ~[corda-core-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:142) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:309) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._unverifiedTransaction(TestDSL.kt:347) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TransactionDSL.input(TransactionDSLInterpreter.kt:150) ~[corda-test-utils-4.5.jar:?]
	at com.example.test.contract.IOUContractTests$transaction must have no inputs$1$1.invoke(IOUContractTests.kt:33) ~[test/:?]
	at com.example.test.contract.IOUContractTests$transaction must have no inputs$1$1.invoke(IOUContractTests.kt:11) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:281) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:305) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:341) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.5.jar:?]
	at com.example.test.contract.IOUContractTests$transaction must have no inputs$1.invoke(IOUContractTests.kt:32) ~[test/:?]
	at com.example.test.contract.IOUContractTests$transaction must have no inputs$1.invoke(IOUContractTests.kt:11) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:19) ~[corda-test-common-4.5.jar:?]
	at net.corda.coretesting.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:54) ~[corda-core-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.transaction must have no inputs(IOUContractTests.kt:31) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_261]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_261]
[ERROR] 2020-09-22T07:28:14,466Z [Test worker] internal.Verifier. - Error validating transaction 57C95FED2C6C3000A56302412E1CF7233EA5FCC0516A6F88858F05F050E19292. - Failed requirement: No inputs should be consumed when issuing an IOU. [errorCode=1j5bwha, moreInformationAt=https://errors.corda.net/OS/4.5/1j5bwha] {}
java.lang.IllegalArgumentException: Failed requirement: No inputs should be consumed when issuing an IOU.
	at com.example.contract.IOUContract.verify(IOUContract.kt:57) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:421) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:373) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:206) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext(TransactionBuilder.kt:186) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:146) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:140) ~[corda-core-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:142) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:186) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:78) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails with(LedgerDSLInterpreter.kt:80) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails with(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails with(TestDSL.kt:78) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails with(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at com.example.test.contract.IOUContractTests$transaction must have no inputs$1$1.invoke(IOUContractTests.kt:36) ~[test/:?]
	at com.example.test.contract.IOUContractTests$transaction must have no inputs$1$1.invoke(IOUContractTests.kt:11) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:281) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:305) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:341) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.5.jar:?]
	at com.example.test.contract.IOUContractTests$transaction must have no inputs$1.invoke(IOUContractTests.kt:32) ~[test/:?]
	at com.example.test.contract.IOUContractTests$transaction must have no inputs$1.invoke(IOUContractTests.kt:11) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:19) ~[corda-test-common-4.5.jar:?]
	at net.corda.coretesting.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:54) ~[corda-core-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.transaction must have no inputs(IOUContractTests.kt:31) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_261]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_261]
[ERROR] 2020-09-22T07:28:14,472Z [Test worker] internal.Verifier. - Error validating transaction 57C95FED2C6C3000A56302412E1CF7233EA5FCC0516A6F88858F05F050E19292. - Failed requirement: No inputs should be consumed when issuing an IOU. [errorCode=1j5bwha, moreInformationAt=https://errors.corda.net/OS/4.5/1j5bwha] {}
java.lang.IllegalArgumentException: Failed requirement: No inputs should be consumed when issuing an IOU.
	at com.example.contract.IOUContract.verify(IOUContract.kt:57) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:421) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:373) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:186) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:78) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails with(LedgerDSLInterpreter.kt:80) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails with(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails with(TestDSL.kt:78) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails with(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at com.example.test.contract.IOUContractTests$transaction must have no inputs$1$1.invoke(IOUContractTests.kt:36) ~[test/:?]
	at com.example.test.contract.IOUContractTests$transaction must have no inputs$1$1.invoke(IOUContractTests.kt:11) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:281) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:305) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:341) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.5.jar:?]
	at com.example.test.contract.IOUContractTests$transaction must have no inputs$1.invoke(IOUContractTests.kt:32) ~[test/:?]
	at com.example.test.contract.IOUContractTests$transaction must have no inputs$1.invoke(IOUContractTests.kt:11) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:19) ~[corda-test-common-4.5.jar:?]
	at net.corda.coretesting.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:54) ~[corda-core-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.transaction must have no inputs(IOUContractTests.kt:31) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_261]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_261]
[ERROR] 2020-09-22T07:28:14,487Z [Test worker] internal.Verifier. - Error validating transaction 57C95FED2C6C3000A56302412E1CF7233EA5FCC0516A6F88858F05F050E19292. - Failed requirement: No inputs should be consumed when issuing an IOU. [errorCode=1j5bwha, moreInformationAt=https://errors.corda.net/OS/4.5/1j5bwha] {}
java.lang.IllegalArgumentException: Failed requirement: No inputs should be consumed when issuing an IOU.
	at com.example.contract.IOUContract.verify(IOUContract.kt:57) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:421) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:373) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:206) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext(TransactionBuilder.kt:186) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:146) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:140) ~[corda-core-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:142) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:309) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:341) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.5.jar:?]
	at com.example.test.contract.IOUContractTests$transaction must have no inputs$1.invoke(IOUContractTests.kt:32) ~[test/:?]
	at com.example.test.contract.IOUContractTests$transaction must have no inputs$1.invoke(IOUContractTests.kt:11) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:19) ~[corda-test-common-4.5.jar:?]
	at net.corda.coretesting.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:54) ~[corda-core-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.transaction must have no inputs(IOUContractTests.kt:31) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_261]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_261]
[INFO ] 2020-09-22T07:28:14,489Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/C:/tests/cordapp-example/workflows-kotlin/build/generated-custom-cordapps/20200922-072807.335/custom-cordapp_1_7_8ef6901d-b4e3-4a06-8ccc-ba6e8db7877c.jar, rootPackageName=null), RestrictedURL(url=file:/C:/tests/cordapp-example/workflows-kotlin/build/generated-custom-cordapps/20200922-072807.335/custom-cordapp_1_7_1c08c45d-e2cc-4cf0-bf63-f6ce1d8cf52c.jar, rootPackageName=null) {}
[INFO ] 2020-09-22T07:28:14,489Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/tests/cordapp-example/workflows-kotlin/build/generated-custom-cordapps/20200922-072807.335/custom-cordapp_1_7_8ef6901d-b4e3-4a06-8ccc-ba6e8db7877c.jar {}
[INFO ] 2020-09-22T07:28:14,505Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/tests/cordapp-example/workflows-kotlin/build/generated-custom-cordapps/20200922-072807.335/custom-cordapp_1_7_1c08c45d-e2cc-4cf0-bf63-f6ce1d8cf52c.jar {}
[ERROR] 2020-09-22T07:28:14,759Z [Test worker] internal.Verifier. - Error validating transaction CE2D96475B5CADAEF5EB55515AC2FEC6F02CD7AC66D086F7319BF54B63CCF805. - Failed requirement: The lender and the borrower cannot be the same entity. [errorCode=1j5bwha, moreInformationAt=https://errors.corda.net/OS/4.5/1j5bwha] {}
java.lang.IllegalArgumentException: Failed requirement: The lender and the borrower cannot be the same entity.
	at com.example.contract.IOUContract.verify(IOUContract.kt:62) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:421) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:373) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:206) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext(TransactionBuilder.kt:186) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:146) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:140) ~[corda-core-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:142) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:186) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:78) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails with(LedgerDSLInterpreter.kt:80) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails with(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails with(TestDSL.kt:78) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails with(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at com.example.test.contract.IOUContractTests$lender is not borrower$1$1.invoke(IOUContractTests.kt:81) ~[test/:?]
	at com.example.test.contract.IOUContractTests$lender is not borrower$1$1.invoke(IOUContractTests.kt:11) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:281) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:305) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:341) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.5.jar:?]
	at com.example.test.contract.IOUContractTests$lender is not borrower$1.invoke(IOUContractTests.kt:78) ~[test/:?]
	at com.example.test.contract.IOUContractTests$lender is not borrower$1.invoke(IOUContractTests.kt:11) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:19) ~[corda-test-common-4.5.jar:?]
	at net.corda.coretesting.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:54) ~[corda-core-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.lender is not borrower(IOUContractTests.kt:77) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_261]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_261]
[ERROR] 2020-09-22T07:28:14,762Z [Test worker] internal.Verifier. - Error validating transaction CE2D96475B5CADAEF5EB55515AC2FEC6F02CD7AC66D086F7319BF54B63CCF805. - Failed requirement: The lender and the borrower cannot be the same entity. [errorCode=1j5bwha, moreInformationAt=https://errors.corda.net/OS/4.5/1j5bwha] {}
java.lang.IllegalArgumentException: Failed requirement: The lender and the borrower cannot be the same entity.
	at com.example.contract.IOUContract.verify(IOUContract.kt:62) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:421) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:373) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:186) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:78) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails with(LedgerDSLInterpreter.kt:80) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails with(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails with(TestDSL.kt:78) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails with(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at com.example.test.contract.IOUContractTests$lender is not borrower$1$1.invoke(IOUContractTests.kt:81) ~[test/:?]
	at com.example.test.contract.IOUContractTests$lender is not borrower$1$1.invoke(IOUContractTests.kt:11) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:281) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:305) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:341) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.5.jar:?]
	at com.example.test.contract.IOUContractTests$lender is not borrower$1.invoke(IOUContractTests.kt:78) ~[test/:?]
	at com.example.test.contract.IOUContractTests$lender is not borrower$1.invoke(IOUContractTests.kt:11) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:19) ~[corda-test-common-4.5.jar:?]
	at net.corda.coretesting.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:54) ~[corda-core-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.lender is not borrower(IOUContractTests.kt:77) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_261]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_261]
[ERROR] 2020-09-22T07:28:14,772Z [Test worker] internal.Verifier. - Error validating transaction CE2D96475B5CADAEF5EB55515AC2FEC6F02CD7AC66D086F7319BF54B63CCF805. - Failed requirement: The lender and the borrower cannot be the same entity. [errorCode=1j5bwha, moreInformationAt=https://errors.corda.net/OS/4.5/1j5bwha] {}
java.lang.IllegalArgumentException: Failed requirement: The lender and the borrower cannot be the same entity.
	at com.example.contract.IOUContract.verify(IOUContract.kt:62) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:421) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:373) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:206) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext(TransactionBuilder.kt:186) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:146) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:140) ~[corda-core-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:142) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:309) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:341) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.5.jar:?]
	at com.example.test.contract.IOUContractTests$lender is not borrower$1.invoke(IOUContractTests.kt:78) ~[test/:?]
	at com.example.test.contract.IOUContractTests$lender is not borrower$1.invoke(IOUContractTests.kt:11) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:19) ~[corda-test-common-4.5.jar:?]
	at net.corda.coretesting.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:54) ~[corda-core-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.lender is not borrower(IOUContractTests.kt:77) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_261]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_261]
[INFO ] 2020-09-22T07:28:14,774Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/C:/tests/cordapp-example/workflows-kotlin/build/generated-custom-cordapps/20200922-072807.335/custom-cordapp_1_7_8ef6901d-b4e3-4a06-8ccc-ba6e8db7877c.jar, rootPackageName=null), RestrictedURL(url=file:/C:/tests/cordapp-example/workflows-kotlin/build/generated-custom-cordapps/20200922-072807.335/custom-cordapp_1_7_1c08c45d-e2cc-4cf0-bf63-f6ce1d8cf52c.jar, rootPackageName=null) {}
[INFO ] 2020-09-22T07:28:14,774Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/tests/cordapp-example/workflows-kotlin/build/generated-custom-cordapps/20200922-072807.335/custom-cordapp_1_7_8ef6901d-b4e3-4a06-8ccc-ba6e8db7877c.jar {}
[INFO ] 2020-09-22T07:28:14,783Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/tests/cordapp-example/workflows-kotlin/build/generated-custom-cordapps/20200922-072807.335/custom-cordapp_1_7_1c08c45d-e2cc-4cf0-bf63-f6ce1d8cf52c.jar {}
[INFO ] 2020-09-22T07:28:14,986Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/C:/tests/cordapp-example/workflows-kotlin/build/generated-custom-cordapps/20200922-072807.335/custom-cordapp_1_7_8ef6901d-b4e3-4a06-8ccc-ba6e8db7877c.jar, rootPackageName=null), RestrictedURL(url=file:/C:/tests/cordapp-example/workflows-kotlin/build/generated-custom-cordapps/20200922-072807.335/custom-cordapp_1_7_1c08c45d-e2cc-4cf0-bf63-f6ce1d8cf52c.jar, rootPackageName=null) {}
[INFO ] 2020-09-22T07:28:14,986Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/tests/cordapp-example/workflows-kotlin/build/generated-custom-cordapps/20200922-072807.335/custom-cordapp_1_7_8ef6901d-b4e3-4a06-8ccc-ba6e8db7877c.jar {}
[INFO ] 2020-09-22T07:28:14,998Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/tests/cordapp-example/workflows-kotlin/build/generated-custom-cordapps/20200922-072807.335/custom-cordapp_1_7_1c08c45d-e2cc-4cf0-bf63-f6ce1d8cf52c.jar {}
[ERROR] 2020-09-22T07:28:15,159Z [Test worker] internal.Verifier. - Error validating transaction 4AB828853B910ADB896CA78E986B968D1D69025BB4877BCE567ED2417806C3C7. - Failed requirement: All of the participants must be signers. [errorCode=1j5bwha, moreInformationAt=https://errors.corda.net/OS/4.5/1j5bwha] {}
java.lang.IllegalArgumentException: Failed requirement: All of the participants must be signers.
	at com.example.contract.IOUContract.verify(IOUContract.kt:68) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:421) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:373) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:206) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext(TransactionBuilder.kt:186) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:146) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:140) ~[corda-core-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:142) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:186) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:78) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails with(LedgerDSLInterpreter.kt:80) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails with(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails with(TestDSL.kt:78) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails with(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at com.example.test.contract.IOUContractTests$borrower must sign transaction$1$1.invoke(IOUContractTests.kt:70) ~[test/:?]
	at com.example.test.contract.IOUContractTests$borrower must sign transaction$1$1.invoke(IOUContractTests.kt:11) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:281) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:305) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:341) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.5.jar:?]
	at com.example.test.contract.IOUContractTests$borrower must sign transaction$1.invoke(IOUContractTests.kt:67) ~[test/:?]
	at com.example.test.contract.IOUContractTests$borrower must sign transaction$1.invoke(IOUContractTests.kt:11) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:19) ~[corda-test-common-4.5.jar:?]
	at net.corda.coretesting.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:54) ~[corda-core-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.borrower must sign transaction(IOUContractTests.kt:66) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_261]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_261]
[ERROR] 2020-09-22T07:28:15,161Z [Test worker] internal.Verifier. - Error validating transaction 4AB828853B910ADB896CA78E986B968D1D69025BB4877BCE567ED2417806C3C7. - Failed requirement: All of the participants must be signers. [errorCode=1j5bwha, moreInformationAt=https://errors.corda.net/OS/4.5/1j5bwha] {}
java.lang.IllegalArgumentException: Failed requirement: All of the participants must be signers.
	at com.example.contract.IOUContract.verify(IOUContract.kt:68) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:421) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:373) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:186) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:78) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails with(LedgerDSLInterpreter.kt:80) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails with(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails with(TestDSL.kt:78) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails with(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at com.example.test.contract.IOUContractTests$borrower must sign transaction$1$1.invoke(IOUContractTests.kt:70) ~[test/:?]
	at com.example.test.contract.IOUContractTests$borrower must sign transaction$1$1.invoke(IOUContractTests.kt:11) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:281) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:305) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:341) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.5.jar:?]
	at com.example.test.contract.IOUContractTests$borrower must sign transaction$1.invoke(IOUContractTests.kt:67) ~[test/:?]
	at com.example.test.contract.IOUContractTests$borrower must sign transaction$1.invoke(IOUContractTests.kt:11) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:19) ~[corda-test-common-4.5.jar:?]
	at net.corda.coretesting.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:54) ~[corda-core-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.borrower must sign transaction(IOUContractTests.kt:66) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_261]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_261]
[ERROR] 2020-09-22T07:28:15,169Z [Test worker] internal.Verifier. - Error validating transaction 4AB828853B910ADB896CA78E986B968D1D69025BB4877BCE567ED2417806C3C7. - Failed requirement: All of the participants must be signers. [errorCode=1j5bwha, moreInformationAt=https://errors.corda.net/OS/4.5/1j5bwha] {}
java.lang.IllegalArgumentException: Failed requirement: All of the participants must be signers.
	at com.example.contract.IOUContract.verify(IOUContract.kt:68) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:421) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:373) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:206) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext(TransactionBuilder.kt:186) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:146) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:140) ~[corda-core-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:142) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:309) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:341) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.5.jar:?]
	at com.example.test.contract.IOUContractTests$borrower must sign transaction$1.invoke(IOUContractTests.kt:67) ~[test/:?]
	at com.example.test.contract.IOUContractTests$borrower must sign transaction$1.invoke(IOUContractTests.kt:11) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:19) ~[corda-test-common-4.5.jar:?]
	at net.corda.coretesting.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:54) ~[corda-core-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.borrower must sign transaction(IOUContractTests.kt:66) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_261]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_261]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_261]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_261]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_261]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_261]
[INFO ] 2020-09-22T07:28:15,857Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in C:\tests\cordapp-example\workflows-kotlin ... {}
[INFO ] 2020-09-22T07:28:16,134Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-09-22T07:28:17,791Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2020-09-22T07:28:17,807Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-09-22T07:28:17,857Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-09-22T07:28:17,857Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2020-09-22T07:28:17,857Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-09-22T07:28:17,857Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-09-22T07:28:17,857Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2020-09-22T07:28:17,871Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-09-22T07:28:17,871Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-09-22T07:28:17,886Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2020-09-22T07:28:17,961Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-09-22T07:28:17,961Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-09-22T07:28:17,976Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-09-22T07:28:17,976Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-09-22T07:28:17,976Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-09-22T07:28:18,066Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-09-22T07:28:18,066Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-09-22T07:28:18,081Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of detachedConfiguration1 {}
[INFO ] 2020-09-22T07:28:18,081Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-09-22T07:28:18,081Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :clients:classpath {}
[INFO ] 2020-09-22T07:28:18,097Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-09-22T07:28:18,097Z [Connection worker] internal.TestCordappImpl. - Resolve files of :clients:classpath {}
[INFO ] 2020-09-22T07:28:18,097Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-09-22T07:28:18,097Z [Connection worker] internal.TestCordappImpl. - Resolve files of :clients:classpath {}
[INFO ] 2020-09-22T07:28:18,097Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-09-22T07:28:18,126Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-09-22T07:28:18,126Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts-java {}
[INFO ] 2020-09-22T07:28:18,141Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-09-22T07:28:18,141Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts-kotlin {}
[INFO ] 2020-09-22T07:28:18,156Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-09-22T07:28:18,157Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows-java {}
[INFO ] 2020-09-22T07:28:18,186Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-09-22T07:28:18,186Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows-kotlin {}
[INFO ] 2020-09-22T07:28:18,216Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-09-22T07:28:18,216Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-09-22T07:28:18,246Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows-kotlin:kotlinCompilerClasspath {}
[INFO ] 2020-09-22T07:28:18,262Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-09-22T07:28:18,262Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-kotlin:kotlinCompilerClasspath {}
[INFO ] 2020-09-22T07:28:18,263Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-09-22T07:28:18,263Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts-kotlin:kotlinCompilerClasspath {}
[INFO ] 2020-09-22T07:28:18,276Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-09-22T07:28:18,276Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts-kotlin:kotlinCompilerClasspath {}
[INFO ] 2020-09-22T07:28:18,276Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-09-22T07:28:18,276Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-09-22T07:28:18,291Z [Connection worker] internal.TestCordappImpl. - Task :contracts-kotlin:compileKotlin {}
[INFO ] 2020-09-22T07:28:18,291Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts-kotlin:kotlinCompilerClasspath {}
[INFO ] 2020-09-22T07:28:18,291Z [Connection worker] internal.TestCordappImpl. - Task :contracts-kotlin:compileKotlin {}
[INFO ] 2020-09-22T07:28:18,352Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts-kotlin:kotlinCompilerPluginClasspath {}
[INFO ] 2020-09-22T07:28:18,353Z [Connection worker] internal.TestCordappImpl. - Task :contracts-kotlin:compileKotlin {}
[INFO ] 2020-09-22T07:28:18,353Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts-kotlin:kotlinCompilerPluginClasspath {}
[INFO ] 2020-09-22T07:28:18,353Z [Connection worker] internal.TestCordappImpl. - Task :contracts-kotlin:compileKotlin {}
[INFO ] 2020-09-22T07:28:18,372Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts-kotlin:compileClasspath {}
[INFO ] 2020-09-22T07:28:18,442Z [Connection worker] internal.TestCordappImpl. - Task :contracts-kotlin:compileKotlin {}
[INFO ] 2020-09-22T07:28:18,443Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts-kotlin:compileClasspath {}
[INFO ] 2020-09-22T07:28:18,460Z [Connection worker] internal.TestCordappImpl. - Task :contracts-kotlin:compileKotlin {}
[INFO ] 2020-09-22T07:28:19,012Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts-kotlin:compileClasspath {}
[INFO ] 2020-09-22T07:28:19,012Z [Connection worker] internal.TestCordappImpl. - Task :contracts-kotlin:compileKotlin {}
[INFO ] 2020-09-22T07:28:19,027Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts-kotlin:kotlinCompilerPluginClasspath {}
[INFO ] 2020-09-22T07:28:19,027Z [Connection worker] internal.TestCordappImpl. - Task :contracts-kotlin:compileKotlin {}
[INFO ] 2020-09-22T07:28:19,028Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-09-22T07:28:19,028Z [Connection worker] internal.TestCordappImpl. - Task :contracts-kotlin:compileJava {}
[INFO ] 2020-09-22T07:28:19,042Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-09-22T07:28:19,042Z [Connection worker] internal.TestCordappImpl. - Task :contracts-kotlin:processResources {}
[INFO ] 2020-09-22T07:28:19,042Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-09-22T07:28:19,042Z [Connection worker] internal.TestCordappImpl. - Task :contracts-kotlin:classes {}
[INFO ] 2020-09-22T07:28:19,043Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-09-22T07:28:19,043Z [Connection worker] internal.TestCordappImpl. - Task :contracts-kotlin:configureCordappFatJar {}
[INFO ] 2020-09-22T07:28:19,043Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts-kotlin:runtime {}
[INFO ] 2020-09-22T07:28:19,072Z [Connection worker] internal.TestCordappImpl. - Task :contracts-kotlin:configureCordappFatJar {}
[INFO ] 2020-09-22T07:28:19,072Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts-kotlin:runtime {}
[INFO ] 2020-09-22T07:28:19,072Z [Connection worker] internal.TestCordappImpl. - Task :contracts-kotlin:configureCordappFatJar {}
[INFO ] 2020-09-22T07:28:19,072Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-09-22T07:28:19,072Z [Connection worker] internal.TestCordappImpl. - Task :contracts-kotlin:inspectClassesForKotlinIC {}
[INFO ] 2020-09-22T07:28:19,087Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-09-22T07:28:19,088Z [Connection worker] internal.TestCordappImpl. - Task :contracts-kotlin:jar {}
[INFO ] 2020-09-22T07:28:19,102Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-09-22T07:28:19,103Z [Connection worker] internal.TestCordappImpl. - Task :workflows-kotlin:compileKotlin {}
[INFO ] 2020-09-22T07:28:19,103Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-kotlin:kotlinCompilerClasspath {}
[INFO ] 2020-09-22T07:28:19,103Z [Connection worker] internal.TestCordappImpl. - Task :workflows-kotlin:compileKotlin {}
[INFO ] 2020-09-22T07:28:19,119Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows-kotlin:kotlinCompilerPluginClasspath {}
[INFO ] 2020-09-22T07:28:19,120Z [Connection worker] internal.TestCordappImpl. - Task :workflows-kotlin:compileKotlin {}
[INFO ] 2020-09-22T07:28:19,120Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-kotlin:kotlinCompilerPluginClasspath {}
[INFO ] 2020-09-22T07:28:19,120Z [Connection worker] internal.TestCordappImpl. - Task :workflows-kotlin:compileKotlin {}
[INFO ] 2020-09-22T07:28:19,120Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows-kotlin:compileClasspath {}
[INFO ] 2020-09-22T07:28:19,222Z [Connection worker] internal.TestCordappImpl. - Task :workflows-kotlin:compileKotlin {}
[INFO ] 2020-09-22T07:28:19,222Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-kotlin:compileClasspath {}
[INFO ] 2020-09-22T07:28:19,238Z [Connection worker] internal.TestCordappImpl. - Task :workflows-kotlin:compileKotlin {}
[INFO ] 2020-09-22T07:28:19,238Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-kotlin:compileClasspath {}
[INFO ] 2020-09-22T07:28:19,238Z [Connection worker] internal.TestCordappImpl. - Task :workflows-kotlin:compileKotlin {}
[INFO ] 2020-09-22T07:28:19,282Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-kotlin:kotlinCompilerPluginClasspath {}
[INFO ] 2020-09-22T07:28:19,282Z [Connection worker] internal.TestCordappImpl. - Task :workflows-kotlin:compileKotlin {}
[INFO ] 2020-09-22T07:28:19,282Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-09-22T07:28:19,282Z [Connection worker] internal.TestCordappImpl. - Task :workflows-kotlin:compileJava {}
[INFO ] 2020-09-22T07:28:19,282Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-09-22T07:28:19,282Z [Connection worker] internal.TestCordappImpl. - Task :workflows-kotlin:processResources {}
[INFO ] 2020-09-22T07:28:19,308Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-09-22T07:28:19,308Z [Connection worker] internal.TestCordappImpl. - Task :workflows-kotlin:classes {}
[INFO ] 2020-09-22T07:28:19,308Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-09-22T07:28:19,308Z [Connection worker] internal.TestCordappImpl. - Task :workflows-kotlin:configureCordappFatJar {}
[INFO ] 2020-09-22T07:28:19,308Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows-kotlin:runtime {}
[INFO ] 2020-09-22T07:28:19,344Z [Connection worker] internal.TestCordappImpl. - Task :workflows-kotlin:configureCordappFatJar {}
[INFO ] 2020-09-22T07:28:19,344Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-kotlin:runtime {}
[INFO ] 2020-09-22T07:28:19,344Z [Connection worker] internal.TestCordappImpl. - Task :workflows-kotlin:configureCordappFatJar {}
[INFO ] 2020-09-22T07:28:19,358Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-kotlin:runtime {}
[INFO ] 2020-09-22T07:28:19,358Z [Connection worker] internal.TestCordappImpl. - Task :workflows-kotlin:configureCordappFatJar {}
[INFO ] 2020-09-22T07:28:19,358Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-kotlin:runtime {}
[INFO ] 2020-09-22T07:28:19,358Z [Connection worker] internal.TestCordappImpl. - Task :workflows-kotlin:configureCordappFatJar {}
[INFO ] 2020-09-22T07:28:19,358Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-kotlin:runtime {}
[INFO ] 2020-09-22T07:28:19,358Z [Connection worker] internal.TestCordappImpl. - Task :workflows-kotlin:configureCordappFatJar {}
[INFO ] 2020-09-22T07:28:19,358Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-kotlin:runtime {}
[INFO ] 2020-09-22T07:28:19,377Z [Connection worker] internal.TestCordappImpl. - Task :workflows-kotlin:configureCordappFatJar {}
[INFO ] 2020-09-22T07:28:19,377Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-kotlin:runtime {}
[INFO ] 2020-09-22T07:28:19,377Z [Connection worker] internal.TestCordappImpl. - Task :workflows-kotlin:configureCordappFatJar {}
[INFO ] 2020-09-22T07:28:19,378Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-kotlin:runtime {}
[INFO ] 2020-09-22T07:28:19,378Z [Connection worker] internal.TestCordappImpl. - Task :workflows-kotlin:configureCordappFatJar {}
[INFO ] 2020-09-22T07:28:19,378Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-09-22T07:28:19,378Z [Connection worker] internal.TestCordappImpl. - Task :workflows-kotlin:inspectClassesForKotlinIC {}
[INFO ] 2020-09-22T07:28:19,390Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-09-22T07:28:19,390Z [Connection worker] internal.TestCordappImpl. - Task :workflows-kotlin:jar {}
[INFO ] 2020-09-22T07:28:19,419Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-09-22T07:28:19,419Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-09-22T07:28:19,419Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows-kotlin' {}
[INFO ] 2020-09-22T07:28:19,419Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-09-22T07:28:19,423Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-09-22T07:28:19,434Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in C:\tests\cordapp-example\.gradle {}
[INFO ] 2020-09-22T07:28:19,435Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-09-22T07:28:19,486Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2020-09-22T07:28:22,574Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build\mock-network\20200922-072815.222\nodes\0\cordapps] {}
[INFO ] 2020-09-22T07:28:22,580Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/C:/tests/cordapp-example/workflows-kotlin/build/mock-network/20200922-072815.222/nodes/0/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/C:/tests/cordapp-example/workflows-kotlin/build/mock-network/20200922-072815.222/nodes/0/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-09-22T07:28:22,590Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/tests/cordapp-example/workflows-kotlin/build/mock-network/20200922-072815.222/nodes/0/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-09-22T07:28:22,834Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/tests/cordapp-example/workflows-kotlin/build/mock-network/20200922-072815.222/nodes/0/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2020-09-22T07:28:24,063Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2020-09-22T07:28:24,297Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-09-22T07:28:24,383Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-09-22T07:28:24,517Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-09-22T07:28:24,681Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-09-22T07:28:15.202Z
      epoch=1
  } {}
[INFO ] 2020-09-22T07:28:30,871Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:30,875Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build\mock-network\20200922-072815.222\nodes\0\network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:30,875Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:30,963Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:31,171Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:31,179Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:33,941Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:34,630Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:34,632Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:34,638Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:34,638Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:34,733Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:34,800Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-09-22T07:28:34,823Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-09-22T07:28:34,823Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-09-22T07:28:35,132Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-09-22T07:28:35,146Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-09-22T07:28:35,146Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1600759715146) {}
[INFO ] 2020-09-22T07:28:35,150Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-09-22T07:28:35,357Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1600759715146) {}
[INFO ] 2020-09-22T07:28:35,443Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-09-22T07:28:35,465Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2020-09-22T07:28:35,467Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2020-09-22T07:28:35,499Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1600759715146) {}
[INFO ] 2020-09-22T07:28:35,543Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-09-22T07:28:35,566Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=F135D116988720CF97DE75F55EDABE7C4F1D3ADC95FE763F3B43E90086C8C754 uploader=app filename=CorDapp Example {}
[INFO ] 2020-09-22T07:28:35,579Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-09-22T07:28:35,583Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-09-22T07:28:36,571Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1600759715146) {}
[INFO ] 2020-09-22T07:28:36,610Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1600759715146) {}
[INFO ] 2020-09-22T07:28:36,613Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-09-22T07:28:36,614Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1600759715146) {}
[INFO ] 2020-09-22T07:28:36,614Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-09-22T07:28:36,629Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build\mock-network\20200922-072815.222\nodes\1\cordapps] {}
[INFO ] 2020-09-22T07:28:36,629Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/C:/tests/cordapp-example/workflows-kotlin/build/mock-network/20200922-072815.222/nodes/1/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/C:/tests/cordapp-example/workflows-kotlin/build/mock-network/20200922-072815.222/nodes/1/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-09-22T07:28:36,630Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/tests/cordapp-example/workflows-kotlin/build/mock-network/20200922-072815.222/nodes/1/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-09-22T07:28:36,838Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/tests/cordapp-example/workflows-kotlin/build/mock-network/20200922-072815.222/nodes/1/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2020-09-22T07:28:36,867Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2020-09-22T07:28:36,870Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-09-22T07:28:36,875Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-09-22T07:28:36,939Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-09-22T07:28:36,943Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-09-22T07:28:15.202Z
      epoch=1
  } {}
[INFO ] 2020-09-22T07:28:37,784Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:37,788Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build\mock-network\20200922-072815.222\nodes\1\network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:37,788Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:37,828Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:37,832Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:37,832Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:38,046Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:38,062Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:38,065Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:38,071Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:38,071Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:38,167Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:38,181Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-09-22T07:28:38,188Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-09-22T07:28:38,188Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-09-22T07:28:38,363Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-09-22T07:28:38,364Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-09-22T07:28:38,409Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-09-22T07:28:38,409Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1600759718409) {}
[INFO ] 2020-09-22T07:28:38,411Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-09-22T07:28:38,418Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1600759718409) {}
[INFO ] 2020-09-22T07:28:38,425Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-09-22T07:28:38,426Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2020-09-22T07:28:38,426Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2020-09-22T07:28:38,441Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1600759718409) {}
[INFO ] 2020-09-22T07:28:38,448Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-09-22T07:28:38,472Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=F135D116988720CF97DE75F55EDABE7C4F1D3ADC95FE763F3B43E90086C8C754 uploader=app filename=CorDapp Example {}
[INFO ] 2020-09-22T07:28:38,487Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1600759718409) {}
[INFO ] 2020-09-22T07:28:38,493Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1600759715146) {}
[INFO ] 2020-09-22T07:28:38,496Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-09-22T07:28:38,508Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1600759718409) {}
[INFO ] 2020-09-22T07:28:38,509Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-09-22T07:28:38,520Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1600759718409) {}
[INFO ] 2020-09-22T07:28:38,520Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-09-22T07:28:38,521Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1600759718409) {}
[INFO ] 2020-09-22T07:28:38,521Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-09-22T07:28:38,531Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build\mock-network\20200922-072815.222\nodes\2\cordapps] {}
[INFO ] 2020-09-22T07:28:38,531Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/C:/tests/cordapp-example/workflows-kotlin/build/mock-network/20200922-072815.222/nodes/2/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/C:/tests/cordapp-example/workflows-kotlin/build/mock-network/20200922-072815.222/nodes/2/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-09-22T07:28:38,532Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/tests/cordapp-example/workflows-kotlin/build/mock-network/20200922-072815.222/nodes/2/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-09-22T07:28:38,692Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/tests/cordapp-example/workflows-kotlin/build/mock-network/20200922-072815.222/nodes/2/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2020-09-22T07:28:38,721Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2020-09-22T07:28:38,722Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-09-22T07:28:38,724Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-09-22T07:28:38,780Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-09-22T07:28:38,783Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-09-22T07:28:15.202Z
      epoch=1
  } {}
[INFO ] 2020-09-22T07:28:39,461Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:39,463Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build\mock-network\20200922-072815.222\nodes\2\network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:39,463Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:39,502Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:39,506Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:39,506Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:39,708Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:39,717Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:39,719Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:39,722Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:39,722Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:39,801Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:39,808Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-09-22T07:28:39,811Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-09-22T07:28:39,811Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-09-22T07:28:40,002Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-09-22T07:28:40,003Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-09-22T07:28:40,040Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-09-22T07:28:40,040Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1600759720040) {}
[INFO ] 2020-09-22T07:28:40,043Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-09-22T07:28:40,052Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1600759720040) {}
[INFO ] 2020-09-22T07:28:40,062Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-09-22T07:28:40,062Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2020-09-22T07:28:40,062Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2020-09-22T07:28:40,077Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1600759720040) {}
[INFO ] 2020-09-22T07:28:40,083Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-09-22T07:28:40,107Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=F135D116988720CF97DE75F55EDABE7C4F1D3ADC95FE763F3B43E90086C8C754 uploader=app filename=CorDapp Example {}
[INFO ] 2020-09-22T07:28:40,117Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1600759720040) {}
[INFO ] 2020-09-22T07:28:40,121Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1600759715146) {}
[INFO ] 2020-09-22T07:28:40,123Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-09-22T07:28:40,134Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1600759720040) {}
[INFO ] 2020-09-22T07:28:40,135Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-09-22T07:28:40,151Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1600759718409) {}
[INFO ] 2020-09-22T07:28:40,153Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-09-22T07:28:40,165Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1600759720040) {}
[INFO ] 2020-09-22T07:28:40,167Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-09-22T07:28:40,178Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1600759720040) {}
[INFO ] 2020-09-22T07:28:40,178Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-09-22T07:28:40,179Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1600759720040) {}
[INFO ] 2020-09-22T07:28:40,179Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2020-09-22T07:28:40,181Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.example.flow.ExampleFlow$Initiator, currently using: class com.example.flow.ExampleFlow$Acceptor {}
[INFO ] 2020-09-22T07:28:40,181Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2020-09-22T07:28:40,186Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.example.flow.ExampleFlow$Initiator, currently using: class com.example.flow.ExampleFlow$Acceptor {}
[INFO ] 2020-09-22T07:28:40,186Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2020-09-22T07:28:40,529Z [Mock network] transactions.TransactionBuilder. - Signature constraints not available on network requiring a minimum platform version of 4. Current is: 1. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=0b36a477-e475-44c6-9d1d-4458cefad38f, invocation_id=18636be1-45ba-4ec3-a7a9-01ba63cd961e, invocation_timestamp=2020-09-22T07:28:40.282Z, origin=Only For Testing, session_id=18636be1-45ba-4ec3-a7a9-01ba63cd961e, session_timestamp=2020-09-22T07:28:40.282Z, thread-id=641}
[WARN ] 2020-09-22T07:28:40,529Z [Mock network] transactions.TransactionBuilder. - Reverting back to using hash constraints for contract com.example.contract.IOUContract {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=0b36a477-e475-44c6-9d1d-4458cefad38f, invocation_id=18636be1-45ba-4ec3-a7a9-01ba63cd961e, invocation_timestamp=2020-09-22T07:28:40.282Z, origin=Only For Testing, session_id=18636be1-45ba-4ec3-a7a9-01ba63cd961e, session_timestamp=2020-09-22T07:28:40.282Z, thread-id=641}
[INFO ] 2020-09-22T07:28:40,985Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000002, flow-id=90c55d49-1703-44bf-83ff-dc17d54f6c09, invocation_id=b4b03649-ec7b-4749-832a-4392727581c2, invocation_timestamp=2020-09-22T07:28:40.894Z, origin=O=Mock Company 1, L=London, C=GB, session_id=b4b03649-ec7b-4749-832a-4392727581c2, session_timestamp=2020-09-22T07:28:40.894Z, thread-id=641, tx_id=3C733741E6090C2F22FB193A27461DC1D26D4B9729E9730F6136FE9D86BC22EB}
[INFO ] 2020-09-22T07:28:41,052Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000002, flow-id=90c55d49-1703-44bf-83ff-dc17d54f6c09, invocation_id=b4b03649-ec7b-4749-832a-4392727581c2, invocation_timestamp=2020-09-22T07:28:40.894Z, origin=O=Mock Company 1, L=London, C=GB, session_id=b4b03649-ec7b-4749-832a-4392727581c2, session_timestamp=2020-09-22T07:28:40.894Z, thread-id=641, tx_id=3C733741E6090C2F22FB193A27461DC1D26D4B9729E9730F6136FE9D86BC22EB}
[INFO ] 2020-09-22T07:28:41,161Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=0b36a477-e475-44c6-9d1d-4458cefad38f, invocation_id=18636be1-45ba-4ec3-a7a9-01ba63cd961e, invocation_timestamp=2020-09-22T07:28:40.282Z, origin=Only For Testing, session_id=18636be1-45ba-4ec3-a7a9-01ba63cd961e, session_timestamp=2020-09-22T07:28:40.282Z, thread-id=641, tx_id=3C733741E6090C2F22FB193A27461DC1D26D4B9729E9730F6136FE9D86BC22EB}
[INFO ] 2020-09-22T07:28:41,161Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=0b36a477-e475-44c6-9d1d-4458cefad38f, invocation_id=18636be1-45ba-4ec3-a7a9-01ba63cd961e, invocation_timestamp=2020-09-22T07:28:40.282Z, origin=Only For Testing, session_id=18636be1-45ba-4ec3-a7a9-01ba63cd961e, session_timestamp=2020-09-22T07:28:40.282Z, thread-id=641, tx_id=3C733741E6090C2F22FB193A27461DC1D26D4B9729E9730F6136FE9D86BC22EB}
[INFO ] 2020-09-22T07:28:41,289Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=0b36a477-e475-44c6-9d1d-4458cefad38f, invocation_id=18636be1-45ba-4ec3-a7a9-01ba63cd961e, invocation_timestamp=2020-09-22T07:28:40.282Z, origin=Only For Testing, session_id=18636be1-45ba-4ec3-a7a9-01ba63cd961e, session_timestamp=2020-09-22T07:28:40.282Z, thread-id=641, tx_id=3C733741E6090C2F22FB193A27461DC1D26D4B9729E9730F6136FE9D86BC22EB}
[INFO ] 2020-09-22T07:28:41,326Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000002, flow-id=90c55d49-1703-44bf-83ff-dc17d54f6c09, invocation_id=b4b03649-ec7b-4749-832a-4392727581c2, invocation_timestamp=2020-09-22T07:28:40.894Z, origin=O=Mock Company 1, L=London, C=GB, session_id=b4b03649-ec7b-4749-832a-4392727581c2, session_timestamp=2020-09-22T07:28:40.894Z, thread-id=641, tx_id=3C733741E6090C2F22FB193A27461DC1D26D4B9729E9730F6136FE9D86BC22EB}
[INFO ] 2020-09-22T07:28:41,339Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000002, flow-id=90c55d49-1703-44bf-83ff-dc17d54f6c09, invocation_id=b4b03649-ec7b-4749-832a-4392727581c2, invocation_timestamp=2020-09-22T07:28:40.894Z, origin=O=Mock Company 1, L=London, C=GB, session_id=b4b03649-ec7b-4749-832a-4392727581c2, session_timestamp=2020-09-22T07:28:40.894Z, thread-id=641, tx_id=3C733741E6090C2F22FB193A27461DC1D26D4B9729E9730F6136FE9D86BC22EB}
[INFO ] 2020-09-22T07:28:41,349Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000002, flow-id=90c55d49-1703-44bf-83ff-dc17d54f6c09, invocation_id=b4b03649-ec7b-4749-832a-4392727581c2, invocation_timestamp=2020-09-22T07:28:40.894Z, origin=O=Mock Company 1, L=London, C=GB, session_id=b4b03649-ec7b-4749-832a-4392727581c2, session_timestamp=2020-09-22T07:28:40.894Z, thread-id=641, tx_id=3C733741E6090C2F22FB193A27461DC1D26D4B9729E9730F6136FE9D86BC22EB}
[INFO ] 2020-09-22T07:28:41,363Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000002, flow-id=90c55d49-1703-44bf-83ff-dc17d54f6c09, invocation_id=b4b03649-ec7b-4749-832a-4392727581c2, invocation_timestamp=2020-09-22T07:28:40.894Z, origin=O=Mock Company 1, L=London, C=GB, session_id=b4b03649-ec7b-4749-832a-4392727581c2, session_timestamp=2020-09-22T07:28:40.894Z, thread-id=641, tx_id=3C733741E6090C2F22FB193A27461DC1D26D4B9729E9730F6136FE9D86BC22EB}
[INFO ] 2020-09-22T07:28:41,401Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=0b36a477-e475-44c6-9d1d-4458cefad38f, invocation_id=18636be1-45ba-4ec3-a7a9-01ba63cd961e, invocation_timestamp=2020-09-22T07:28:40.282Z, origin=Only For Testing, session_id=18636be1-45ba-4ec3-a7a9-01ba63cd961e, session_timestamp=2020-09-22T07:28:40.282Z, thread-id=641, tx_id=3C733741E6090C2F22FB193A27461DC1D26D4B9729E9730F6136FE9D86BC22EB}
[INFO ] 2020-09-22T07:28:41,401Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=0b36a477-e475-44c6-9d1d-4458cefad38f, invocation_id=18636be1-45ba-4ec3-a7a9-01ba63cd961e, invocation_timestamp=2020-09-22T07:28:40.282Z, origin=Only For Testing, session_id=18636be1-45ba-4ec3-a7a9-01ba63cd961e, session_timestamp=2020-09-22T07:28:40.282Z, thread-id=641, tx_id=3C733741E6090C2F22FB193A27461DC1D26D4B9729E9730F6136FE9D86BC22EB}
[INFO ] 2020-09-22T07:28:41,418Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-1) {}
[INFO ] 2020-09-22T07:28:41,438Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-2) {}
[INFO ] 2020-09-22T07:28:41,444Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-3) {}
[INFO ] 2020-09-22T07:28:41,565Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build\mock-network\20200922-072841.468\nodes\0\cordapps] {}
[INFO ] 2020-09-22T07:28:41,566Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/C:/tests/cordapp-example/workflows-kotlin/build/mock-network/20200922-072841.468/nodes/0/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/C:/tests/cordapp-example/workflows-kotlin/build/mock-network/20200922-072841.468/nodes/0/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-09-22T07:28:41,566Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/tests/cordapp-example/workflows-kotlin/build/mock-network/20200922-072841.468/nodes/0/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-09-22T07:28:41,777Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/tests/cordapp-example/workflows-kotlin/build/mock-network/20200922-072841.468/nodes/0/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2020-09-22T07:28:41,810Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2020-09-22T07:28:41,813Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-09-22T07:28:41,815Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-09-22T07:28:41,839Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-09-22T07:28:41,852Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-09-22T07:28:41.468Z
      epoch=1
  } {}
[INFO ] 2020-09-22T07:28:42,616Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:42,618Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build\mock-network\20200922-072841.468\nodes\0\network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:42,618Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:42,688Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:42,691Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:42,692Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:42,823Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:42,831Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:42,833Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:42,837Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:42,837Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:42,913Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:42,949Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-09-22T07:28:42,961Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-09-22T07:28:42,961Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-09-22T07:28:43,123Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-09-22T07:28:43,130Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-09-22T07:28:43,131Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1600759723131) {}
[INFO ] 2020-09-22T07:28:43,135Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-09-22T07:28:43,152Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1600759723131) {}
[INFO ] 2020-09-22T07:28:43,162Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-09-22T07:28:43,163Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2020-09-22T07:28:43,163Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2020-09-22T07:28:43,181Z [MockNode-4-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1600759723131) {}
[INFO ] 2020-09-22T07:28:43,187Z [MockNode-4-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-09-22T07:28:43,214Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=F135D116988720CF97DE75F55EDABE7C4F1D3ADC95FE763F3B43E90086C8C754 uploader=app filename=CorDapp Example {}
[INFO ] 2020-09-22T07:28:43,218Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-09-22T07:28:43,218Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-09-22T07:28:43,226Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1600759723131) {}
[INFO ] 2020-09-22T07:28:43,230Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1600759723131) {}
[INFO ] 2020-09-22T07:28:43,230Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-09-22T07:28:43,230Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1600759723131) {}
[INFO ] 2020-09-22T07:28:43,230Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-09-22T07:28:43,241Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build\mock-network\20200922-072841.468\nodes\1\cordapps] {}
[INFO ] 2020-09-22T07:28:43,241Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/C:/tests/cordapp-example/workflows-kotlin/build/mock-network/20200922-072841.468/nodes/1/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/C:/tests/cordapp-example/workflows-kotlin/build/mock-network/20200922-072841.468/nodes/1/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-09-22T07:28:43,241Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/tests/cordapp-example/workflows-kotlin/build/mock-network/20200922-072841.468/nodes/1/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-09-22T07:28:43,416Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/tests/cordapp-example/workflows-kotlin/build/mock-network/20200922-072841.468/nodes/1/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2020-09-22T07:28:43,453Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2020-09-22T07:28:43,454Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-09-22T07:28:43,456Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-09-22T07:28:43,519Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-09-22T07:28:43,522Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-09-22T07:28:41.468Z
      epoch=1
  } {}
[INFO ] 2020-09-22T07:28:44,073Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:44,078Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build\mock-network\20200922-072841.468\nodes\1\network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:44,078Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:44,120Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:44,124Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:44,125Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:44,277Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:44,289Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:44,290Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:44,293Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:44,293Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:44,375Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:44,382Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-09-22T07:28:44,385Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-09-22T07:28:44,385Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-09-22T07:28:44,526Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-09-22T07:28:44,527Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-09-22T07:28:44,562Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-09-22T07:28:44,562Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1600759724562) {}
[INFO ] 2020-09-22T07:28:44,564Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-09-22T07:28:44,570Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1600759724562) {}
[INFO ] 2020-09-22T07:28:44,579Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-09-22T07:28:44,579Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2020-09-22T07:28:44,579Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2020-09-22T07:28:44,592Z [MockNode-5-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1600759724562) {}
[INFO ] 2020-09-22T07:28:44,596Z [MockNode-5-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-09-22T07:28:44,618Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=F135D116988720CF97DE75F55EDABE7C4F1D3ADC95FE763F3B43E90086C8C754 uploader=app filename=CorDapp Example {}
[INFO ] 2020-09-22T07:28:44,629Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1600759724562) {}
[INFO ] 2020-09-22T07:28:44,632Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1600759723131) {}
[INFO ] 2020-09-22T07:28:44,634Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-09-22T07:28:44,642Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1600759724562) {}
[INFO ] 2020-09-22T07:28:44,644Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-09-22T07:28:44,653Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1600759724562) {}
[INFO ] 2020-09-22T07:28:44,653Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-09-22T07:28:44,654Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1600759724562) {}
[INFO ] 2020-09-22T07:28:44,654Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-09-22T07:28:44,665Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build\mock-network\20200922-072841.468\nodes\2\cordapps] {}
[INFO ] 2020-09-22T07:28:44,667Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/C:/tests/cordapp-example/workflows-kotlin/build/mock-network/20200922-072841.468/nodes/2/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/C:/tests/cordapp-example/workflows-kotlin/build/mock-network/20200922-072841.468/nodes/2/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-09-22T07:28:44,667Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/tests/cordapp-example/workflows-kotlin/build/mock-network/20200922-072841.468/nodes/2/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-09-22T07:28:44,849Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/tests/cordapp-example/workflows-kotlin/build/mock-network/20200922-072841.468/nodes/2/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2020-09-22T07:28:44,874Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2020-09-22T07:28:44,877Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-09-22T07:28:44,879Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-09-22T07:28:44,927Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-09-22T07:28:44,931Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-09-22T07:28:41.468Z
      epoch=1
  } {}
[INFO ] 2020-09-22T07:28:45,445Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:45,447Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build\mock-network\20200922-072841.468\nodes\2\network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:45,447Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:45,479Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:45,484Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:45,484Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:45,616Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:45,624Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:45,625Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:45,628Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:45,628Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:45,713Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:45,722Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-09-22T07:28:45,724Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-09-22T07:28:45,724Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-09-22T07:28:45,844Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-09-22T07:28:45,846Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-09-22T07:28:45,894Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-09-22T07:28:45,894Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1600759725894) {}
[INFO ] 2020-09-22T07:28:45,896Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-09-22T07:28:45,903Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1600759725894) {}
[INFO ] 2020-09-22T07:28:45,911Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-09-22T07:28:45,911Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2020-09-22T07:28:45,911Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2020-09-22T07:28:45,933Z [MockNode-6-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1600759725894) {}
[INFO ] 2020-09-22T07:28:45,941Z [MockNode-6-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-09-22T07:28:45,961Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=F135D116988720CF97DE75F55EDABE7C4F1D3ADC95FE763F3B43E90086C8C754 uploader=app filename=CorDapp Example {}
[INFO ] 2020-09-22T07:28:45,973Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1600759725894) {}
[INFO ] 2020-09-22T07:28:45,976Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1600759723131) {}
[INFO ] 2020-09-22T07:28:45,978Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-09-22T07:28:45,990Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1600759725894) {}
[INFO ] 2020-09-22T07:28:45,992Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-09-22T07:28:46,001Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1600759724562) {}
[INFO ] 2020-09-22T07:28:46,002Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-09-22T07:28:46,011Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1600759725894) {}
[INFO ] 2020-09-22T07:28:46,013Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-09-22T07:28:46,023Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1600759725894) {}
[INFO ] 2020-09-22T07:28:46,023Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-09-22T07:28:46,024Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1600759725894) {}
[INFO ] 2020-09-22T07:28:46,024Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2020-09-22T07:28:46,024Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.example.flow.ExampleFlow$Initiator, currently using: class com.example.flow.ExampleFlow$Acceptor {}
[INFO ] 2020-09-22T07:28:46,024Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2020-09-22T07:28:46,025Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.example.flow.ExampleFlow$Initiator, currently using: class com.example.flow.ExampleFlow$Acceptor {}
[INFO ] 2020-09-22T07:28:46,025Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[ERROR] 2020-09-22T07:28:46,078Z [Mock network] internal.Verifier. - Error validating transaction 6DFCEC4E99193901CDEC3607AB8CBA0297947CECBCFF319FE380FD0462887B6A. - Failed requirement: The IOU's value must be non-negative. [errorCode=1j5bwha, moreInformationAt=https://errors.corda.net/OS/4.5/1j5bwha] {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=4bf10445-7457-4440-beef-711ca95f61fb, invocation_id=ff36c79d-7a0c-41b0-8509-94c6c4d19c5d, invocation_timestamp=2020-09-22T07:28:46.026Z, origin=Only For Testing, session_id=ff36c79d-7a0c-41b0-8509-94c6c4d19c5d, session_timestamp=2020-09-22T07:28:46.026Z, thread-id=836}
java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at com.example.contract.IOUContract.verify(IOUContract.kt:70) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:421) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:373) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:206) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext(TransactionBuilder.kt:186) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:146) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:140) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toLedgerTransaction(TransactionBuilder.kt:622) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:630) ~[corda-core-4.5.jar:?]
	at com.example.flow.ExampleFlow$Initiator.call(ExampleFlow.kt:88) ~[main/:?]
	at com.example.flow.ExampleFlow$Initiator.call(ExampleFlow.kt:31) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:299) ~[corda-node-4.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:66) ~[corda-node-4.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_261]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_261]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.5.jar:?]
[ERROR] 2020-09-22T07:28:46,081Z [Mock network] internal.Verifier. - Error validating transaction 6DFCEC4E99193901CDEC3607AB8CBA0297947CECBCFF319FE380FD0462887B6A. - Failed requirement: The IOU's value must be non-negative. [errorCode=1j5bwha, moreInformationAt=https://errors.corda.net/OS/4.5/1j5bwha] {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=4bf10445-7457-4440-beef-711ca95f61fb, invocation_id=ff36c79d-7a0c-41b0-8509-94c6c4d19c5d, invocation_timestamp=2020-09-22T07:28:46.026Z, origin=Only For Testing, session_id=ff36c79d-7a0c-41b0-8509-94c6c4d19c5d, session_timestamp=2020-09-22T07:28:46.026Z, thread-id=836}
java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at com.example.contract.IOUContract.verify(IOUContract.kt:70) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:421) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:373) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:630) ~[corda-core-4.5.jar:?]
	at com.example.flow.ExampleFlow$Initiator.call(ExampleFlow.kt:88) ~[main/:?]
	at com.example.flow.ExampleFlow$Initiator.call(ExampleFlow.kt:31) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:299) ~[corda-node-4.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:66) ~[corda-node-4.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_261]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_261]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.5.jar:?]
[INFO ] 2020-09-22T07:28:46,081Z [Mock network] corda.flow. - Flow raised an error: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: com.example.contract.IOUContract, transaction: 6DFCEC4E99193901CDEC3607AB8CBA0297947CECBCFF319FE380FD0462887B6A. Sending it to flow hospital to be triaged. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=4bf10445-7457-4440-beef-711ca95f61fb, invocation_id=ff36c79d-7a0c-41b0-8509-94c6c4d19c5d, invocation_timestamp=2020-09-22T07:28:46.026Z, origin=Only For Testing, session_id=ff36c79d-7a0c-41b0-8509-94c6c4d19c5d, session_timestamp=2020-09-22T07:28:46.026Z, thread-id=836}
[INFO ] 2020-09-22T07:28:46,089Z [Mock network] statemachine.StaffedFlowHospital. - Flow [4bf10445-7457-4440-beef-711ca95f61fb] admitted to hospital in state StateMachineState(checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=ff36c79d-7a0c-41b0-8509-94c6c4d19c5d, timestamp: 2020-09-22T07:28:46.026Z, entityType: Invocation, sessionId=ff36c79d-7a0c-41b0-8509-94c6c4d19c5d, timestamp: 2020-09-22T07:28:46.026Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, subFlowStack=[Initiating(flowClass=class com.example.flow.ExampleFlow$Initiator, classToInitiateWith=class com.example.flow.ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=7, corDappName=cordapp-example-workflows-0.1, corDappHash=5DC3F2B7BA9C5FA0FD9F87AEEF5712498659888964E2286937A9B46641E7474F), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=AAA1D0E2496CE128F2FC5928AC9EBB07295071A1F375025E836DBB866BFD921D), errorState=Clean, numberOfSuspends=0), flowLogic=com.example.flow.ExampleFlow$Initiator@7a050ca4, pendingDeduplicationHandlers=[], isFlowResumed=true, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, senderUUID=c6967fae-5742-4987-adc7-8f028b1a3ce4) {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=4bf10445-7457-4440-beef-711ca95f61fb, invocation_id=ff36c79d-7a0c-41b0-8509-94c6c4d19c5d, invocation_timestamp=2020-09-22T07:28:46.026Z, origin=Only For Testing, session_id=ff36c79d-7a0c-41b0-8509-94c6c4d19c5d, session_timestamp=2020-09-22T07:28:46.026Z, thread-id=836}
[INFO ] 2020-09-22T07:28:46,094Z [Mock network] statemachine.StaffedFlowHospital. - Error 1 of 1: {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=4bf10445-7457-4440-beef-711ca95f61fb, invocation_id=ff36c79d-7a0c-41b0-8509-94c6c4d19c5d, invocation_timestamp=2020-09-22T07:28:46.026Z, origin=Only For Testing, session_id=ff36c79d-7a0c-41b0-8509-94c6c4d19c5d, session_timestamp=2020-09-22T07:28:46.026Z, thread-id=836}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: com.example.contract.IOUContract, transaction: 6DFCEC4E99193901CDEC3607AB8CBA0297947CECBCFF319FE380FD0462887B6A
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:423) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:373) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:630) ~[corda-core-4.5.jar:?]
	at com.example.flow.ExampleFlow$Initiator.call(ExampleFlow.kt:88) ~[main/:?]
	at com.example.flow.ExampleFlow$Initiator.call(ExampleFlow.kt:31) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:299) ~[corda-node-4.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:66) ~[corda-node-4.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_261]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_261]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.5.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at com.example.contract.IOUContract.verify(IOUContract.kt:70) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:421) ~[corda-core-4.5.jar:?]
	... 19 more
[INFO ] 2020-09-22T07:28:46,100Z [Mock network] statemachine.StaffedFlowHospital. - Flow error allowed to propagate {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=4bf10445-7457-4440-beef-711ca95f61fb, invocation_id=ff36c79d-7a0c-41b0-8509-94c6c4d19c5d, invocation_timestamp=2020-09-22T07:28:46.026Z, origin=Only For Testing, session_id=ff36c79d-7a0c-41b0-8509-94c6c4d19c5d, session_timestamp=2020-09-22T07:28:46.026Z, thread-id=836}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: com.example.contract.IOUContract, transaction: 6DFCEC4E99193901CDEC3607AB8CBA0297947CECBCFF319FE380FD0462887B6A
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:423) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:373) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:630) ~[corda-core-4.5.jar:?]
	at com.example.flow.ExampleFlow$Initiator.call(ExampleFlow.kt:88) ~[main/:?]
	at com.example.flow.ExampleFlow$Initiator.call(ExampleFlow.kt:31) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:299) ~[corda-node-4.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:66) ~[corda-node-4.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_261]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_261]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.5.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at com.example.contract.IOUContract.verify(IOUContract.kt:70) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:421) ~[corda-core-4.5.jar:?]
	... 19 more
[WARN ] 2020-09-22T07:28:46,126Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [4bf10445-7457-4440-beef-711ca95f61fb] errored, dumping all transitions:

 --- Transition of flow [4bf10445-7457-4440-beef-711ca95f61fb] ---
  Timestamp: 2020-09-22T07:28:46.034Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[4bf10445-7457-4440-beef-711ca95f61fb], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=ff36c79d-7a0c-41b0-8509-94c6c4d19c5d, timestamp: 2020-09-22T07:28:46.026Z, entityType: Invocation, sessionId=ff36c79d-7a0c-41b0-8509-94c6c4d19c5d, timestamp: 2020-09-22T07:28:46.026Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, subFlowStack=[Initiating(flowClass=class com.example.flow.ExampleFlow$Initiator, classToInitiateWith=class com.example.flow.ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=7, corDappName=cordapp-example-workflows-0.1, corDappHash=5DC3F2B7BA9C5FA0FD9F87AEEF5712498659888964E2286937A9B46641E7474F), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=AAA1D0E2496CE128F2FC5928AC9EBB07295071A1F375025E836DBB866BFD921D), errorState=Clean, numberOfSuspends=0), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@72d70a38])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@72d70a38])
    SignalFlowHasStarted(flowId=[4bf10445-7457-4440-beef-711ca95f61fb])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@72d70a38]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [4bf10445-7457-4440-beef-711ca95f61fb] ---
  Timestamp: 2020-09-22T07:28:46.102Z
  Event: Error(exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: com.example.contract.IOUContract, transaction: 6DFCEC4E99193901CDEC3607AB8CBA0297947CECBCFF319FE380FD0462887B6A)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-09-22T07:28:46.028Z
    2020-09-22T07:28:46.087Z
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=8677735180067972309, exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: com.example.contract.IOUContract, transaction: 6DFCEC4E99193901CDEC3607AB8CBA0297947CECBCFF319FE380FD0462887B6A)], propagatedIndex=0, propagating=false)
isFlowResumed: 
    true
    false


 --- Transition of flow [4bf10445-7457-4440-beef-711ca95f61fb] ---
  Timestamp: 2020-09-22T07:28:46.109Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [4bf10445-7457-4440-beef-711ca95f61fb] ---
  Timestamp: 2020-09-22T07:28:46.111Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-09-22T07:28:46.087Z
    2020-09-22T07:28:46.111Z
checkpoint.errorState.propagating: 
    false
    true
 {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=4bf10445-7457-4440-beef-711ca95f61fb, invocation_id=ff36c79d-7a0c-41b0-8509-94c6c4d19c5d, invocation_timestamp=2020-09-22T07:28:46.026Z, origin=Only For Testing, session_id=ff36c79d-7a0c-41b0-8509-94c6c4d19c5d, session_timestamp=2020-09-22T07:28:46.026Z, thread-id=836}
[WARN ] 2020-09-22T07:28:46,126Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [4bf10445-7457-4440-beef-711ca95f61fb] error - Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: com.example.contract.IOUContract, transaction: 6DFCEC4E99193901CDEC3607AB8CBA0297947CECBCFF319FE380FD0462887B6A - Failed requirement: The IOU's value must be non-negative. [errorCode=6k3i8b, moreInformationAt=https://errors.corda.net/OS/4.5/6k3i8b] {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=4bf10445-7457-4440-beef-711ca95f61fb, invocation_id=ff36c79d-7a0c-41b0-8509-94c6c4d19c5d, invocation_timestamp=2020-09-22T07:28:46.026Z, origin=Only For Testing, session_id=ff36c79d-7a0c-41b0-8509-94c6c4d19c5d, session_timestamp=2020-09-22T07:28:46.026Z, thread-id=836}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: com.example.contract.IOUContract, transaction: 6DFCEC4E99193901CDEC3607AB8CBA0297947CECBCFF319FE380FD0462887B6A
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:423) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:373) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:630) ~[corda-core-4.5.jar:?]
	at com.example.flow.ExampleFlow$Initiator.call(ExampleFlow.kt:88) ~[main/:?]
	at com.example.flow.ExampleFlow$Initiator.call(ExampleFlow.kt:31) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:299) ~[corda-node-4.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:66) ~[corda-node-4.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_261]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_261]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.5.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at com.example.contract.IOUContract.verify(IOUContract.kt:70) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:421) ~[corda-core-4.5.jar:?]
	... 19 more
[WARN ] 2020-09-22T07:28:46,128Z [Mock network] statemachine.ActionExecutorImpl. - Propagating error - Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: com.example.contract.IOUContract, transaction: 6DFCEC4E99193901CDEC3607AB8CBA0297947CECBCFF319FE380FD0462887B6A - Failed requirement: The IOU's value must be non-negative. [errorCode=6k3i8b, moreInformationAt=https://errors.corda.net/OS/4.5/6k3i8b] {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=4bf10445-7457-4440-beef-711ca95f61fb, invocation_id=ff36c79d-7a0c-41b0-8509-94c6c4d19c5d, invocation_timestamp=2020-09-22T07:28:46.026Z, origin=Only For Testing, session_id=ff36c79d-7a0c-41b0-8509-94c6c4d19c5d, session_timestamp=2020-09-22T07:28:46.026Z, thread-id=836}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: com.example.contract.IOUContract, transaction: 6DFCEC4E99193901CDEC3607AB8CBA0297947CECBCFF319FE380FD0462887B6A
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:423) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:373) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:630) ~[corda-core-4.5.jar:?]
	at com.example.flow.ExampleFlow$Initiator.call(ExampleFlow.kt:88) ~[main/:?]
	at com.example.flow.ExampleFlow$Initiator.call(ExampleFlow.kt:31) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:299) ~[corda-node-4.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:66) ~[corda-node-4.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_261]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_261]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.5.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at com.example.contract.IOUContract.verify(IOUContract.kt:70) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:421) ~[corda-core-4.5.jar:?]
	... 19 more
[WARN ] 2020-09-22T07:28:46,156Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [4bf10445-7457-4440-beef-711ca95f61fb] errored, dumping all transitions:

 --- Transition of flow [4bf10445-7457-4440-beef-711ca95f61fb] ---
  Timestamp: 2020-09-22T07:28:46.034Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[4bf10445-7457-4440-beef-711ca95f61fb], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=ff36c79d-7a0c-41b0-8509-94c6c4d19c5d, timestamp: 2020-09-22T07:28:46.026Z, entityType: Invocation, sessionId=ff36c79d-7a0c-41b0-8509-94c6c4d19c5d, timestamp: 2020-09-22T07:28:46.026Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, subFlowStack=[Initiating(flowClass=class com.example.flow.ExampleFlow$Initiator, classToInitiateWith=class com.example.flow.ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=7, corDappName=cordapp-example-workflows-0.1, corDappHash=5DC3F2B7BA9C5FA0FD9F87AEEF5712498659888964E2286937A9B46641E7474F), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=AAA1D0E2496CE128F2FC5928AC9EBB07295071A1F375025E836DBB866BFD921D), errorState=Clean, numberOfSuspends=0), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@72d70a38])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@72d70a38])
    SignalFlowHasStarted(flowId=[4bf10445-7457-4440-beef-711ca95f61fb])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@72d70a38]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [4bf10445-7457-4440-beef-711ca95f61fb] ---
  Timestamp: 2020-09-22T07:28:46.102Z
  Event: Error(exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: com.example.contract.IOUContract, transaction: 6DFCEC4E99193901CDEC3607AB8CBA0297947CECBCFF319FE380FD0462887B6A)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-09-22T07:28:46.028Z
    2020-09-22T07:28:46.087Z
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=8677735180067972309, exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: com.example.contract.IOUContract, transaction: 6DFCEC4E99193901CDEC3607AB8CBA0297947CECBCFF319FE380FD0462887B6A)], propagatedIndex=0, propagating=false)
isFlowResumed: 
    true
    false


 --- Transition of flow [4bf10445-7457-4440-beef-711ca95f61fb] ---
  Timestamp: 2020-09-22T07:28:46.109Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [4bf10445-7457-4440-beef-711ca95f61fb] ---
  Timestamp: 2020-09-22T07:28:46.111Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-09-22T07:28:46.087Z
    2020-09-22T07:28:46.111Z
checkpoint.errorState.propagating: 
    false
    true


 --- Transition of flow [4bf10445-7457-4440-beef-711ca95f61fb] ---
  Timestamp: 2020-09-22T07:28:46.148Z
  Event: DoRemainingWork
  Actions: 
    PropagateErrors(errorMessages=[ErrorSessionMessage(flowException=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: com.example.contract.IOUContract, transaction: 6DFCEC4E99193901CDEC3607AB8CBA0297947CECBCFF319FE380FD0462887B6A, errorId=8677735180067972309)], sessions=[], senderUUID=c6967fae-5742-4987-adc7-8f028b1a3ce4)
    CreateTransaction
    RemoveCheckpoint(id=[4bf10445-7457-4440-beef-711ca95f61fb])
    PersistDeduplicationFacts(deduplicationHandlers=[])
    ReleaseSoftLocks(uuid=4bf10445-7457-4440-beef-711ca95f61fb)
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    RemoveSessionBindings(sessionIds=[])
    RemoveFlow(flowId=[4bf10445-7457-4440-beef-711ca95f61fb], removalReason=ErrorFinish(flowErrors=[FlowError(errorId=8677735180067972309, exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: com.example.contract.IOUContract, transaction: 6DFCEC4E99193901CDEC3607AB8CBA0297947CECBCFF319FE380FD0462887B6A)]), lastState=StateMachineState(checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=ff36c79d-7a0c-41b0-8509-94c6c4d19c5d, timestamp: 2020-09-22T07:28:46.026Z, entityType: Invocation, sessionId=ff36c79d-7a0c-41b0-8509-94c6c4d19c5d, timestamp: 2020-09-22T07:28:46.026Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, subFlowStack=[Initiating(flowClass=class com.example.flow.ExampleFlow$Initiator, classToInitiateWith=class com.example.flow.ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=7, corDappName=cordapp-example-workflows-0.1, corDappHash=5DC3F2B7BA9C5FA0FD9F87AEEF5712498659888964E2286937A9B46641E7474F), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=AAA1D0E2496CE128F2FC5928AC9EBB07295071A1F375025E836DBB866BFD921D), errorState=Errored(errors=[FlowError(errorId=8677735180067972309, exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: com.example.contract.IOUContract, transaction: 6DFCEC4E99193901CDEC3607AB8CBA0297947CECBCFF319FE380FD0462887B6A)], propagatedIndex=1, propagating=true), numberOfSuspends=0), flowLogic=com.example.flow.ExampleFlow$Initiator@7a050ca4, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=true, isKilled=false, senderUUID=c6967fae-5742-4987-adc7-8f028b1a3ce4))
  Continuation: Abort
  Diff between previous and next state:
isRemoved: 
    false
    true
checkpoint.timestamp: 
    2020-09-22T07:28:46.111Z
    2020-09-22T07:28:46.126Z
checkpoint.errorState.propagatedIndex: 
    0
    1
 {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=4bf10445-7457-4440-beef-711ca95f61fb, invocation_id=ff36c79d-7a0c-41b0-8509-94c6c4d19c5d, invocation_timestamp=2020-09-22T07:28:46.026Z, origin=Only For Testing, session_id=ff36c79d-7a0c-41b0-8509-94c6c4d19c5d, session_timestamp=2020-09-22T07:28:46.026Z, thread-id=836}
[WARN ] 2020-09-22T07:28:46,156Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [4bf10445-7457-4440-beef-711ca95f61fb] error - Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: com.example.contract.IOUContract, transaction: 6DFCEC4E99193901CDEC3607AB8CBA0297947CECBCFF319FE380FD0462887B6A - Failed requirement: The IOU's value must be non-negative. [errorCode=6k3i8b, moreInformationAt=https://errors.corda.net/OS/4.5/6k3i8b] {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=4bf10445-7457-4440-beef-711ca95f61fb, invocation_id=ff36c79d-7a0c-41b0-8509-94c6c4d19c5d, invocation_timestamp=2020-09-22T07:28:46.026Z, origin=Only For Testing, session_id=ff36c79d-7a0c-41b0-8509-94c6c4d19c5d, session_timestamp=2020-09-22T07:28:46.026Z, thread-id=836}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: com.example.contract.IOUContract, transaction: 6DFCEC4E99193901CDEC3607AB8CBA0297947CECBCFF319FE380FD0462887B6A
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:423) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:373) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:630) ~[corda-core-4.5.jar:?]
	at com.example.flow.ExampleFlow$Initiator.call(ExampleFlow.kt:88) ~[main/:?]
	at com.example.flow.ExampleFlow$Initiator.call(ExampleFlow.kt:31) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:299) ~[corda-node-4.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:66) ~[corda-node-4.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_261]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_261]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.5.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at com.example.contract.IOUContract.verify(IOUContract.kt:70) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:421) ~[corda-core-4.5.jar:?]
	... 19 more
[INFO ] 2020-09-22T07:28:46,167Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-4) {}
[INFO ] 2020-09-22T07:28:46,182Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-5) {}
[INFO ] 2020-09-22T07:28:46,197Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-6) {}
[INFO ] 2020-09-22T07:28:46,304Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build\mock-network\20200922-072846.204\nodes\0\cordapps] {}
[INFO ] 2020-09-22T07:28:46,304Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/C:/tests/cordapp-example/workflows-kotlin/build/mock-network/20200922-072846.204/nodes/0/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/C:/tests/cordapp-example/workflows-kotlin/build/mock-network/20200922-072846.204/nodes/0/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-09-22T07:28:46,305Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/tests/cordapp-example/workflows-kotlin/build/mock-network/20200922-072846.204/nodes/0/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-09-22T07:28:46,473Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/tests/cordapp-example/workflows-kotlin/build/mock-network/20200922-072846.204/nodes/0/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2020-09-22T07:28:46,501Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2020-09-22T07:28:46,502Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-09-22T07:28:46,504Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-09-22T07:28:46,520Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-09-22T07:28:46,532Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-09-22T07:28:46.204Z
      epoch=1
  } {}
[INFO ] 2020-09-22T07:28:47,101Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:47,103Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build\mock-network\20200922-072846.204\nodes\0\network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:47,103Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:47,122Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:47,127Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:47,127Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:47,250Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:47,259Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:47,261Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:47,265Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:47,265Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:47,344Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:47,374Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-09-22T07:28:47,388Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-09-22T07:28:47,388Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-09-22T07:28:47,525Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-09-22T07:28:47,532Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-09-22T07:28:47,532Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1600759727532) {}
[INFO ] 2020-09-22T07:28:47,537Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-09-22T07:28:47,552Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1600759727532) {}
[INFO ] 2020-09-22T07:28:47,560Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-09-22T07:28:47,561Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2020-09-22T07:28:47,561Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2020-09-22T07:28:47,575Z [MockNode-7-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1600759727532) {}
[INFO ] 2020-09-22T07:28:47,582Z [MockNode-7-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-09-22T07:28:47,609Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=F135D116988720CF97DE75F55EDABE7C4F1D3ADC95FE763F3B43E90086C8C754 uploader=app filename=CorDapp Example {}
[INFO ] 2020-09-22T07:28:47,611Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-09-22T07:28:47,612Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-09-22T07:28:47,618Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1600759727532) {}
[INFO ] 2020-09-22T07:28:47,620Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1600759727532) {}
[INFO ] 2020-09-22T07:28:47,621Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-09-22T07:28:47,621Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1600759727532) {}
[INFO ] 2020-09-22T07:28:47,621Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-09-22T07:28:47,633Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build\mock-network\20200922-072846.204\nodes\1\cordapps] {}
[INFO ] 2020-09-22T07:28:47,634Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/C:/tests/cordapp-example/workflows-kotlin/build/mock-network/20200922-072846.204/nodes/1/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/C:/tests/cordapp-example/workflows-kotlin/build/mock-network/20200922-072846.204/nodes/1/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-09-22T07:28:47,634Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/tests/cordapp-example/workflows-kotlin/build/mock-network/20200922-072846.204/nodes/1/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-09-22T07:28:47,832Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/tests/cordapp-example/workflows-kotlin/build/mock-network/20200922-072846.204/nodes/1/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2020-09-22T07:28:47,861Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2020-09-22T07:28:47,862Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-09-22T07:28:47,864Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-09-22T07:28:47,919Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-09-22T07:28:47,922Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-09-22T07:28:46.204Z
      epoch=1
  } {}
[INFO ] 2020-09-22T07:28:48,576Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:48,578Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build\mock-network\20200922-072846.204\nodes\1\network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:48,578Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:48,599Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:48,607Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:48,607Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:48,756Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:48,765Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:48,766Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:48,770Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:48,770Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:48,850Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:48,857Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-09-22T07:28:48,860Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-09-22T07:28:48,860Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-09-22T07:28:49,005Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-09-22T07:28:49,006Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-09-22T07:28:49,048Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-09-22T07:28:49,048Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1600759729048) {}
[INFO ] 2020-09-22T07:28:49,050Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-09-22T07:28:49,057Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1600759729048) {}
[INFO ] 2020-09-22T07:28:49,064Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-09-22T07:28:49,064Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2020-09-22T07:28:49,064Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2020-09-22T07:28:49,077Z [MockNode-8-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1600759729048) {}
[INFO ] 2020-09-22T07:28:49,083Z [MockNode-8-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-09-22T07:28:49,110Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=F135D116988720CF97DE75F55EDABE7C4F1D3ADC95FE763F3B43E90086C8C754 uploader=app filename=CorDapp Example {}
[INFO ] 2020-09-22T07:28:49,119Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1600759729048) {}
[INFO ] 2020-09-22T07:28:49,121Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1600759727532) {}
[INFO ] 2020-09-22T07:28:49,123Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-09-22T07:28:49,134Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1600759729048) {}
[INFO ] 2020-09-22T07:28:49,135Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-09-22T07:28:49,148Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1600759729048) {}
[INFO ] 2020-09-22T07:28:49,148Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-09-22T07:28:49,148Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1600759729048) {}
[INFO ] 2020-09-22T07:28:49,148Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-09-22T07:28:49,159Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build\mock-network\20200922-072846.204\nodes\2\cordapps] {}
[INFO ] 2020-09-22T07:28:49,160Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/C:/tests/cordapp-example/workflows-kotlin/build/mock-network/20200922-072846.204/nodes/2/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/C:/tests/cordapp-example/workflows-kotlin/build/mock-network/20200922-072846.204/nodes/2/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-09-22T07:28:49,160Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/tests/cordapp-example/workflows-kotlin/build/mock-network/20200922-072846.204/nodes/2/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-09-22T07:28:49,347Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/tests/cordapp-example/workflows-kotlin/build/mock-network/20200922-072846.204/nodes/2/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2020-09-22T07:28:49,373Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2020-09-22T07:28:49,374Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-09-22T07:28:49,376Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-09-22T07:28:49,431Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-09-22T07:28:49,434Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-09-22T07:28:46.204Z
      epoch=1
  } {}
[INFO ] 2020-09-22T07:28:49,979Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:49,980Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build\mock-network\20200922-072846.204\nodes\2\network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:49,980Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:50,016Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:50,019Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:50,019Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:50,160Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:50,168Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:50,169Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:50,172Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:50,172Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:50,262Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:50,266Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-09-22T07:28:50,269Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-09-22T07:28:50,269Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-09-22T07:28:50,397Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-09-22T07:28:50,400Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-09-22T07:28:50,437Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-09-22T07:28:50,437Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1600759730437) {}
[INFO ] 2020-09-22T07:28:50,439Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-09-22T07:28:50,446Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1600759730437) {}
[INFO ] 2020-09-22T07:28:50,454Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-09-22T07:28:50,454Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2020-09-22T07:28:50,454Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2020-09-22T07:28:50,465Z [MockNode-9-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1600759730437) {}
[INFO ] 2020-09-22T07:28:50,470Z [MockNode-9-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-09-22T07:28:50,490Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=F135D116988720CF97DE75F55EDABE7C4F1D3ADC95FE763F3B43E90086C8C754 uploader=app filename=CorDapp Example {}
[INFO ] 2020-09-22T07:28:50,499Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1600759730437) {}
[INFO ] 2020-09-22T07:28:50,502Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1600759727532) {}
[INFO ] 2020-09-22T07:28:50,506Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-09-22T07:28:50,515Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1600759730437) {}
[INFO ] 2020-09-22T07:28:50,516Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-09-22T07:28:50,526Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1600759729048) {}
[INFO ] 2020-09-22T07:28:50,527Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-09-22T07:28:50,535Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1600759730437) {}
[INFO ] 2020-09-22T07:28:50,537Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-09-22T07:28:50,545Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1600759730437) {}
[INFO ] 2020-09-22T07:28:50,545Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-09-22T07:28:50,545Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1600759730437) {}
[INFO ] 2020-09-22T07:28:50,546Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2020-09-22T07:28:50,546Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.example.flow.ExampleFlow$Initiator, currently using: class com.example.flow.ExampleFlow$Acceptor {}
[INFO ] 2020-09-22T07:28:50,546Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2020-09-22T07:28:50,546Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.example.flow.ExampleFlow$Initiator, currently using: class com.example.flow.ExampleFlow$Acceptor {}
[INFO ] 2020-09-22T07:28:50,546Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-09-22T07:28:50,692Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000005, flow-id=6640bbcc-5ed5-4b29-a2bd-19a23ad0545b, invocation_id=1087b908-4646-49bb-987e-0a6452179b47, invocation_timestamp=2020-09-22T07:28:50.675Z, origin=O=Mock Company 1, L=London, C=GB, session_id=1087b908-4646-49bb-987e-0a6452179b47, session_timestamp=2020-09-22T07:28:50.675Z, thread-id=1026, tx_id=D85DF5EDC55E9050627BEC30CB17F9F08B9DD908318B9843192D82FFAAB434A0}
[INFO ] 2020-09-22T07:28:50,705Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000005, flow-id=6640bbcc-5ed5-4b29-a2bd-19a23ad0545b, invocation_id=1087b908-4646-49bb-987e-0a6452179b47, invocation_timestamp=2020-09-22T07:28:50.675Z, origin=O=Mock Company 1, L=London, C=GB, session_id=1087b908-4646-49bb-987e-0a6452179b47, session_timestamp=2020-09-22T07:28:50.675Z, thread-id=1026, tx_id=D85DF5EDC55E9050627BEC30CB17F9F08B9DD908318B9843192D82FFAAB434A0}
[INFO ] 2020-09-22T07:28:50,775Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=e6f4d1fa-c56c-4cc7-b5a4-dad5c7969c96, invocation_id=e5fe6ea0-f7f3-4e84-b719-eb63166ccbe7, invocation_timestamp=2020-09-22T07:28:50.548Z, origin=Only For Testing, session_id=e5fe6ea0-f7f3-4e84-b719-eb63166ccbe7, session_timestamp=2020-09-22T07:28:50.548Z, thread-id=1026, tx_id=D85DF5EDC55E9050627BEC30CB17F9F08B9DD908318B9843192D82FFAAB434A0}
[INFO ] 2020-09-22T07:28:50,775Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=e6f4d1fa-c56c-4cc7-b5a4-dad5c7969c96, invocation_id=e5fe6ea0-f7f3-4e84-b719-eb63166ccbe7, invocation_timestamp=2020-09-22T07:28:50.548Z, origin=Only For Testing, session_id=e5fe6ea0-f7f3-4e84-b719-eb63166ccbe7, session_timestamp=2020-09-22T07:28:50.548Z, thread-id=1026, tx_id=D85DF5EDC55E9050627BEC30CB17F9F08B9DD908318B9843192D82FFAAB434A0}
[INFO ] 2020-09-22T07:28:50,794Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=e6f4d1fa-c56c-4cc7-b5a4-dad5c7969c96, invocation_id=e5fe6ea0-f7f3-4e84-b719-eb63166ccbe7, invocation_timestamp=2020-09-22T07:28:50.548Z, origin=Only For Testing, session_id=e5fe6ea0-f7f3-4e84-b719-eb63166ccbe7, session_timestamp=2020-09-22T07:28:50.548Z, thread-id=1026, tx_id=D85DF5EDC55E9050627BEC30CB17F9F08B9DD908318B9843192D82FFAAB434A0}
[INFO ] 2020-09-22T07:28:50,810Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000005, flow-id=6640bbcc-5ed5-4b29-a2bd-19a23ad0545b, invocation_id=1087b908-4646-49bb-987e-0a6452179b47, invocation_timestamp=2020-09-22T07:28:50.675Z, origin=O=Mock Company 1, L=London, C=GB, session_id=1087b908-4646-49bb-987e-0a6452179b47, session_timestamp=2020-09-22T07:28:50.675Z, thread-id=1026, tx_id=D85DF5EDC55E9050627BEC30CB17F9F08B9DD908318B9843192D82FFAAB434A0}
[INFO ] 2020-09-22T07:28:50,821Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000005, flow-id=6640bbcc-5ed5-4b29-a2bd-19a23ad0545b, invocation_id=1087b908-4646-49bb-987e-0a6452179b47, invocation_timestamp=2020-09-22T07:28:50.675Z, origin=O=Mock Company 1, L=London, C=GB, session_id=1087b908-4646-49bb-987e-0a6452179b47, session_timestamp=2020-09-22T07:28:50.675Z, thread-id=1026, tx_id=D85DF5EDC55E9050627BEC30CB17F9F08B9DD908318B9843192D82FFAAB434A0}
[INFO ] 2020-09-22T07:28:50,826Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000005, flow-id=6640bbcc-5ed5-4b29-a2bd-19a23ad0545b, invocation_id=1087b908-4646-49bb-987e-0a6452179b47, invocation_timestamp=2020-09-22T07:28:50.675Z, origin=O=Mock Company 1, L=London, C=GB, session_id=1087b908-4646-49bb-987e-0a6452179b47, session_timestamp=2020-09-22T07:28:50.675Z, thread-id=1026, tx_id=D85DF5EDC55E9050627BEC30CB17F9F08B9DD908318B9843192D82FFAAB434A0}
[INFO ] 2020-09-22T07:28:50,836Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000005, flow-id=6640bbcc-5ed5-4b29-a2bd-19a23ad0545b, invocation_id=1087b908-4646-49bb-987e-0a6452179b47, invocation_timestamp=2020-09-22T07:28:50.675Z, origin=O=Mock Company 1, L=London, C=GB, session_id=1087b908-4646-49bb-987e-0a6452179b47, session_timestamp=2020-09-22T07:28:50.675Z, thread-id=1026, tx_id=D85DF5EDC55E9050627BEC30CB17F9F08B9DD908318B9843192D82FFAAB434A0}
[INFO ] 2020-09-22T07:28:50,846Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=e6f4d1fa-c56c-4cc7-b5a4-dad5c7969c96, invocation_id=e5fe6ea0-f7f3-4e84-b719-eb63166ccbe7, invocation_timestamp=2020-09-22T07:28:50.548Z, origin=Only For Testing, session_id=e5fe6ea0-f7f3-4e84-b719-eb63166ccbe7, session_timestamp=2020-09-22T07:28:50.548Z, thread-id=1026, tx_id=D85DF5EDC55E9050627BEC30CB17F9F08B9DD908318B9843192D82FFAAB434A0}
[INFO ] 2020-09-22T07:28:50,846Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=e6f4d1fa-c56c-4cc7-b5a4-dad5c7969c96, invocation_id=e5fe6ea0-f7f3-4e84-b719-eb63166ccbe7, invocation_timestamp=2020-09-22T07:28:50.548Z, origin=Only For Testing, session_id=e5fe6ea0-f7f3-4e84-b719-eb63166ccbe7, session_timestamp=2020-09-22T07:28:50.548Z, thread-id=1026, tx_id=D85DF5EDC55E9050627BEC30CB17F9F08B9DD908318B9843192D82FFAAB434A0}
[INFO ] 2020-09-22T07:28:50,858Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-7) {}
[INFO ] 2020-09-22T07:28:50,862Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-8) {}
[INFO ] 2020-09-22T07:28:50,872Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-9) {}
[INFO ] 2020-09-22T07:28:50,965Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build\mock-network\20200922-072850.877\nodes\0\cordapps] {}
[INFO ] 2020-09-22T07:28:50,966Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/C:/tests/cordapp-example/workflows-kotlin/build/mock-network/20200922-072850.877/nodes/0/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/C:/tests/cordapp-example/workflows-kotlin/build/mock-network/20200922-072850.877/nodes/0/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-09-22T07:28:50,966Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/tests/cordapp-example/workflows-kotlin/build/mock-network/20200922-072850.877/nodes/0/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-09-22T07:28:51,134Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/tests/cordapp-example/workflows-kotlin/build/mock-network/20200922-072850.877/nodes/0/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2020-09-22T07:28:51,159Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2020-09-22T07:28:51,160Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-09-22T07:28:51,162Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-09-22T07:28:51,180Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-09-22T07:28:51,189Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-09-22T07:28:50.877Z
      epoch=1
  } {}
[INFO ] 2020-09-22T07:28:51,728Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:51,730Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build\mock-network\20200922-072850.877\nodes\0\network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:51,730Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:51,774Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:51,781Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:51,781Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:51,924Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:51,933Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:51,935Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:51,941Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:51,941Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:52,026Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:52,054Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-09-22T07:28:52,068Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-09-22T07:28:52,068Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-09-22T07:28:52,208Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-09-22T07:28:52,220Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-09-22T07:28:52,220Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1600759732220) {}
[INFO ] 2020-09-22T07:28:52,223Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-09-22T07:28:52,237Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1600759732220) {}
[INFO ] 2020-09-22T07:28:52,247Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-09-22T07:28:52,248Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2020-09-22T07:28:52,248Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2020-09-22T07:28:52,263Z [MockNode-10-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1600759732220) {}
[INFO ] 2020-09-22T07:28:52,268Z [MockNode-10-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-09-22T07:28:52,294Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=F135D116988720CF97DE75F55EDABE7C4F1D3ADC95FE763F3B43E90086C8C754 uploader=app filename=CorDapp Example {}
[INFO ] 2020-09-22T07:28:52,297Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-09-22T07:28:52,297Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-09-22T07:28:52,303Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1600759732220) {}
[INFO ] 2020-09-22T07:28:52,306Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1600759732220) {}
[INFO ] 2020-09-22T07:28:52,306Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-09-22T07:28:52,307Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1600759732220) {}
[INFO ] 2020-09-22T07:28:52,307Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-09-22T07:28:52,319Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build\mock-network\20200922-072850.877\nodes\1\cordapps] {}
[INFO ] 2020-09-22T07:28:52,321Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/C:/tests/cordapp-example/workflows-kotlin/build/mock-network/20200922-072850.877/nodes/1/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/C:/tests/cordapp-example/workflows-kotlin/build/mock-network/20200922-072850.877/nodes/1/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-09-22T07:28:52,321Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/tests/cordapp-example/workflows-kotlin/build/mock-network/20200922-072850.877/nodes/1/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-09-22T07:28:52,539Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/tests/cordapp-example/workflows-kotlin/build/mock-network/20200922-072850.877/nodes/1/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2020-09-22T07:28:52,559Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2020-09-22T07:28:52,559Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-09-22T07:28:52,561Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-09-22T07:28:52,606Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-09-22T07:28:52,608Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-09-22T07:28:50.877Z
      epoch=1
  } {}
[INFO ] 2020-09-22T07:28:53,015Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:53,016Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build\mock-network\20200922-072850.877\nodes\1\network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:53,016Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:53,031Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:53,035Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:53,035Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:53,174Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:53,181Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:53,183Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:53,185Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:53,185Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:53,249Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:53,255Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-09-22T07:28:53,258Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-09-22T07:28:53,258Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-09-22T07:28:53,374Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-09-22T07:28:53,375Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-09-22T07:28:53,406Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-09-22T07:28:53,406Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1600759733406) {}
[INFO ] 2020-09-22T07:28:53,407Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-09-22T07:28:53,414Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1600759733406) {}
[INFO ] 2020-09-22T07:28:53,419Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-09-22T07:28:53,420Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2020-09-22T07:28:53,420Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2020-09-22T07:28:53,430Z [MockNode-11-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1600759733406) {}
[INFO ] 2020-09-22T07:28:53,435Z [MockNode-11-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-09-22T07:28:53,456Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=F135D116988720CF97DE75F55EDABE7C4F1D3ADC95FE763F3B43E90086C8C754 uploader=app filename=CorDapp Example {}
[INFO ] 2020-09-22T07:28:53,471Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1600759733406) {}
[INFO ] 2020-09-22T07:28:53,473Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1600759732220) {}
[INFO ] 2020-09-22T07:28:53,474Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-09-22T07:28:53,484Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1600759733406) {}
[INFO ] 2020-09-22T07:28:53,485Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-09-22T07:28:53,494Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1600759733406) {}
[INFO ] 2020-09-22T07:28:53,494Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-09-22T07:28:53,494Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1600759733406) {}
[INFO ] 2020-09-22T07:28:53,494Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-09-22T07:28:53,505Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build\mock-network\20200922-072850.877\nodes\2\cordapps] {}
[INFO ] 2020-09-22T07:28:53,506Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/C:/tests/cordapp-example/workflows-kotlin/build/mock-network/20200922-072850.877/nodes/2/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/C:/tests/cordapp-example/workflows-kotlin/build/mock-network/20200922-072850.877/nodes/2/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-09-22T07:28:53,507Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/tests/cordapp-example/workflows-kotlin/build/mock-network/20200922-072850.877/nodes/2/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-09-22T07:28:53,663Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/tests/cordapp-example/workflows-kotlin/build/mock-network/20200922-072850.877/nodes/2/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2020-09-22T07:28:53,683Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2020-09-22T07:28:53,684Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-09-22T07:28:53,686Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-09-22T07:28:53,730Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-09-22T07:28:53,733Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-09-22T07:28:50.877Z
      epoch=1
  } {}
[INFO ] 2020-09-22T07:28:54,202Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:54,205Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build\mock-network\20200922-072850.877\nodes\2\network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:54,205Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:54,222Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:54,227Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:54,227Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:54,361Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:54,371Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:54,373Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:54,378Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:54,378Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:54,440Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:54,446Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-09-22T07:28:54,449Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-09-22T07:28:54,450Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-09-22T07:28:54,584Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-09-22T07:28:54,585Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-09-22T07:28:54,629Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-09-22T07:28:54,629Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1600759734629) {}
[INFO ] 2020-09-22T07:28:54,631Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-09-22T07:28:54,652Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1600759734629) {}
[INFO ] 2020-09-22T07:28:54,663Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-09-22T07:28:54,663Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2020-09-22T07:28:54,663Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2020-09-22T07:28:54,677Z [MockNode-12-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1600759734629) {}
[INFO ] 2020-09-22T07:28:54,681Z [MockNode-12-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-09-22T07:28:54,708Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=F135D116988720CF97DE75F55EDABE7C4F1D3ADC95FE763F3B43E90086C8C754 uploader=app filename=CorDapp Example {}
[INFO ] 2020-09-22T07:28:54,716Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1600759734629) {}
[INFO ] 2020-09-22T07:28:54,720Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1600759732220) {}
[INFO ] 2020-09-22T07:28:54,721Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-09-22T07:28:54,730Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1600759734629) {}
[INFO ] 2020-09-22T07:28:54,731Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-09-22T07:28:54,741Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1600759733406) {}
[INFO ] 2020-09-22T07:28:54,742Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-09-22T07:28:54,751Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1600759734629) {}
[INFO ] 2020-09-22T07:28:54,752Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-09-22T07:28:54,762Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1600759734629) {}
[INFO ] 2020-09-22T07:28:54,762Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-09-22T07:28:54,762Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1600759734629) {}
[INFO ] 2020-09-22T07:28:54,762Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2020-09-22T07:28:54,763Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.example.flow.ExampleFlow$Initiator, currently using: class com.example.flow.ExampleFlow$Acceptor {}
[INFO ] 2020-09-22T07:28:54,763Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2020-09-22T07:28:54,764Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.example.flow.ExampleFlow$Initiator, currently using: class com.example.flow.ExampleFlow$Acceptor {}
[INFO ] 2020-09-22T07:28:54,764Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-09-22T07:28:54,872Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000007, flow-id=06fcfa48-e01b-49bc-bfe4-204fc184e83a, invocation_id=2680f774-99a8-49a9-9568-70889c34e76f, invocation_timestamp=2020-09-22T07:28:54.854Z, origin=O=Mock Company 1, L=London, C=GB, session_id=2680f774-99a8-49a9-9568-70889c34e76f, session_timestamp=2020-09-22T07:28:54.854Z, thread-id=1216, tx_id=0D02FD0BE785BD34A3FA9C006B1E8746765F77BD3B20311539ABE3FF3178FC53}
[INFO ] 2020-09-22T07:28:54,883Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000007, flow-id=06fcfa48-e01b-49bc-bfe4-204fc184e83a, invocation_id=2680f774-99a8-49a9-9568-70889c34e76f, invocation_timestamp=2020-09-22T07:28:54.854Z, origin=O=Mock Company 1, L=London, C=GB, session_id=2680f774-99a8-49a9-9568-70889c34e76f, session_timestamp=2020-09-22T07:28:54.854Z, thread-id=1216, tx_id=0D02FD0BE785BD34A3FA9C006B1E8746765F77BD3B20311539ABE3FF3178FC53}
[INFO ] 2020-09-22T07:28:54,944Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=4d67cfbe-1113-45ae-9905-fe7b7cfd7fe6, invocation_id=a0509f07-6641-4186-ba8a-108de39f9f93, invocation_timestamp=2020-09-22T07:28:54.766Z, origin=Only For Testing, session_id=a0509f07-6641-4186-ba8a-108de39f9f93, session_timestamp=2020-09-22T07:28:54.766Z, thread-id=1216, tx_id=0D02FD0BE785BD34A3FA9C006B1E8746765F77BD3B20311539ABE3FF3178FC53}
[INFO ] 2020-09-22T07:28:54,944Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=4d67cfbe-1113-45ae-9905-fe7b7cfd7fe6, invocation_id=a0509f07-6641-4186-ba8a-108de39f9f93, invocation_timestamp=2020-09-22T07:28:54.766Z, origin=Only For Testing, session_id=a0509f07-6641-4186-ba8a-108de39f9f93, session_timestamp=2020-09-22T07:28:54.766Z, thread-id=1216, tx_id=0D02FD0BE785BD34A3FA9C006B1E8746765F77BD3B20311539ABE3FF3178FC53}
[INFO ] 2020-09-22T07:28:54,966Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=4d67cfbe-1113-45ae-9905-fe7b7cfd7fe6, invocation_id=a0509f07-6641-4186-ba8a-108de39f9f93, invocation_timestamp=2020-09-22T07:28:54.766Z, origin=Only For Testing, session_id=a0509f07-6641-4186-ba8a-108de39f9f93, session_timestamp=2020-09-22T07:28:54.766Z, thread-id=1216, tx_id=0D02FD0BE785BD34A3FA9C006B1E8746765F77BD3B20311539ABE3FF3178FC53}
[INFO ] 2020-09-22T07:28:54,982Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000007, flow-id=06fcfa48-e01b-49bc-bfe4-204fc184e83a, invocation_id=2680f774-99a8-49a9-9568-70889c34e76f, invocation_timestamp=2020-09-22T07:28:54.854Z, origin=O=Mock Company 1, L=London, C=GB, session_id=2680f774-99a8-49a9-9568-70889c34e76f, session_timestamp=2020-09-22T07:28:54.854Z, thread-id=1216, tx_id=0D02FD0BE785BD34A3FA9C006B1E8746765F77BD3B20311539ABE3FF3178FC53}
[INFO ] 2020-09-22T07:28:55,005Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000007, flow-id=06fcfa48-e01b-49bc-bfe4-204fc184e83a, invocation_id=2680f774-99a8-49a9-9568-70889c34e76f, invocation_timestamp=2020-09-22T07:28:54.854Z, origin=O=Mock Company 1, L=London, C=GB, session_id=2680f774-99a8-49a9-9568-70889c34e76f, session_timestamp=2020-09-22T07:28:54.854Z, thread-id=1216, tx_id=0D02FD0BE785BD34A3FA9C006B1E8746765F77BD3B20311539ABE3FF3178FC53}
[INFO ] 2020-09-22T07:28:55,010Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000007, flow-id=06fcfa48-e01b-49bc-bfe4-204fc184e83a, invocation_id=2680f774-99a8-49a9-9568-70889c34e76f, invocation_timestamp=2020-09-22T07:28:54.854Z, origin=O=Mock Company 1, L=London, C=GB, session_id=2680f774-99a8-49a9-9568-70889c34e76f, session_timestamp=2020-09-22T07:28:54.854Z, thread-id=1216, tx_id=0D02FD0BE785BD34A3FA9C006B1E8746765F77BD3B20311539ABE3FF3178FC53}
[INFO ] 2020-09-22T07:28:55,021Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000007, flow-id=06fcfa48-e01b-49bc-bfe4-204fc184e83a, invocation_id=2680f774-99a8-49a9-9568-70889c34e76f, invocation_timestamp=2020-09-22T07:28:54.854Z, origin=O=Mock Company 1, L=London, C=GB, session_id=2680f774-99a8-49a9-9568-70889c34e76f, session_timestamp=2020-09-22T07:28:54.854Z, thread-id=1216, tx_id=0D02FD0BE785BD34A3FA9C006B1E8746765F77BD3B20311539ABE3FF3178FC53}
[INFO ] 2020-09-22T07:28:55,034Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=4d67cfbe-1113-45ae-9905-fe7b7cfd7fe6, invocation_id=a0509f07-6641-4186-ba8a-108de39f9f93, invocation_timestamp=2020-09-22T07:28:54.766Z, origin=Only For Testing, session_id=a0509f07-6641-4186-ba8a-108de39f9f93, session_timestamp=2020-09-22T07:28:54.766Z, thread-id=1216, tx_id=0D02FD0BE785BD34A3FA9C006B1E8746765F77BD3B20311539ABE3FF3178FC53}
[INFO ] 2020-09-22T07:28:55,034Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=4d67cfbe-1113-45ae-9905-fe7b7cfd7fe6, invocation_id=a0509f07-6641-4186-ba8a-108de39f9f93, invocation_timestamp=2020-09-22T07:28:54.766Z, origin=Only For Testing, session_id=a0509f07-6641-4186-ba8a-108de39f9f93, session_timestamp=2020-09-22T07:28:54.766Z, thread-id=1216, tx_id=0D02FD0BE785BD34A3FA9C006B1E8746765F77BD3B20311539ABE3FF3178FC53}
[INFO ] 2020-09-22T07:28:55,055Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-10) {}
[INFO ] 2020-09-22T07:28:55,058Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-11) {}
[INFO ] 2020-09-22T07:28:55,061Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-12) {}
[INFO ] 2020-09-22T07:28:55,151Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build\mock-network\20200922-072855.065\nodes\0\cordapps] {}
[INFO ] 2020-09-22T07:28:55,151Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/C:/tests/cordapp-example/workflows-kotlin/build/mock-network/20200922-072855.065/nodes/0/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/C:/tests/cordapp-example/workflows-kotlin/build/mock-network/20200922-072855.065/nodes/0/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-09-22T07:28:55,151Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/tests/cordapp-example/workflows-kotlin/build/mock-network/20200922-072855.065/nodes/0/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-09-22T07:28:55,373Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/tests/cordapp-example/workflows-kotlin/build/mock-network/20200922-072855.065/nodes/0/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2020-09-22T07:28:55,410Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2020-09-22T07:28:55,411Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-09-22T07:28:55,413Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-09-22T07:28:55,435Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-09-22T07:28:55,449Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-09-22T07:28:55.065Z
      epoch=1
  } {}
[INFO ] 2020-09-22T07:28:55,962Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:55,964Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build\mock-network\20200922-072855.065\nodes\0\network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:55,964Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:56,006Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:56,010Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:56,010Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:56,120Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:56,128Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:56,130Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:56,133Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:56,133Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:56,215Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:56,251Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-09-22T07:28:56,262Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-09-22T07:28:56,262Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-09-22T07:28:56,416Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-09-22T07:28:56,426Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-09-22T07:28:56,426Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1600759736426) {}
[INFO ] 2020-09-22T07:28:56,428Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-09-22T07:28:56,441Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1600759736426) {}
[INFO ] 2020-09-22T07:28:56,452Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-09-22T07:28:56,453Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2020-09-22T07:28:56,453Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2020-09-22T07:28:56,466Z [MockNode-13-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1600759736426) {}
[INFO ] 2020-09-22T07:28:56,470Z [MockNode-13-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-09-22T07:28:56,497Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=F135D116988720CF97DE75F55EDABE7C4F1D3ADC95FE763F3B43E90086C8C754 uploader=app filename=CorDapp Example {}
[INFO ] 2020-09-22T07:28:56,500Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-09-22T07:28:56,500Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-09-22T07:28:56,505Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1600759736426) {}
[INFO ] 2020-09-22T07:28:56,507Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1600759736426) {}
[INFO ] 2020-09-22T07:28:56,507Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-09-22T07:28:56,508Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1600759736426) {}
[INFO ] 2020-09-22T07:28:56,508Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-09-22T07:28:56,519Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build\mock-network\20200922-072855.065\nodes\1\cordapps] {}
[INFO ] 2020-09-22T07:28:56,519Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/C:/tests/cordapp-example/workflows-kotlin/build/mock-network/20200922-072855.065/nodes/1/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/C:/tests/cordapp-example/workflows-kotlin/build/mock-network/20200922-072855.065/nodes/1/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-09-22T07:28:56,519Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/tests/cordapp-example/workflows-kotlin/build/mock-network/20200922-072855.065/nodes/1/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-09-22T07:28:56,734Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/tests/cordapp-example/workflows-kotlin/build/mock-network/20200922-072855.065/nodes/1/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2020-09-22T07:28:56,772Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2020-09-22T07:28:56,774Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-09-22T07:28:56,777Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-09-22T07:28:56,833Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-09-22T07:28:56,837Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-09-22T07:28:55.065Z
      epoch=1
  } {}
[INFO ] 2020-09-22T07:28:57,379Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:57,381Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build\mock-network\20200922-072855.065\nodes\1\network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:57,381Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:57,402Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:57,405Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:57,405Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:57,526Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:57,534Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:57,536Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:57,555Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:57,555Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:57,630Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:57,637Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-09-22T07:28:57,639Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-09-22T07:28:57,639Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-09-22T07:28:57,750Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-09-22T07:28:57,751Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-09-22T07:28:57,794Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-09-22T07:28:57,794Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1600759737794) {}
[INFO ] 2020-09-22T07:28:57,796Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-09-22T07:28:57,802Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1600759737794) {}
[INFO ] 2020-09-22T07:28:57,808Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-09-22T07:28:57,809Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2020-09-22T07:28:57,809Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2020-09-22T07:28:57,822Z [MockNode-14-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1600759737794) {}
[INFO ] 2020-09-22T07:28:57,829Z [MockNode-14-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-09-22T07:28:57,856Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=F135D116988720CF97DE75F55EDABE7C4F1D3ADC95FE763F3B43E90086C8C754 uploader=app filename=CorDapp Example {}
[INFO ] 2020-09-22T07:28:57,863Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1600759737794) {}
[INFO ] 2020-09-22T07:28:57,865Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1600759736426) {}
[INFO ] 2020-09-22T07:28:57,866Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-09-22T07:28:57,876Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1600759737794) {}
[INFO ] 2020-09-22T07:28:57,879Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-09-22T07:28:57,887Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1600759737794) {}
[INFO ] 2020-09-22T07:28:57,887Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-09-22T07:28:57,888Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1600759737794) {}
[INFO ] 2020-09-22T07:28:57,888Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-09-22T07:28:57,901Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build\mock-network\20200922-072855.065\nodes\2\cordapps] {}
[INFO ] 2020-09-22T07:28:57,902Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/C:/tests/cordapp-example/workflows-kotlin/build/mock-network/20200922-072855.065/nodes/2/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/C:/tests/cordapp-example/workflows-kotlin/build/mock-network/20200922-072855.065/nodes/2/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-09-22T07:28:57,902Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/tests/cordapp-example/workflows-kotlin/build/mock-network/20200922-072855.065/nodes/2/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-09-22T07:28:58,082Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/tests/cordapp-example/workflows-kotlin/build/mock-network/20200922-072855.065/nodes/2/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2020-09-22T07:28:58,103Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2020-09-22T07:28:58,103Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-09-22T07:28:58,105Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-09-22T07:28:58,155Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-09-22T07:28:58,157Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-09-22T07:28:55.065Z
      epoch=1
  } {}
[INFO ] 2020-09-22T07:28:58,570Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:58,571Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build\mock-network\20200922-072855.065\nodes\2\network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:58,571Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:58,585Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:58,588Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:58,588Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:58,741Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:58,749Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:58,751Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:58,754Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:58,754Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:58,813Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:28:58,818Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-09-22T07:28:58,823Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-09-22T07:28:58,823Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-09-22T07:28:58,949Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-09-22T07:28:58,950Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-09-22T07:28:58,996Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-09-22T07:28:58,996Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1600759738996) {}
[INFO ] 2020-09-22T07:28:58,998Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-09-22T07:28:59,002Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1600759738996) {}
[INFO ] 2020-09-22T07:28:59,009Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-09-22T07:28:59,009Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2020-09-22T07:28:59,009Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2020-09-22T07:28:59,037Z [MockNode-15-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1600759738996) {}
[INFO ] 2020-09-22T07:28:59,042Z [MockNode-15-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-09-22T07:28:59,066Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=F135D116988720CF97DE75F55EDABE7C4F1D3ADC95FE763F3B43E90086C8C754 uploader=app filename=CorDapp Example {}
[INFO ] 2020-09-22T07:28:59,076Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1600759738996) {}
[INFO ] 2020-09-22T07:28:59,079Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1600759736426) {}
[INFO ] 2020-09-22T07:28:59,080Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-09-22T07:28:59,092Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1600759738996) {}
[INFO ] 2020-09-22T07:28:59,093Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-09-22T07:28:59,101Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1600759737794) {}
[INFO ] 2020-09-22T07:28:59,102Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-09-22T07:28:59,111Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1600759738996) {}
[INFO ] 2020-09-22T07:28:59,112Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-09-22T07:28:59,119Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1600759738996) {}
[INFO ] 2020-09-22T07:28:59,119Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-09-22T07:28:59,120Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1600759738996) {}
[INFO ] 2020-09-22T07:28:59,120Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2020-09-22T07:28:59,120Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.example.flow.ExampleFlow$Initiator, currently using: class com.example.flow.ExampleFlow$Acceptor {}
[INFO ] 2020-09-22T07:28:59,120Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2020-09-22T07:28:59,120Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.example.flow.ExampleFlow$Initiator, currently using: class com.example.flow.ExampleFlow$Acceptor {}
[INFO ] 2020-09-22T07:28:59,121Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-09-22T07:28:59,231Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000009, flow-id=319db9c0-011f-462b-9895-045cd9f04632, invocation_id=b29b6bd6-f5d9-40e0-ab06-c44d9af2ee42, invocation_timestamp=2020-09-22T07:28:59.216Z, origin=O=Mock Company 1, L=London, C=GB, session_id=b29b6bd6-f5d9-40e0-ab06-c44d9af2ee42, session_timestamp=2020-09-22T07:28:59.216Z, thread-id=1406, tx_id=C9A6CB8533416D791CBAE5689DC29D73783186CBB769365625E22072BEF75066}
[INFO ] 2020-09-22T07:28:59,242Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000009, flow-id=319db9c0-011f-462b-9895-045cd9f04632, invocation_id=b29b6bd6-f5d9-40e0-ab06-c44d9af2ee42, invocation_timestamp=2020-09-22T07:28:59.216Z, origin=O=Mock Company 1, L=London, C=GB, session_id=b29b6bd6-f5d9-40e0-ab06-c44d9af2ee42, session_timestamp=2020-09-22T07:28:59.216Z, thread-id=1406, tx_id=C9A6CB8533416D791CBAE5689DC29D73783186CBB769365625E22072BEF75066}
[INFO ] 2020-09-22T07:28:59,296Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=69814214-ce0b-4b7f-8169-17a27c4a5a62, invocation_id=d1046f49-7b7f-4f3f-9b82-10a4df3c1c66, invocation_timestamp=2020-09-22T07:28:59.122Z, origin=Only For Testing, session_id=d1046f49-7b7f-4f3f-9b82-10a4df3c1c66, session_timestamp=2020-09-22T07:28:59.122Z, thread-id=1406, tx_id=C9A6CB8533416D791CBAE5689DC29D73783186CBB769365625E22072BEF75066}
[INFO ] 2020-09-22T07:28:59,296Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=69814214-ce0b-4b7f-8169-17a27c4a5a62, invocation_id=d1046f49-7b7f-4f3f-9b82-10a4df3c1c66, invocation_timestamp=2020-09-22T07:28:59.122Z, origin=Only For Testing, session_id=d1046f49-7b7f-4f3f-9b82-10a4df3c1c66, session_timestamp=2020-09-22T07:28:59.122Z, thread-id=1406, tx_id=C9A6CB8533416D791CBAE5689DC29D73783186CBB769365625E22072BEF75066}
[INFO ] 2020-09-22T07:28:59,315Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=69814214-ce0b-4b7f-8169-17a27c4a5a62, invocation_id=d1046f49-7b7f-4f3f-9b82-10a4df3c1c66, invocation_timestamp=2020-09-22T07:28:59.122Z, origin=Only For Testing, session_id=d1046f49-7b7f-4f3f-9b82-10a4df3c1c66, session_timestamp=2020-09-22T07:28:59.122Z, thread-id=1406, tx_id=C9A6CB8533416D791CBAE5689DC29D73783186CBB769365625E22072BEF75066}
[INFO ] 2020-09-22T07:28:59,326Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000009, flow-id=319db9c0-011f-462b-9895-045cd9f04632, invocation_id=b29b6bd6-f5d9-40e0-ab06-c44d9af2ee42, invocation_timestamp=2020-09-22T07:28:59.216Z, origin=O=Mock Company 1, L=London, C=GB, session_id=b29b6bd6-f5d9-40e0-ab06-c44d9af2ee42, session_timestamp=2020-09-22T07:28:59.216Z, thread-id=1406, tx_id=C9A6CB8533416D791CBAE5689DC29D73783186CBB769365625E22072BEF75066}
[INFO ] 2020-09-22T07:28:59,335Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000009, flow-id=319db9c0-011f-462b-9895-045cd9f04632, invocation_id=b29b6bd6-f5d9-40e0-ab06-c44d9af2ee42, invocation_timestamp=2020-09-22T07:28:59.216Z, origin=O=Mock Company 1, L=London, C=GB, session_id=b29b6bd6-f5d9-40e0-ab06-c44d9af2ee42, session_timestamp=2020-09-22T07:28:59.216Z, thread-id=1406, tx_id=C9A6CB8533416D791CBAE5689DC29D73783186CBB769365625E22072BEF75066}
[INFO ] 2020-09-22T07:28:59,340Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000009, flow-id=319db9c0-011f-462b-9895-045cd9f04632, invocation_id=b29b6bd6-f5d9-40e0-ab06-c44d9af2ee42, invocation_timestamp=2020-09-22T07:28:59.216Z, origin=O=Mock Company 1, L=London, C=GB, session_id=b29b6bd6-f5d9-40e0-ab06-c44d9af2ee42, session_timestamp=2020-09-22T07:28:59.216Z, thread-id=1406, tx_id=C9A6CB8533416D791CBAE5689DC29D73783186CBB769365625E22072BEF75066}
[INFO ] 2020-09-22T07:28:59,355Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000009, flow-id=319db9c0-011f-462b-9895-045cd9f04632, invocation_id=b29b6bd6-f5d9-40e0-ab06-c44d9af2ee42, invocation_timestamp=2020-09-22T07:28:59.216Z, origin=O=Mock Company 1, L=London, C=GB, session_id=b29b6bd6-f5d9-40e0-ab06-c44d9af2ee42, session_timestamp=2020-09-22T07:28:59.216Z, thread-id=1406, tx_id=C9A6CB8533416D791CBAE5689DC29D73783186CBB769365625E22072BEF75066}
[INFO ] 2020-09-22T07:28:59,365Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=69814214-ce0b-4b7f-8169-17a27c4a5a62, invocation_id=d1046f49-7b7f-4f3f-9b82-10a4df3c1c66, invocation_timestamp=2020-09-22T07:28:59.122Z, origin=Only For Testing, session_id=d1046f49-7b7f-4f3f-9b82-10a4df3c1c66, session_timestamp=2020-09-22T07:28:59.122Z, thread-id=1406, tx_id=C9A6CB8533416D791CBAE5689DC29D73783186CBB769365625E22072BEF75066}
[INFO ] 2020-09-22T07:28:59,365Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=69814214-ce0b-4b7f-8169-17a27c4a5a62, invocation_id=d1046f49-7b7f-4f3f-9b82-10a4df3c1c66, invocation_timestamp=2020-09-22T07:28:59.122Z, origin=Only For Testing, session_id=d1046f49-7b7f-4f3f-9b82-10a4df3c1c66, session_timestamp=2020-09-22T07:28:59.122Z, thread-id=1406, tx_id=C9A6CB8533416D791CBAE5689DC29D73783186CBB769365625E22072BEF75066}
[INFO ] 2020-09-22T07:28:59,373Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-13) {}
[INFO ] 2020-09-22T07:28:59,376Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-14) {}
[INFO ] 2020-09-22T07:28:59,379Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-15) {}
[INFO ] 2020-09-22T07:28:59,483Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build\mock-network\20200922-072859.397\nodes\0\cordapps] {}
[INFO ] 2020-09-22T07:28:59,484Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/C:/tests/cordapp-example/workflows-kotlin/build/mock-network/20200922-072859.397/nodes/0/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/C:/tests/cordapp-example/workflows-kotlin/build/mock-network/20200922-072859.397/nodes/0/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-09-22T07:28:59,484Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/tests/cordapp-example/workflows-kotlin/build/mock-network/20200922-072859.397/nodes/0/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-09-22T07:28:59,668Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/tests/cordapp-example/workflows-kotlin/build/mock-network/20200922-072859.397/nodes/0/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2020-09-22T07:28:59,699Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2020-09-22T07:28:59,700Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-09-22T07:28:59,703Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-09-22T07:28:59,719Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-09-22T07:28:59,729Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-09-22T07:28:59.397Z
      epoch=1
  } {}
[INFO ] 2020-09-22T07:29:00,205Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:29:00,206Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build\mock-network\20200922-072859.397\nodes\0\network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:29:00,206Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:29:00,223Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:29:00,226Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:29:00,226Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:29:00,365Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:29:00,373Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:29:00,374Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:29:00,377Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:29:00,377Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:29:00,437Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:29:00,472Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-09-22T07:29:00,486Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-09-22T07:29:00,486Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-09-22T07:29:00,621Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-09-22T07:29:00,626Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-09-22T07:29:00,626Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1600759740626) {}
[INFO ] 2020-09-22T07:29:00,627Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-09-22T07:29:00,640Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1600759740626) {}
[INFO ] 2020-09-22T07:29:00,650Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-09-22T07:29:00,650Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2020-09-22T07:29:00,650Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2020-09-22T07:29:00,669Z [MockNode-16-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1600759740626) {}
[INFO ] 2020-09-22T07:29:00,673Z [MockNode-16-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-09-22T07:29:00,697Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=F135D116988720CF97DE75F55EDABE7C4F1D3ADC95FE763F3B43E90086C8C754 uploader=app filename=CorDapp Example {}
[INFO ] 2020-09-22T07:29:00,699Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-09-22T07:29:00,699Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-09-22T07:29:00,704Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1600759740626) {}
[INFO ] 2020-09-22T07:29:00,707Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1600759740626) {}
[INFO ] 2020-09-22T07:29:00,707Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-09-22T07:29:00,708Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1600759740626) {}
[INFO ] 2020-09-22T07:29:00,708Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-09-22T07:29:00,717Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build\mock-network\20200922-072859.397\nodes\1\cordapps] {}
[INFO ] 2020-09-22T07:29:00,718Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/C:/tests/cordapp-example/workflows-kotlin/build/mock-network/20200922-072859.397/nodes/1/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/C:/tests/cordapp-example/workflows-kotlin/build/mock-network/20200922-072859.397/nodes/1/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-09-22T07:29:00,718Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/tests/cordapp-example/workflows-kotlin/build/mock-network/20200922-072859.397/nodes/1/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-09-22T07:29:00,897Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/tests/cordapp-example/workflows-kotlin/build/mock-network/20200922-072859.397/nodes/1/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2020-09-22T07:29:00,917Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2020-09-22T07:29:00,917Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-09-22T07:29:00,920Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-09-22T07:29:00,963Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-09-22T07:29:00,965Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-09-22T07:28:59.397Z
      epoch=1
  } {}
[INFO ] 2020-09-22T07:29:01,337Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:29:01,339Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build\mock-network\20200922-072859.397\nodes\1\network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:29:01,339Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:29:01,351Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:29:01,353Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:29:01,353Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:29:01,447Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:29:01,456Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:29:01,457Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:29:01,462Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:29:01,462Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:29:01,539Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:29:01,544Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-09-22T07:29:01,547Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-09-22T07:29:01,547Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-09-22T07:29:01,654Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-09-22T07:29:01,655Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-09-22T07:29:01,695Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-09-22T07:29:01,695Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1600759741695) {}
[INFO ] 2020-09-22T07:29:01,696Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-09-22T07:29:01,702Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1600759741695) {}
[INFO ] 2020-09-22T07:29:01,709Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-09-22T07:29:01,709Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2020-09-22T07:29:01,709Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2020-09-22T07:29:01,724Z [MockNode-17-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1600759741695) {}
[INFO ] 2020-09-22T07:29:01,728Z [MockNode-17-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-09-22T07:29:01,757Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=F135D116988720CF97DE75F55EDABE7C4F1D3ADC95FE763F3B43E90086C8C754 uploader=app filename=CorDapp Example {}
[INFO ] 2020-09-22T07:29:01,763Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1600759741695) {}
[INFO ] 2020-09-22T07:29:01,765Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1600759740626) {}
[INFO ] 2020-09-22T07:29:01,766Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-09-22T07:29:01,778Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1600759741695) {}
[INFO ] 2020-09-22T07:29:01,780Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-09-22T07:29:01,790Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1600759741695) {}
[INFO ] 2020-09-22T07:29:01,790Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-09-22T07:29:01,790Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1600759741695) {}
[INFO ] 2020-09-22T07:29:01,790Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-09-22T07:29:01,799Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build\mock-network\20200922-072859.397\nodes\2\cordapps] {}
[INFO ] 2020-09-22T07:29:01,800Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/C:/tests/cordapp-example/workflows-kotlin/build/mock-network/20200922-072859.397/nodes/2/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/C:/tests/cordapp-example/workflows-kotlin/build/mock-network/20200922-072859.397/nodes/2/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-09-22T07:29:01,800Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/tests/cordapp-example/workflows-kotlin/build/mock-network/20200922-072859.397/nodes/2/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-09-22T07:29:01,965Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/tests/cordapp-example/workflows-kotlin/build/mock-network/20200922-072859.397/nodes/2/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2020-09-22T07:29:01,983Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2020-09-22T07:29:01,983Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-09-22T07:29:01,986Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-09-22T07:29:02,029Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-09-22T07:29:02,031Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-09-22T07:28:59.397Z
      epoch=1
  } {}
[INFO ] 2020-09-22T07:29:02,394Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:29:02,395Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build\mock-network\20200922-072859.397\nodes\2\network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:29:02,395Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:29:02,416Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:29:02,419Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:29:02,419Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:29:02,549Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:29:02,558Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:29:02,560Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:29:02,562Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:29:02,562Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:29:02,634Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-09-22T07:29:02,640Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-09-22T07:29:02,642Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-09-22T07:29:02,642Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-09-22T07:29:02,759Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-09-22T07:29:02,759Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-09-22T07:29:02,792Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-09-22T07:29:02,792Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1600759742792) {}
[INFO ] 2020-09-22T07:29:02,793Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-09-22T07:29:02,798Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1600759742792) {}
[INFO ] 2020-09-22T07:29:02,803Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-09-22T07:29:02,803Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2020-09-22T07:29:02,803Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2020-09-22T07:29:02,815Z [MockNode-18-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1600759742792) {}
[INFO ] 2020-09-22T07:29:02,820Z [MockNode-18-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-09-22T07:29:02,839Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=F135D116988720CF97DE75F55EDABE7C4F1D3ADC95FE763F3B43E90086C8C754 uploader=app filename=CorDapp Example {}
[INFO ] 2020-09-22T07:29:02,845Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1600759742792) {}
[INFO ] 2020-09-22T07:29:02,847Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1600759740626) {}
[INFO ] 2020-09-22T07:29:02,849Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-09-22T07:29:02,858Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1600759742792) {}
[INFO ] 2020-09-22T07:29:02,859Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-09-22T07:29:02,866Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1600759741695) {}
[INFO ] 2020-09-22T07:29:02,868Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-09-22T07:29:02,881Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1600759742792) {}
[INFO ] 2020-09-22T07:29:02,884Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-09-22T07:29:02,894Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1600759742792) {}
[INFO ] 2020-09-22T07:29:02,894Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-09-22T07:29:02,895Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1600759742792) {}
[INFO ] 2020-09-22T07:29:02,895Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2020-09-22T07:29:02,896Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.example.flow.ExampleFlow$Initiator, currently using: class com.example.flow.ExampleFlow$Acceptor {}
[INFO ] 2020-09-22T07:29:02,896Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2020-09-22T07:29:02,896Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.example.flow.ExampleFlow$Initiator, currently using: class com.example.flow.ExampleFlow$Acceptor {}
[INFO ] 2020-09-22T07:29:02,896Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-09-22T07:29:03,009Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000011, flow-id=1d047ac6-44ab-4fc5-8dad-24e98b052995, invocation_id=e693d29f-4cf5-4bad-813c-90631cb25c4d, invocation_timestamp=2020-09-22T07:29:02.993Z, origin=O=Mock Company 1, L=London, C=GB, session_id=e693d29f-4cf5-4bad-813c-90631cb25c4d, session_timestamp=2020-09-22T07:29:02.993Z, thread-id=1597, tx_id=4BB8D425CC96746393927BA5BF9909ECEDE833D6503A4BC390F83AD3FB4BEF82}
[INFO ] 2020-09-22T07:29:03,018Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000011, flow-id=1d047ac6-44ab-4fc5-8dad-24e98b052995, invocation_id=e693d29f-4cf5-4bad-813c-90631cb25c4d, invocation_timestamp=2020-09-22T07:29:02.993Z, origin=O=Mock Company 1, L=London, C=GB, session_id=e693d29f-4cf5-4bad-813c-90631cb25c4d, session_timestamp=2020-09-22T07:29:02.993Z, thread-id=1597, tx_id=4BB8D425CC96746393927BA5BF9909ECEDE833D6503A4BC390F83AD3FB4BEF82}
[INFO ] 2020-09-22T07:29:03,071Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000010, flow-id=17cf355a-27c7-4b8d-a710-81e4462d389c, invocation_id=8f04001b-2860-4898-9d92-7d9843fe8e9a, invocation_timestamp=2020-09-22T07:29:02.897Z, origin=Only For Testing, session_id=8f04001b-2860-4898-9d92-7d9843fe8e9a, session_timestamp=2020-09-22T07:29:02.897Z, thread-id=1597, tx_id=4BB8D425CC96746393927BA5BF9909ECEDE833D6503A4BC390F83AD3FB4BEF82}
[INFO ] 2020-09-22T07:29:03,071Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000010, flow-id=17cf355a-27c7-4b8d-a710-81e4462d389c, invocation_id=8f04001b-2860-4898-9d92-7d9843fe8e9a, invocation_timestamp=2020-09-22T07:29:02.897Z, origin=Only For Testing, session_id=8f04001b-2860-4898-9d92-7d9843fe8e9a, session_timestamp=2020-09-22T07:29:02.897Z, thread-id=1597, tx_id=4BB8D425CC96746393927BA5BF9909ECEDE833D6503A4BC390F83AD3FB4BEF82}
[INFO ] 2020-09-22T07:29:03,095Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000010, flow-id=17cf355a-27c7-4b8d-a710-81e4462d389c, invocation_id=8f04001b-2860-4898-9d92-7d9843fe8e9a, invocation_timestamp=2020-09-22T07:29:02.897Z, origin=Only For Testing, session_id=8f04001b-2860-4898-9d92-7d9843fe8e9a, session_timestamp=2020-09-22T07:29:02.897Z, thread-id=1597, tx_id=4BB8D425CC96746393927BA5BF9909ECEDE833D6503A4BC390F83AD3FB4BEF82}
[INFO ] 2020-09-22T07:29:03,104Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000011, flow-id=1d047ac6-44ab-4fc5-8dad-24e98b052995, invocation_id=e693d29f-4cf5-4bad-813c-90631cb25c4d, invocation_timestamp=2020-09-22T07:29:02.993Z, origin=O=Mock Company 1, L=London, C=GB, session_id=e693d29f-4cf5-4bad-813c-90631cb25c4d, session_timestamp=2020-09-22T07:29:02.993Z, thread-id=1597, tx_id=4BB8D425CC96746393927BA5BF9909ECEDE833D6503A4BC390F83AD3FB4BEF82}
[INFO ] 2020-09-22T07:29:03,110Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000011, flow-id=1d047ac6-44ab-4fc5-8dad-24e98b052995, invocation_id=e693d29f-4cf5-4bad-813c-90631cb25c4d, invocation_timestamp=2020-09-22T07:29:02.993Z, origin=O=Mock Company 1, L=London, C=GB, session_id=e693d29f-4cf5-4bad-813c-90631cb25c4d, session_timestamp=2020-09-22T07:29:02.993Z, thread-id=1597, tx_id=4BB8D425CC96746393927BA5BF9909ECEDE833D6503A4BC390F83AD3FB4BEF82}
[INFO ] 2020-09-22T07:29:03,114Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000011, flow-id=1d047ac6-44ab-4fc5-8dad-24e98b052995, invocation_id=e693d29f-4cf5-4bad-813c-90631cb25c4d, invocation_timestamp=2020-09-22T07:29:02.993Z, origin=O=Mock Company 1, L=London, C=GB, session_id=e693d29f-4cf5-4bad-813c-90631cb25c4d, session_timestamp=2020-09-22T07:29:02.993Z, thread-id=1597, tx_id=4BB8D425CC96746393927BA5BF9909ECEDE833D6503A4BC390F83AD3FB4BEF82}
[INFO ] 2020-09-22T07:29:03,121Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000011, flow-id=1d047ac6-44ab-4fc5-8dad-24e98b052995, invocation_id=e693d29f-4cf5-4bad-813c-90631cb25c4d, invocation_timestamp=2020-09-22T07:29:02.993Z, origin=O=Mock Company 1, L=London, C=GB, session_id=e693d29f-4cf5-4bad-813c-90631cb25c4d, session_timestamp=2020-09-22T07:29:02.993Z, thread-id=1597, tx_id=4BB8D425CC96746393927BA5BF9909ECEDE833D6503A4BC390F83AD3FB4BEF82}
[INFO ] 2020-09-22T07:29:03,131Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000010, flow-id=17cf355a-27c7-4b8d-a710-81e4462d389c, invocation_id=8f04001b-2860-4898-9d92-7d9843fe8e9a, invocation_timestamp=2020-09-22T07:29:02.897Z, origin=Only For Testing, session_id=8f04001b-2860-4898-9d92-7d9843fe8e9a, session_timestamp=2020-09-22T07:29:02.897Z, thread-id=1597, tx_id=4BB8D425CC96746393927BA5BF9909ECEDE833D6503A4BC390F83AD3FB4BEF82}
[INFO ] 2020-09-22T07:29:03,131Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000010, flow-id=17cf355a-27c7-4b8d-a710-81e4462d389c, invocation_id=8f04001b-2860-4898-9d92-7d9843fe8e9a, invocation_timestamp=2020-09-22T07:29:02.897Z, origin=Only For Testing, session_id=8f04001b-2860-4898-9d92-7d9843fe8e9a, session_timestamp=2020-09-22T07:29:02.897Z, thread-id=1597, tx_id=4BB8D425CC96746393927BA5BF9909ECEDE833D6503A4BC390F83AD3FB4BEF82}
[INFO ] 2020-09-22T07:29:03,235Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-16) {}
[INFO ] 2020-09-22T07:29:03,239Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-17) {}
[INFO ] 2020-09-22T07:29:03,242Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-18) {}
